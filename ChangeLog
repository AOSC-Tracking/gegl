2006-07-04  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-utils.c (gegl_rect_bounding_box): Added a missing 'else' that
	  was breaking rect calculations.

2006-07-03  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-node.c (gegl_node_set_valist): Pass all properties following
	  a "class" property as construction properties to the created operation
	  so that they may be used in initialization. This means that the "name"
	  property should appear before the "class" property if used.

2006-07-03  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-cr-visitor.c,
	* gegl/gegl-debug-rect-visitor.c,
	* gegl/gegl-node.[ch],
	* gegl/gegl-operation.[ch]: Removed comp_rect since there are currently
	  no plans to use it.

2006-07-03  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-cr-visitor.c,
	* gegl/gegl-debug-rect-visitor.c,
	* gegl/gegl-eval-visitor.c,
	* gegl/gegl-graph.c,
	* gegl/gegl-have-visitor.c,
	* gegl/gegl-need-visitor.c,
	* gegl/gegl-object.[ch],
	* gegl/gegl-operation.c,
	* gegl/gegl-pad.c: Removed unused/unnecessary code.

2006-07-02  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-eval-mgr.c: Clean root node's pads after evaluating.
	  This fixes a memory leak when using an operation with output (non-sink)
	  as the root.

2006-06-28  Øyvind Kolås  <pippin@gimp.org>

	* AUTHORS: added Philip Lafleur

2006-06-28  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: changed REMAINDER macro to provide
	  correct results for negative values that are a multiple of the
	  remainder.

2006-06-27  Philip Lafleur  <plafleur@cvs.gnome.org>

	* gegl/gegl-eval-mgr.c,
	* gegl/gegl-have-visitor.c,
	* gegl/gegl-need-visitor.c,
	* gegl/gegl-node.[ch],
	* gegl/gegl-operation-composer.c,
	* gegl/gegl-operation-filter.c,
	* gegl/gegl-operation-source.c,
	* gegl/gegl-operation.[ch]: Changed API for need_rect calculation;
	  A node's need_rect should be what is needed from it by its parents,
	  not what it needs from its children. An operation sets the need_rects
	  of its children using gegl_operation_set_need_rect(self) in its
	  calc_need_rect() function.

2006-06-25  Øyvind Kolås  <pippin@gimp.org>

	* tests/Makefile.am: Added babl cflags to compilation of tests.

2006-06-25  Øyvind Kolås  <pippin@gimp.org>

	Removed (defunct) references to in-place processing.

	* gegl/gegl-operation-composer.[ch]:
	(gegl_operation_composer_class_init),
	(gegl_operation_composer_init), (get_property), (set_property):

2006-06-25  Øyvind Kolås  <pippin@gimp.org>
	
	Added abstract base classes for source, filter and composer
	operations that use GeglBuffers.

	* gegl/Makefile.am: Added new files.
	* gegl/gegl-operation-composer.[ch],
	* gegl/gegl-operation-filter.[ch],
	* gegl/gegl-operation-source.[ch]: Added files.

2006-06-25  Øyvind Kolås  <pippin@gimp.org>

	Another installed change of organization of installed headers.

	* gegl/gegl.h: changed path of buffer.
	* gegl/buffer/Makefile.am: install headers in seperate subdir.

2006-06-25  Øyvind Kolås  <pippin@gimp.org>
	Changed the way the headers are installed to mimick glib.
	gegl.h is installed in prefix/include/gegl-x.x/gegl.h and
	the rest in a gegl subdir in that directory.

	If you've got an existing GEGL installation you need to
	perform a rm -rf on your gegl include dir before doing
	make install, for the header enviroment to be correct.
	
	* gegl.pc.in: Changed specified path.
	* gegl/Makefile.am: Added a new subdir path to install headers in.
	* gegl/gegl-xml.h: changed header to handle change.
	* gegl/gegl.h: include headers with path.

2006-06-24  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.h, gegl/buffer/gegl-tile-backend.c:
	  modified to include babl/babl.h instead of just babl.h
	* gegl/gegl-init.c: (gegl_exit): added BABL_DEBUG_BUFS for enabling
	tile/buffer refererence leaks.

2006-06-23  Øyvind Kolås  <pippin@gimp.org>

	Added a function to serialize a graph of gegl nodes, either starting
	with a container graph, or a node to an XML structure.

	The XML structure is the same structure that is supported in the
	parser, it is a hierarchical representation of the graph which allows
	clones. This is capable of supporting any graph as long as the node
	types are limited to sources (1 output), filters (1 input 1 output)
	and composers (2 inputs 1 output).

	* gegl/gegl-xml.h: (gegl_to_xml).
	* gegl/gegl-xml.c: (gegl_xml_parse), (tuple),
	(encode_node_attributes), (add_stack), (free_clone_id),
	(gegl_to_xml): Added xml serializer.

2006-06-23  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: Added missing return type. (gint).

2006-06-22  Øyvind Kolås  <pippin@gimp.org>

	Gave the tile offset and indice computation functions more descriptive
	names.

	* gegl/buffer/gegl-buffer.c:
	  (REMAINDER): a macro to work around the lack of well definedness
	  of % for negative numbers in C.
	  (tile_indice): new name for indice()
	  (tile_offset): new name for toff()
	  (gegl_buffer_iterate_fmt), (gegl_buffer_void): use the new names.

2006-06-21  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/Makefile.am: remove extranous / in header install path.

2006-06-21  Øyvind Kolås  <pippin@gimp.org>

	* TODO: updated wording of the GEGL buffer todo item.

2006-06-20  Jakub Steiner <jimmac@ximian.com>

	* /docs/images/gegl-logo.svg: convert text to paths and fix the
	  positioning a little.
	
2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	* TODO: multithreading of evaluation.

2006-06-20  Øyvind Kolås  <pippin@gimp.org>

	Reduced the memory usage of GEGL significantly by freeing up temporary
	buffers immediatly when they are no longer needed.

	* gegl/gegl-node.[ch]: added refs member to GeglNode struct, which
	indicates how many references (uses) of this nodes pads will occur in
	a processing of the composition.
	* gegl/gegl-cr-visitor.c: (visit_node): set refs to the number of
						sinks at the same time as
						computation of comp and
						result rects.
	* gegl/gegl-debug-rect-visitor.c: (visit_node): output the number of
							refs when showing
	* gegl/gegl-operation.[ch]: (gegl_operation_class_init),
	(gegl_operation_associate), (clean_pads),
	(gegl_operation_clean_pads):
							debug information.
	* gegl/gegl-eval-visitor.c: (visit_pad): decrement node->refs, and
						 invoke
						 operation->clean_pads() when
						 it drops to 0
	* gegl/gegl-operation.[ch]: (gegl_operation_class_init),
	(gegl_operation_associate), (clean_pads),
	(gegl_operation_clean_pads): Added virtual method clean_pads() which
				     unrefs the data stored at the output pads
				     when it is no longer needed.

2006-06-20  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-tile.c: (gegl_tile_lock), (gegl_tile_unlock):
	commented out call to dirtying, since it is not in use at the moment.

2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-operation.[ch]: removed dead code.

2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	Removed dirty flag from pads, it is currently unused.

	* gegl/gegl-pad.[ch]: (gegl_pad_init), (visitable_needs_visiting):

2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	* TODO: removed finished tasks, added refactoring of buffer
	implementation to support multiple backends.

2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	Added the ability to have one input, and one output ghost pad for a
	graph. At the moment it uses the "nop" operation, and thus only works
	for buffer pads. This works for simple uses of embedding graphs/trees
	in xml, but might not be sufficient at a later stage.

	* gegl/gegl-graph.[ch]:
	  (gegl_graph_get_output_nop),
	  (gegl_graph_get_input_nop): Added methods to get a routing "nop"
	  node that can be used when connecting the nodes inside the graph to
	  the graph itself. After these have been called the first time the
	  graph (node superclass) will have the corresponding pads as well.

	* gegl/gegl-eval-mgr.c: (gegl_eval_mgr_apply): Changed to reflect the
	new ghost pads.
	* gegl/gegl-node.c: (gegl_node_get_depends_on): Follow connections to
	graphs to the Nop corresponding to the pad.
	* gegl/gegl-xml.c: (start_element), (end_element),
	(gegl_xml_parse): Allow trees to be nested when parsing the XML.

2006-06-19  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-debug-rect-visitor.c: (visit_node): Improved debugging
	output a bit, and removed unused variable.

2006-06-17  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: (gegl_buffer_iterate_fmt): Iterate all
	scanlines withing a tilerow,. not only the first.

2006-06-14  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer-allocator.[ch]:
	  (gegl_buffer_allocators_free): New function, 
	  Free the underlying tiled buffers used as allocation pools for various
	  pixel formats.
	* gegl/gegl-init.c: (gegl_exit): Call the above function, as well as
	a, ifdefed out block that enable dumping of buffer/tile stats.

2006-06-14  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-xml.c: (gegl_xml_parse): redirect the output pad (this
	hack leads to leaking of buffers at the moment. Graphs needs the
	ability to route output from one of the interior nodes.

2006-06-13  Øyvind Kolås  <pippin@gimp.org>

	Register a name for the operations, and use that through a "class"
	property and not "operation" when instantiating nodes.

	* gegl/gegl-node.c: (gegl_node_class_init), (set_property),
	(get_property), (g_type_from_op_class2), (g_type_from_op_class),
	(gegl_node_set_op_class), (gegl_node_get_op_class),
	(gegl_node_set_valist), (gegl_node_get_valist),
	(gegl_node_set_property), (gegl_node_get_property):
	* gegl/gegl-operation.c: (gegl_operation_class_init),
	(gegl_operation_init), (gegl_operation_class_set_name),
	(gegl_operation_get_name):
	* gegl/gegl-operation.h:
	* gegl/gegl-xml.c: (start_element):

2006-06-13  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: (gegl_buffer_dispose): do not set the
	trait->source = NULL when disposing it leads to leaks, for now just
	accept that the buffer might be vodied multiple times.

2006-06-12  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: (get_tile): removed unused variables.

2006-06-12  Øyvind Kolås  <pippin@gimp.org>

	Added instrumentation to voiding of tiles.

	* gegl/buffer/gegl-buffer-allocator.c: (gegl_buffer_alloc): reduced
	abyss safety margins.
	* gegl/buffer/gegl-buffer.c: (gegl_buffer_dispose): moved back here
	from finalize, but doing a nasty hack to make sure we're only run
	once.
	* gegl/buffer/gegl-tile-mem.c: (gegl_tile_mem_stats), (dbg_alloc),
	(dbg_dealloc), (mem_entry_destroy), (mem_priv_set_tile),
	(mem_priv_void_tile), (void_tile): Added instrumentation to tile chunk
	allocations. Fixed voiding handler.

2006-06-12  Øyvind Kolås  <pippin@gimp.org>

	Made abyss behavior correct in detailed mode as well.

	* gegl/buffer/gegl-buffer.c: (gegl_buffer_constructor),
	(gegl_buffer_init), (gegl_buffer_iterate_fmt): Made abyss be stored in
	the buffer, and applied directly during iteration.
	* gegl/buffer/gegl-tile-abyss.[ch]: REMOVED.
	* gegl/buffer/Makefile.am:

2006-06-11  Øyvind Kolås  <pippin@gimp.org>

	Added a GMarkup SAX parser for a tree structure that can contain
	layers, layer groups, "effect layers" and clones.

	* gegl/gegl-xml.h: The parser.
	* gegl/gegl.h: include the header for the parser.
	* gegl/Makefile.am: add gegl-xml.[ch]

2006-06-10  Øyvind Kolås  <pippin@gimp.org>

	When finally voiding (freeing) tiles associated with buffers
	do it in a finalize handler and not in the dispose handler 
	(the same tiles were sometimes being voided multiple times).

	* gegl/buffer/gegl-buffer.c:
	  (gegl_buffer_dispose): moved to
	  (gegl_buffer_finalize),
	  (gegl_buffer_class_init): s/dispose/finalize.

2006-06-08  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-eval-mgr.c: (gegl_eval_mgr_apply): temporary(?) hack to
	make output ghost pads possible for GeglGraphs.

2006-06-05  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.c: (gegl_node_class_init): changed blurb of
	operation-object property.

2006-06-05  Øyvind Kolås  <pippin@gimp.org>

	Added instrumentation for buffer allocations, and voiding of the
	reserved data for bottom level buffers.

	* gegl/buffer/gegl-buffer.[ch]:
		(gegl_buffer_stats): prints,. buffer allocation statistics.
	        (gegl_buffer_dispose): record stats
		(gegl_buffer_constructor),
	(gegl_buffer_init), (gegl_buffer_iterate_fmt), (gegl_buffer_set),
	(gegl_buffer_void):

2006-06-04  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer-allocator.h: add prototoype for get_type
	function.

2006-06-04  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer-allocator.c: store allocators for different
	pixel formats in a hash.

2006-06-04  Øyvind Kolås  <pippin@gimp.org>
	
	* gegl/gegl-operation.c: (gegl_operation_have_rect): return NULL
	if node not connected to another node.

2006-06-04  Øyvind Kolås  <pippin@gimp.org>

	* README: borught slightly more in sync with rest of GEGL.

2006-06-03  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.[ch]:
	    (gegl_buffer_size): removed.
	  (gegl_buffer_pixels): added.

2006-06-03  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer-allocator.c:
	(gegl_buffer_allocator_init), (gegl_buffer_alloc): Increased safety
	distances in allocation. There are geometric out of bounds accesses
	without this.

2006-06-03  Øyvind Kolås  <pippin@gimp.org>

	* gegl/buffer/gegl-buffer.c: (gegl_buffer_constructor),
	(gegl_buffer_iterate_fmt), (gegl_buffer_set), (gegl_buffer_get),
	(gegl_buffer_set_fmt), (gegl_buffer_get_fmt): Removed the need for
	a temporary buffer, but use babl for converting scanlines from tile to
	buffer.

2006-06-03  Øyvind Kolås  <pippin@gimp.org>

	Made it possible to enable output of debug rectangles if the
	enviroment variable GEGL_DEBUG_RECTS is set.

	* gegl/gegl-debug-rect-visitor.c: (visit_node):
	* gegl/gegl-eval-mgr.c: (gegl_eval_mgr_apply):

2006-06-03  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-debug-rect-visitor.c: (visit_node):
	* gegl/gegl-eval-mgr.c: (gegl_eval_mgr_apply):

2006-06-02  Øyvind Kolås  <pippin@gimp.org>

	* TODO: updated the roadmap (made notes about what things are done,
	it seems like we've come a long way since the TODO file was added
	one year ago.

2006-06-02  Sven Neumann  <sven@gimp.org>

	* configure.in: no need to AC_SUBST the variables set by
	PKG_CHECK_MODULES().

2006-06-02  Øyvind Kolås  <pippin@gimp.org>

	Made the gegl-buffer babl aware.

	* configure.in: Added babl as a dependency
	* gegl.pc.in: Added babl as a dependency
	* gegl/Makefile.am: Added babl to includes / LDFLAGS
	* gegl/buffer/Makefile.am: Install header files (just dumping then in
	the GEGL dir for now).

	* gegl/buffer/gegl-buffer.[ch]: (gegl_buffer_get_format),
	(gegl_buffer_px_size), (gegl_buffer_size), (gegl_buffer_iterate),
	(gegl_buffer_set), (gegl_buffer_get), (gegl_buffer_set_fmt),
	(gegl_buffer_get_fmt): Added methods to set/get linear buffers through
	babl backed conversions.
	* gegl/buffer/gegl-storage.c: (get_property), (set_property),
	(gegl_storage_dispose), (gegl_storage_constructor): completing renaming
	from buffer->storage.
	* gegl/buffer/gegl-tile-backend.c: (get_property), (set_property),
	(constructor), (gegl_tile_backend_class_init):
	* gegl/buffer/gegl-tile-backend.h: correctly set format when passed in
	to constructor.
	* gegl/gegl-init.c: (gegl_init), (gegl_exit): init/deinit babl.
	* gegl/gegl.h: include gegl-buffer as well.

2006-06-02  Øyvind Kolås  <pippin@gimp.org>

	Made child rectangles be computed correctly when there are multiple
	outputs from a node.

	* gegl/gegl-node.[ch]: (consumer_nodes),
	(gegl_node_get_requested_rect): Correctly sum up child requests.
	* gegl/gegl-operation.[ch]: (gegl_operation_get_requested_rect):

2006-05-31  Øyvind Kolås  <pippin@gimp.org>

	Added new tiled buffer implementation.

	* configure.in:
	* gegl/Makefile.am:
	* gegl/buffer/: new directory
	* gegl/buffer/Makefile.am:
	* gegl/buffer/gegl-buffer-allocator.c:
	(gegl_buffer_allocator_class_init), (gegl_buffer_allocator_init),
	(gegl_buffer_alloc), (gegl_buffer_new_from_format):
	* gegl/buffer/gegl-buffer-allocator.h:
	* gegl/buffer/gegl-buffer-types.h:
	* gegl/buffer/gegl-buffer.c: (indice), (toff), (needed_tiles),
	(needed_width), (get_property), (set_property),
	(gegl_buffer_dispose), (gegl_buffer_backend),
	(gegl_buffer_storage), (gegl_buffer_constructor), (get_tile),
	(gegl_buffer_class_init), (gegl_buffer_init),
	(gegl_buffer_void_tile), (gegl_buffer_idle),
	(gegl_buffer_get_format), (gegl_buffer_add_dirty),
	(gegl_buffer_flush_dirty), (gegl_buffer_is_dirty),
	(gegl_buffer_iterate), (gegl_buffer_set), (gegl_buffer_get):
	* gegl/buffer/gegl-buffer.h:
	* gegl/buffer/gegl-storage.c: (get_property), (set_property),
	(gegl_storage_dispose), (gegl_storage_constructor),
	(gegl_storage_class_init), (gegl_storage_init):
	* gegl/buffer/gegl-storage.h:
	* gegl/buffer/gegl-tile-abyss.c: (finalize), (get_tile), (message),
	(get_property), (set_property), (constructor),
	(gegl_tile_abyss_class_init), (gegl_tile_abyss_init):
	* gegl/buffer/gegl-tile-abyss.h:
	* gegl/buffer/gegl-tile-backend.c: (get_property), (set_property),
	(constructor), (gegl_tile_backend_class_init),
	(gegl_tile_backend_init):
	* gegl/buffer/gegl-tile-backend.h:
	* gegl/buffer/gegl-tile-cache.c: (finalize), (dispose), (get_tile),
	(message), (get_property), (set_property),
	(gegl_tile_cache_class_init), (gegl_tile_cache_init),
	(gegl_tile_cache_new), (gegl_tile_cache_wash),
	(gegl_tile_cache_get_tile), (gegl_tile_cache_has_tile),
	(gegl_tile_cache_trim), (gegl_tile_cache_void),
	(gegl_tile_cache_insert):
	* gegl/buffer/gegl-tile-cache.h:
	* gegl/buffer/gegl-tile-empty.c: (finalize), (get_tile),
	(get_property), (set_property), (constructor),
	(gegl_tile_empty_class_init), (gegl_tile_empty_init):
	* gegl/buffer/gegl-tile-empty.h:
	* gegl/buffer/gegl-tile-log.c: (get_tile), (message),
	(gegl_tile_log_class_init), (gegl_tile_log_init):
	* gegl/buffer/gegl-tile-log.h:
	* gegl/buffer/gegl-tile-mem.c: (mem_entry_new),
	(mem_entry_destroy), (mem_bank_new), (mem_bank_destroy),
	(mem_priv_new), (mem_priv_destroy), (mem_priv_get_tile),
	(mem_priv_set_tile), (mem_priv_void_tile), (get_tile), (set_tile),
	(void_tile), (message), (set_property), (get_property), (finalize),
	(gegl_tile_mem_class_init), (gegl_tile_mem_init):
	* gegl/buffer/gegl-tile-mem.h:
	* gegl/buffer/gegl-tile-store.c: (get_tile), (message),
	(gegl_tile_store_class_init), (gegl_tile_store_init),
	(gegl_tile_store_get_tile), (gegl_tile_store_message):
	* gegl/buffer/gegl-tile-store.h:
	* gegl/buffer/gegl-tile-trait.c: (dispose), (get_tile), (message),
	(get_property), (set_property), (gegl_tile_trait_class_init),
	(gegl_tile_trait_init):
	* gegl/buffer/gegl-tile-trait.h:
	* gegl/buffer/gegl-tile-traits.c: (gegl_tile_traits_nuke_cache),
	(dispose), (finalize), (get_tile), (message),
	(gegl_tile_traits_class_init), (gegl_tile_traits_init),
	(gegl_tile_traits_rebind), (gegl_tile_traits_add),
	(gegl_tile_traits_get_first):
	* gegl/buffer/gegl-tile-traits.h:
	* gegl/buffer/gegl-tile.c: (get_property), (set_property),
	(dispose), (gegl_tile_class_init), (gegl_tile_init),
	(gegl_tile_new_from_data), (gegl_tile_dup), (gegl_tile_new),
	(gegl_tile_unclone), (gegl_tile_lock), (gegl_tile_unlock),
	(gegl_tile_is_stored), (gegl_tile_void), (gegl_tile_cpy),
	(gegl_tile_swp), (gegl_tile_get_data), (gegl_tile_store):
	* gegl/buffer/gegl-tile.h:

2006-05-31  Øyvind Kolås  <pippin@gimp.org>

	Removed old buffer implementation, a tile management system, built to
	coexist with babl will replace it.

	* configure.in,
	* gegl/Makefile.am,
	* gegl/image/.cvsignore,
	* gegl/image/Makefile.am,
	* gegl/image/gegl-buffer-double.c,
	* gegl/image/gegl-buffer-double.h,
	* gegl/image/gegl-buffer.c,
	* gegl/image/gegl-buffer.h,
	* gegl/image/gegl-cache-entry.c,
	* gegl/image/gegl-cache-entry.h,
	* gegl/image/gegl-cache-store.c,
	* gegl/image/gegl-cache-store.h,
	* gegl/image/gegl-cache.c,
	* gegl/image/gegl-cache.h,
	* gegl/image/gegl-color-model.c,
	* gegl/image/gegl-color-model.h,
	* gegl/image/gegl-color-space-imp.h,
	* gegl/image/gegl-color-space.h,
	* gegl/image/gegl-component-sample-model.c,
	* gegl/image/gegl-component-sample-model.h,
	* gegl/image/gegl-entry-record.c,
	* gegl/image/gegl-entry-record.h,
	* gegl/image/gegl-heap-cache-store.c,
	* gegl/image/gegl-heap-cache-store.h,
	* gegl/image/gegl-heap-cache.c,
	* gegl/image/gegl-heap-cache.h,
	* gegl/image/gegl-image-types.h,
	* gegl/image/gegl-normalizer-mult.c,
	* gegl/image/gegl-normalizer-mult.h,
	* gegl/image/gegl-normalizer.c,
	* gegl/image/gegl-normalizer.h,
	* gegl/image/gegl-null-cache-store.c,
	* gegl/image/gegl-null-cache-store.h,
	* gegl/image/gegl-sample-model.c,
	* gegl/image/gegl-sample-model.h,
	* gegl/image/gegl-swap-cache-store.c,
	* gegl/image/gegl-swap-cache-store.h,
	* gegl/image/gegl-swap-cache.c,
	* gegl/image/gegl-swap-cache.h,
	* gegl/image/gegl-tile-iterator.h,
	* gegl/image/gegl-tile.h: Removed.

2006-05-31  Øyvind Kolås  <pippin@gimp.org>
	
	Removed gegl/image related tests.

	* tests/gegl-image-buffer-caching-test.c,
	* tests/gegl-image-buffer-double-test.c,
	* tests/gegl-image-cache-store-tests.c,
	* tests/gegl-image-cache-store-tests.h,
	* tests/gegl-image-cache-tests.c,
	* tests/gegl-image-cache-tests.h,
	* tests/gegl-image-component-sample-model-test.c,
	* tests/gegl-image-entry-record-test.c,
	* tests/gegl-image-heap-cache-store-test.c,
	* tests/gegl-image-heap-cache-tests.c,
	* tests/gegl-image-memory-cache-test.c,
	* tests/gegl-image-mock-cache-entry-test.c,
	* tests/gegl-image-mock-cache-entry.c,
	* tests/gegl-image-mock-cache-entry.h,
	* tests/gegl-image-null-cache-store-test.c,
	* tests/gegl-image-swap-cache-store-test.c,
	* tests/gegl-image-swap-cache-test.c: Removed.
	* tests/Makefile.am,
	* tests/testgegl.c: (main): Changed to reflect test removal.

2006-05-31  Sven Neumann  <sven@gimp.org>

	* configure.in: define G_DISABLE_DEPRECATED if compiling against
	glib <= 2.11.

2006-05-31  Øyvind Kolås  <pippin@gimp.org>

	* gegl/Makefile.am: added new classes.
	* gegl/gegl-types.h: Added types for the new classes.
	* gegl/gegl-eval-mgr.h: added the ROI being requested to the instance
	struct of the eval manager.
	* gegl/gegl-eval-mgr.c: Traverse the graph for have, need, and
	compute/result rectangles for the region of interest computation.
	* gegl/gegl-debug-rect-visitor.[ch]:
	* gegl/gegl-cr-visitor.[ch]:
	* gegl/gegl-have-visitor.[ch]:
	* gegl/gegl-need-visitor.[ch]:

2006-05-31  Øyvind Kolås  <pippin@gimp.org>

	Added infrastructure to compute ROI as outlined in:
	http://portal.acm.org/citation.cfm?id=192191 to Node and Operation
	classes. (these code paths needs to be untangled at some point).

	This commit also contains some improvements to the error messages
	generated by sanity checking of arguments etc.

	* gegl/gegl-node.c: (pads_exist), (gegl_node_apply_roi),
	(gegl_node_set_operation), (gegl_node_set_valist),
	(gegl_node_get_valist), (gegl_node_get_op_type_name),
	(gegl_node_set_have_rect), (gegl_node_get_have_rect),
	(gegl_node_set_need_rect), (gegl_node_set_comp_rect),
	(gegl_node_get_need_rect), (gegl_node_get_debug_name):
	* gegl/gegl-node.h:
	* gegl/gegl-operation.c: (gegl_operation_class_init),
	(gegl_operation_calc_have_rect), (gegl_operation_calc_need_rect),
	(gegl_operation_calc_comp_rect), (gegl_operation_calc_result_rect),
	(associate), (gegl_operation_set_have_rect),
	(gegl_operation_get_have_rect), (gegl_operation_set_need_rect),
	(gegl_operation_set_comp_rect), (gegl_pad_get_connected_to2),
	(gegl_operation_get_need_rect), (calc_have_rect), (calc_need_rect),
	(calc_comp_rect), (calc_result_rect), (gegl_operation_need_rect),
	(gegl_operation_have_rect), (gegl_operation_result_rect),
	(gegl_operation_comp_rect):
	* gegl/gegl-operation.h:

2006-05-15  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-connection.c,
	  gegl/gegl-connection.h,
	  gegl/gegl-eval-mgr.c,
	  gegl/gegl-eval-mgr.h,
	  gegl/gegl-eval-visitor.c,
	  gegl/gegl-eval-visitor.h,
	  gegl/gegl-graph.c,
	  gegl/gegl-graph.h,
	  gegl/gegl-init.c,
	  gegl/gegl-init.h,
	  gegl/gegl-node.c,
	  gegl/gegl-node.h,
	  gegl/gegl-object.c,
	  gegl/gegl-object.h,
	  gegl/gegl-operation.c,
	  gegl/gegl-operation.h,
	  gegl/gegl-pad.c,
	  gegl/gegl-pad.h,
	  gegl/gegl-types.h,
	  gegl/gegl-utils.c,
	  gegl/gegl-utils.h,
	  gegl/gegl-visitable.c,
	  gegl/gegl-visitable.h,
	  gegl/gegl-visitor.c,
	  gegl/gegl-visitor.h,
	  gegl/gegl.h: changed license in source files to LGPL, it was
	  mistakingly applied as GPL 2003-12-21.

2006-04-05  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.c: (gegl_node_set_valist), (gegl_node_get_valist):
	Made va_list setters/getter error message tolerant to nodes without
	associated operation object.

2006-03-30  Manish Singh  <yosh@gimp.org>

	* autogen.sh: sync up with GIMP's autogen.sh. Should fix #336534.

2006-03-11  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.c: (pads_exist), (gegl_node_set_operation),
	(gegl_node_set_valist), (gegl_node_get_valist): Improved error
	reporting, set Operation type to "OpNop" if type lookup fails (the
	name of this operation will probably change, and it currently only
	exists outside GEGL.)

2006-03-07  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.c: (finalize): unref associated operation in
	finalizer.

2006-01-11  Sven Neumann  <sven@gimp.org>

	* autogen.sh: commented out remaining traces of checks for
	glib-gettextize and intltool since we are currently not using any
	internationalization features. Also prefer newer versions of
	automake over older ones.

2005-07-31  Sven Neumann  <sven@gimp.org>

	* gegl/gegl-visitor.c (gegl_visitor_visit_node): fixed function name.

2005-07-31  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-graph.c
	* gegl/gegl-node.c
	* gegl/gegl-types.h
	* gegl/gegl-utils.c
	* gegl/gegl-visitor.c: reindented.

2005-07-31  Øyvind Kolås  <pippin@gimp.org>

	* ChangeLog: added missing entry.

2005-07-31  Øyvind Kolås  <pippin@gimp.org>

	* tests/bfspadvisitortest.o
	* tests/dfspadvisitortest.o
	* tests/gegl-mock-pad-visitor.o
	* tests/padconnectionstest.o
	* tests/updatepadtest.o: removed from repository

2005-07-31  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-connection.[c]
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-graph.c
	* gegl/gegl-object.[ch] 
	* gegl/gegl-pad.[ch]
	* gegl/gegl-visitor.[ch]: Make consistent use of using self as the
	object instance.
	* gegl/gegl-node.[c]: added gegl_node_list_properties ()
	* gegl/gegl-operation.[ch]: Made descendant class of GObject instead

2005-07-30  Øyvind Kolås  <pipipn@gimp.org>

	* gegl/gegl-operation.[ch]: removed gegl_operation_{set|get}_node.

2005-07-30  Øyvind Kolås  <pipipn@gimp.org>

	* gegl/gegl-node.[ch]: Finished gegl_node_set and gegl_node_get
	operations.
	* gegl/gegl-graph.[ch]: added gegl_graph_create_node()
	* tests/
	* tests/bfspadvisitortest.o
	* tests/dfspadvisitortest.o
	* tests/gegl-mock-pad-visitor.o
	* tests/mockimageoperationtest.c
	* tests/padconnectionstest.o
	* tests/updatepadtest.o: modified to use above mentioned api's.

2005-07-29  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.[ch]
	* gegl/gegl-operation.[ch]: Refactored to use compostion instead
	of inheritance for node<->operation relation.
	* gegl/gegl-pad.c 
	* gegl/gegl-pad.h 
	* gegl/gegl-eval-visitor.c: Modified to reflect changes.

	* tools/make-init-types.sh: Added a tool to generate a function to
	reference all types.

	* tests/Makefile.am: Added rules to make gegl-tests-init-types.c
	* tests/testgegl.c: Added referencing of built in types, do stack
	trace upon crash.
	
	* tests/bfspadvisitortest.c:
	* tests/dfsnodevisitortest.c:
	* tests/dfspadvisitortest.c:
	* tests/gegl-image-buffer-double-test.c:
	* tests/gegl-mock-image-operation.c:
	* tests/gegl-mock-operation-0-1.c:
	* tests/gegl-mock-operation-1-1.c:
	* tests/gegl-mock-operation-2-1.c:
	* tests/gegl-mock-operation-2-2.c:
	* tests/graphtest.c:
	* tests/mockimageoperationtest.c:
	* tests/mockoperation01test.c:
	* tests/mockoperation11test.c:
	* tests/mockoperation12test.c:
	* tests/mockoperation21test.c:
	* tests/mockoperation22test.c:
	* tests/nodeconnectiontest.c:
	* tests/updatepadtest.c: Changed to accomodate refactoring.

2005-07-28  Sven Neumann  <sven@gimp.org>

	* AUTHORS: collected a list of contributors from the ChangeLog.

2005-07-23  Øyvind Kolås  <pippin@gimp.org>

	* tests/bfspropertytest.c
	* tests/dfspropertytest.c
	* tests/gegl-mock-property-visitor.c
	* tests/gegl-mock-property-visitor.h
	* tests/propertyconnectiontest.c
	* tests/updatepropertytest.c: removed

	* tests/bfspadtest.c
	* tests/dfspadtest.c
	* tests/gegl-mock-pad-visitor.c
	* tests/gegl-mock-pad-visitor.h
	* tests/padconnectiontest.c
	* tests/updatepadtest.c: added and modified to reflect this change.

	* tests/Makefile.am: modified accordingly

2005-07-22  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.[ch}: added operation property, and private
	"child" pointer to operation object. Preparations for using
	composition instead of inheritance for the node<->operation
	relationship.

2005-07-22  Øyvind Kolås  <pippin@gimp.org>

	* tests/bfspropertyvisitortest.c
	* tests/dfspropertyvisitortest.c
	* tests/gegl-mock-property-visitor.c
	* tests/gegl-mock-property-visitor.h
	* tests/mockoperation01test.c
	* tests/mockoperation11test.c
	* tests/mockoperation12test.c
	* tests/mockoperation21test.c
	* tests/mockoperation22test.c
	* tests/propertyconnectionstest.c
	* tests/testgegl.c
	* tests/updatepropertytest.c: Replaced occurences of property where
	pad is meant from variable, class and function names in source. File
	renaming is still pending.

2005-07-22  Øyvind Kolås  <pippin@gimp.org>

	* tests/gegl-image-heap-cache-tests.c
	* tests/gegl-image-swap-cache-test.c: s/Geg/Gegl/ in the registration
	of tests.

2005-07-22  Øyvind Kolås  <pippin@gimp.org>

	* tests/bfspropertyvisitortest.c
	* tests/dfspropertyvisitortest.c
	* tests/gegl-mock-property-visitor.c
	* tests/gegl-mock-property-visitor.h
	* tests/mockoperation01test.c
	* tests/mockoperation11test.c
	* tests/mockoperation12test.c
	* tests/mockoperation21test.c
	* tests/mockoperation22test.c
	* tests/propertyconnectionstest.c
	* tests/testgegl.c
	* tests/updatepropertytest.c: Replaced occurences of property where
	pad is meant from variable, class and function names in source. File
	renaming is still pending.

2005-07-22  Øyvind Kolås  <pippin@gimp.org>

	* tests/gegl-image-heap-cache-tests.c
	* tests/gegl-image-swap-cache-test.c: s/Geg/Gegl/ in the registration
	of tests.

2005-07-22  Øyvind Kolås <pippin@gimp.org>

	* tests/gegl-image-heap-cache-tests.c
	* tests/gegl-image-swap-cache-test.c: s/Geg/Gegl/ in the registration
	of tests.

2005-07-11  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-property.[ch]: removed
	* gegl/gegl-pad.[ch]: resurrected from gegl-property.[ch]
	* gegl-connection.c
	* gegl-connection.h
	* gegl-eval-mgr.c
	* gegl-eval-mgr.h
	* gegl-eval-visitor.c
	* gegl-eval-visitor.h
	* gegl-graph.c
	* gegl-graph.h
	* gegl-node.c
	* gegl-node.h
	* gegl-operation.c
	* gegl-operation.h
	* gegl-pad.c
	* gegl-pad.h
	* gegl-types.h
	* gegl-visitor.c
	* gegl-visitor.h
	* gegl.h: renaming property to pad.
	* tests/*.[ch]: fix to make the test suite work with API changes.
	
2005-06-11  Øyvind Kolås  <pippin@gimp.org>

	* gegl/Makefile.am: fixed newline escaping problem, added
	gegl-types.h and gegl-utils.h
	to list of installed headers.
	* gegl.pc.in: change the include path to .../gegl-1.0/gegl.

2005-06-11  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-filter.[ch]
	* tests/mockfilter01test.c
	* tests/mockfilter11test.c
	* tests/mockfilter12test.c
	* tests/mockfilter21test.c
	* tests/mockfilter22test.c
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* tests/mockfilter01test.c
	* tests/mockfilter11test.c
	* tests/mockfilter12test.c
	* tests/mockfilter21test.c
	* tests/mockfilter22test.c
	* tests/mockimagefiltertest.c: removed

	* gegl/gegl-operation.[ch]:
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-eval-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-operation.sgml
	* docs/reference/gegl/tmpl/gegl-property.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml
	* gegl/Makefile.am
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-property.c
	* gegl/gegl-property.h
	* gegl/gegl-types.h
	* gegl/gegl.h
	* tests/Makefile.am
	* tests/bfspropertyvisitortest.c
	* tests/dfsnodevisitortest.c
	* tests/dfspropertyvisitortest.c
	* tests/gegl-mock-image-operation.c
	* tests/gegl-mock-image-operation.h
	* tests/gegl-mock-operation-0-1.c
	* tests/gegl-mock-operation-0-1.h
	* tests/gegl-mock-operation-1-1.c
	* tests/gegl-mock-operation-1-1.h
	* tests/gegl-mock-operation-1-2.c
	* tests/gegl-mock-operation-1-2.h
	* tests/gegl-mock-operation-2-1.c
	* tests/gegl-mock-operation-2-1.h
	* tests/gegl-mock-operation-2-2.c
	* tests/gegl-mock-operation-2-2.h
	* tests/gegl-mock-property-visitor.c
	* tests/graphtest.c
	* tests/mockimageoperationtest.c
	* tests/mockoperation01test.c
	* tests/mockoperation11test.c
	* tests/mockoperation12test.c
	* tests/mockoperation21test.c
	* tests/mockoperation22test.c
	* tests/nodeconnectionstest.c
	* tests/testgegl.c
	* tests/updatepropertytest.c: refactoring filter->operation

2005-06-07  Jakub Steiner <jimmac@ximian.com>

	* docs/images/gegl-logo.svg: Proposed logo for the library. Feel
	  free to change
	

2005-06-05  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-property.h: remove duplicate gegl_property_set_param_spec.

2005-06-05  Øyvind Kolås  <pippin@gimp.org>
	
	* gegl/gegl-property.h: indentation cleanup from previous commit.

2005-06-05  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-property.[ch]
	* tests/*.c: s/property_num_/property_get_num_/

	* gegl/gegl-graph.[ch]
	* tests/*.c: s/graph_num_/graph_get_num_/

	* gegl/gegl-connection.c: add comment about where to store data from
	pixel format negotiation.

2005-06-05  Øyvind Kolås  <pippin@gimp.org>

	* gegl/gegl-node.[ch]
	* tests/*.c: s/gegl_node_num_s/gegl_node_get_num_s/

2005-06-04  Øyvind Kolås  <pippin@gimp.org>

	* TODO: updated directory restructuring plan.

2005-06-04  Øyvind Kolås  <pippin@gimp.org>

	* README: expand DAG at first usage.
	* TODO: in the directory restructuring, specify where gmodules lives.

2005-06-04  Sven Neumann  <sven@gimp.org>

	* tools/testsuite/Makefile.am: run testcomplex from 'make check'.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* codegen/common.h
	* codegen/data_type.h
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-color-model.c
	* gegl/image/gegl-color-space-imp.h
	* gegl/image/gegl-component-sample-model.c
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-heap-cache.c
	* gegl/image/gegl-normalizer-mult.c
	* gegl/image/gegl-normalizer.c
	* gegl/image/gegl-sample-model.c
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache.c
	* gil/gil/gilsymbol.h
	* gil/gil/gilsymboltable.h
	* gil/gil/giltype.h
	* tests/gegl-image-buffer-caching-test.c
	* tests/gegl-image-buffer-double-test.c
	* tests/gegl-image-cache-tests.c
	* tests/gegl-image-component-sample-model-test.c
	* tests/gegl-image-memory-cache-test.c: converted tabs to spaces.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* gegl/image/Makefile.am (IMAGE_unused_sources): added gegl-tile.h
	and gegl-tile-iterator.h.

2005-06-03  Michael Natterer  <mitch@gimp.org>

	* gegl/gegl-property.c: cleanup.

2005-06-03  Michael Natterer  <mitch@gimp.org>

	* gegl/image/gegl-buffer.[ch]
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-cache.[ch]
	* gegl/image/gegl-heap-cache-store.[ch]
	* gegl/image/gegl-heap-cache.c
	* gegl/image/gegl-null-cache-store.c: lots of cleanup.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-normalizer.c
	* gegl/image/gegl-normalizer-mult.c: code cleanup.

2005-06-03  Øyvind Kolås  <pippin@gimp.org>

	* TODO: moved graph related files up a level.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* gegl/Makefile.am
	* gegl/gegl-add.[ch]
	* gegl/gegl-comp.[ch]
	* gegl/gegl-fade.[ch]
	* gegl/gegl-fill.[ch]
	* gegl/gegl-i-add.[ch]
	* gegl/gegl-mult.[ch]
	* gegl/gegl-multiply.[ch]
	* gegl/gegl-over.[ch]
	* gegl/gegl-print.[ch]: removed these files. They depend on
	non-existant classes and the implementation is incorrect anyway.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* tests/gegl-mock-image-filter.c
	* tests/gegl-mock-image.c
	* tests/gegl-mock-node-visitor.c
	* tests/gegl-mock-object.c
	* tests/gegl-mock-property-visitor.c: use G_DEFINE_TYPE, cleanup.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* tests/gegl-mock-filter-0-1.c
	* tests/gegl-mock-filter-1-1.c
	* tests/gegl-mock-filter-1-2.c
	* tests/gegl-mock-filter-2-1.c
	* tests/gegl-mock-filter-2-2.c: use G_DEFINE_TYPE, cleanup.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* tests/gegl-image-mock-cache-entry.[ch]: use G_DEFINE_TYPE, cleanup.

	* tests/gegl-image-cache-tests.c: fixed a typo.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache.c: use G_DEFINE_TYPE, cleanup.

2005-06-03  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-heap-cache.c: use G_DEFINE_TYPE, cleanup.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-normalizer-mult.c
	* gegl/image/gegl-normalizer.c: use G_DEFINE_TYPE, cleanup.

2005-06-03  Michael Natterer  <mitch@gimp.org>

	* gegl/gegl-connection.[ch]
	* gegl/gegl-eval-mgr.[ch]
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-filter.c
	* gegl/gegl-graph.[ch]
	* gegl/gegl-init.[ch]
	* gegl/gegl-node.[ch]
	* gegl/gegl-object.c
	* gegl/gegl-property.c
	* gegl/gegl-types.h
	* gegl/gegl-utils.[ch]
	* gegl/gegl-visitable.c
	* gegl/gegl-visitor.c
	* gegl/gegl.h: more cleanup.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-component-sample-model.c
	* gegl/image/gegl-sample-model.c: use G_DEFINE_TYPE, cleanup.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/image/Makefile.am: list unused (uncompiled) files.

	* gegl/image/gegl-color-model.c: use G_DEFINE_TYPE, cleanup.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-null-cache-store.c: use G_DEFINE_TYPE macros,
	cleanup.

	* tests/gegl-mock-*.c: fixed includes.

2005-06-02  Michael Natterer  <mitch@gimp.org>

	* gegl/gegl-connection.[ch]
	* gegl/gegl-eval-mgr.[ch]
	* gegl/gegl-eval-visitor.[ch]
	* gegl/gegl-filter.[ch]
	* gegl/gegl-graph.[ch]
	* gegl/gegl-node.[ch]
	* gegl/gegl-object.[ch]
	* gegl/gegl-property.[ch]
	* gegl/gegl-types.h
	* gegl/gegl-visitable.[ch]
	* gegl/gegl-visitor.[ch]: same header and include cleanup
	as in gegl/image

	* gegl/gegl.h: added opaque typedefs.

	* gegl/image/gegl-normalizer-mult.c
	* gegl/image/gegl-normalizer.c: same cleanup here.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-buffer.c: use G_DEFINE_TYPE macros, some cleanup.

	* tests/gegl-image-*.c: fixed includes.

2005-06-02  Øyvind Kolås  <pippin@gimp.org>

	* TODO: file added.

2005-06-02  Øyvind Kolås  <pippin@gimp.org>

	* README: spellchecking.

2005-06-02  Øyvind Kolås  <pippin@gimp.org>

	* README: replaced with a file giving an overview of the library.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/gegl.h: added copyright header.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* autogen.sh
	* configure.in: look for a file that is actually being compiled.

2005-06-02  Michael Natterer  <mitch@gimp.org>

	* autogen.sh: call autoheader.

	* configure.in: added AM_CONFIG_HEADER().

	* */*.c: #include "config.h"

2005-06-02  Michael Natterer  <mitch@gimp.org>

	* gegl/image/gegl-image-types.h: new file.

	* gegl/image/Makefile.am: add it. Also add all headers to SOURCES.

	* gegl/image/gegl-buffer-double.[ch]
	* gegl/image/gegl-buffer.[ch]
	* gegl/image/gegl-cache-entry.[ch]
	* gegl/image/gegl-cache-store.[ch]
	* gegl/image/gegl-cache.[ch]
	* gegl/image/gegl-color-model.[ch]
	* gegl/image/gegl-color-space.h
	* gegl/image/gegl-component-sample-model.[ch]
	* gegl/image/gegl-entry-record.[ch]
	* gegl/image/gegl-heap-cache-store.[ch]
	* gegl/image/gegl-heap-cache.[ch]
	* gegl/image/gegl-normalizer-mult.[ch]
	* gegl/image/gegl-normalizer.h
	* gegl/image/gegl-null-cache-store.[ch]
	* gegl/image/gegl-sample-model.[ch]
	* gegl/image/gegl-swap-cache-store.[ch]
	* gegl/image/gegl-swap-cache.[ch]
	* gegl/image/gegl-tile-iterator.h
	* gegl/image/gegl-tile.h: added coding style in all headers.
	Include cleanup. Some indentation and cleanup in the .c files.

2005-06-02  Sven Neumann  <sven@gimp.org>

	* gegl/Makefile.am: added a list of files that don't compile.
	Also list all public headers.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* gegl/Makefile.am
	* gegl/gegl-filter.c
	* gegl/gegl-node.c
	* gegl/gegl-object.c
	* gegl/gegl-property.c
	* gegl/gegl-visitable.c
	* gegl/gegl-visitor.c: use G_DEFINE_TYPE macros, some cleanup.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-graph.c: use G_DEFINE_TYPE macros, some cleanup.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* configure.in: some cleanup; renamed generated file version.xml
	to version.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* */*.[ch]: removed leftover trailing whitespace.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* tests/Makefile.am: don't run the tests from the all target; use
	'make check' to run them.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* configure.in: added --enable-debug and --enable-profile options
	as we use in gimp.

	* codegen/Makefile.am
	* gil/gil/Makefile.am: cleanup.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* Makefile.am
	* configure.in
	* gegl.spec.in: removed the spec file as we did in gimp.

	* autogen.sh: check for gegl/gegl-add.c instead of for an ambiguous
	directory.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* gegl/image/*.h
	* tests/gegl-image-mock-cache-entry.h: s/parent/parent_instance/g.
	Fix previous commit.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* gegl/image/*.h
	* tests/gegl-image-mock-cache-entry.h: use standard include guard
	#defines.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* docs/Makefile.am
	* gegl/Makefile.am
	* gegl/image/Makefile.am
	* gil/gil/Makefile.am
	* gil/tests/Makefile.am
	* tests/Makefile.am: whitespace and formatting cleanup.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* gegl/gegl-eval-mgr.c
	* gegl/gegl-filter.c
	* gegl/image/gegl-cache.h: fixes to gtk-doc comments.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* */*.h: added G_GNUC_CONST to all get_type() functions.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* */*.[ch]: removed trailing whitespace.

2005-06-01  Michael Natterer  <mitch@gimp.org>

	* autogen.sh
	* configure.in: updates, mostly taken from gimp. Bumped required
	versions to something sane.

	* acinclude.m4: new file containing the gtk-doc stuff, just as in
	gimp.

	* tests/gegl-image-cache-tests.o: was for some reason added to
	CVS, removed it.

2005-06-01  Sven Neumann  <sven@gimp.org>

	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache.c: fixed typos in comments.

2005-06-01  Sven Neumann  <sven@gimp.org>

	Tagged all files GEGL_BEFORE_CLEANUP.

2004-3-25 19:36 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/Makefile.am
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-entry-record.h
	* gegl/image/gegl-heap-cache.c
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache.c
	* gegl/image/gegl-swap-cache.h
	* tests/Makefile.am
	* tests/gegl-image-cache-tests.c
	* tests/gegl-image-cache-tests.h
	* tests/gegl-image-cache-tests.o
	* tests/gegl-image-heap-cache-tests.c
	* tests/gegl-image-swap-cache-test.c

	Added a swap cache implementation and test.  I also altered some
	of the heap cache tests so they could be used with the swap cache
	as well.

2004-3-18 17:48 Daniel Rogers <daniel@phasevelocity.org>

	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-buffer-double.sgml
	* docs/reference/gegl/tmpl/gegl-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-cache-entry.sgml
	* docs/reference/gegl/tmpl/gegl-cache.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-imp.sgml
	* docs/reference/gegl/tmpl/gegl-component-sample-model.sgml
	* docs/reference/gegl/tmpl/gegl-connection.sgml
	* docs/reference/gegl/tmpl/gegl-normalizer-mult.sgml
	* docs/reference/gegl/tmpl/gegl-normalizer.sgml
	* docs/reference/gegl/tmpl/gegl-property.sgml
	* docs/reference/gegl/tmpl/gegl-sample-model.sgml
	* docs/reference/gegl/tmpl/gegl-tile-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-visitable.sgml

	Adds some skeletons for some new gegl classes that have yet to be
	documented.
	
2004-3-18 17:30 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-entry-record.h
	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-heap-cache-store.h
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache-store.h
	* tests/Makefile.am
	* tests/gegl-image-cache-store-tests.c
	* tests/testgegl.c
	* tests/gegl-image-heap-cache-tests.c

	Added more tests for GeglHeapCache
	
2004-3-16 12:31 Daniel Rogers <daniel@phasevelocity.org>

	* ChangeLog,
	* gegl/image/Makefile.am
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-cache-store.h
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-cache.h
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-entry-record.h
	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-heap-cache-store.h
	* gegl/image/gegl-heap-cache.c
	* gegl/image/gegl-heap-cache.h
	* gegl/image/gegl-memory-cache.c
	* gegl/image/gegl-memory-cache.h
	* gegl/image/gegl-null-cache-store.c
	* gegl/image/gegl-null-cache-store.h
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache-store.h
	* gegl/image/gegl-swap-cache.c
	* gegl/image/gegl-swap-cache.h
	* tests/Makefile.am
	* tests/gegl-image-buffer-caching-test.c
	* tests/gegl-image-cache-store-tests.c
	* tests/gegl-image-cache-store-tests.h
	* tests/gegl-image-entry-record-test.c
	* tests/gegl-image-heap-cache-store-test.c
	* tests/gegl-image-mock-cache-entry-test.c
	* tests/gegl-image-mock-cache-entry.c
	* tests/gegl-image-null-cache-store-test.c
	* tests/gegl-image-swap-cache-store-test.c
	* tests/testgegl.c

	Merge from NEW_CACHING, now that NEW_CACHING has all the
	functionality of the old caching system.
	
2004-3-16 12:31 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/Makefile.am
	* gegl/image/gegl-heap-cache.c
	* gegl/image/gegl-heap-cache.h

	Added a heap cache implementation.
	
	* gegl/image/gegl-memory-cache.c
	* gegl/image/gegl-memory-cache.h

	GeglHeapCache replaces GeglMemoryCache, so GeglMemoryCache has
	been removed.
	
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-cache.h
	* gegl/image/gegl-null-cache-store.c
	* tests/Makefile.am
	* tests/gegl-image-buffer-caching-test.c
	* tests/testgegl.c

	Added back the GeglBuffer caching test, using GeglHeapCache as the
	cache that is tested.  Also, found and fixed some bugs in all the
	classes mentioned.
	
2004-3-13 18:32 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-swap-cache-store.c
	* tests/Makefile.am
	* tests/gegl-image-cache-store-tests.c
	* tests/gegl-image-mock-cache-entry-test.c
	* tests/gegl-image-mock-cache-entry.c
	* tests/gegl-image-swap-cache-store-test.c
	* tests/testgegl.c

	Adds a test for GeglSwapCacheStore and fixes all the other bugs
	discovered while writing the tests.  This means I finally have a
	working swap file abstraction.  GeglSwapCache and GeglHeapCache
	should be a piece of cake now.
	
2004-3-13 18:32 Daniel Rogers <daniel@phasevelocity.org>

	* ChangeLog
	* gegl/image/gegl-heap-cache-store.c
	* tests/Makefile.am
	* tests/gegl-image-heap-cache-store-test.c
	* tests/testgegl.c

	Adds a test for GeglHeapCacheStore
	
	* tests/gegl-image-null-cache-store-test.c

	Fixes the name of the test.

2004-3-13 18:19 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-cache-store.h
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-null-cache-store.c
	* tests/Makefile.am
	* tests/gegl-image-cache-store-tests.c
	* tests/gegl-image-cache-store-tests.h
	* tests/gegl-image-entry-record-test.c
	* tests/gegl-image-mock-cache-entry-test.c
	* tests/gegl-image-mock-cache-entry.c
	* tests/gegl-image-null-cache-store-test.c
	* tests/testgegl.c

	Provides tests for GeglNullCacheStore and GeglEntryRecord.
	Fixes numerous bugs.

2004-3-13 07:42 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-cache.c
	* tests/Makefile.am
	* tests/testgegl.c

	Provides missing definition of gegl_cache_insert_record and
	removes the brokens tests for gegl-memory-cache. (which doesn't
	exist now anyway.

2004-3-13 07:31 Daniel Rogers <daniel@phasevelocity.org>

	* tests/gegl-image-mock-cache-entry.c

	Fix chaining up in the finalizer for GeglMockCacheEntry.
	Fixes bug #136997
	
2004-03-12 20:28 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/Makefile.am
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-null-cache-store.c
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache-store.h

	This makes GeglSwapCacheStore compilable, and adds the source to
	Makefile.am.  Still untested though.

2004-03-11 23:04 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-cache-store.h
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-entry-record.h
	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-null-cache-store.c
	* gegl/image/gegl-swap-cache-store.c

	This more or less implements GeglSwapCacheStore.  It is definatly
	broken.  Next I will write some test cases.  Get everything up and
	running, then write GeglHeapCache and GeglSwapCache.  They should
	be more or less tivial at that point.

2004-03-11 21:06 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-cache-store.c

	Fixed the name of gegl_cache_store_get_type.
	It was named gegl_cache_get_type.
	
2004-03-11 20:30 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/Makefile.am
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache-store.c
	* gegl/image/gegl-cache-store.h
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-cache.h
	* gegl/image/gegl-entry-record.c
	* gegl/image/gegl-entry-record.h
	* gegl/image/gegl-heap-cache-store.c
	* gegl/image/gegl-heap-cache-store.h
	* gegl/image/gegl-memory-cache.c
	* gegl/image/gegl-null-cache-store.c
	* gegl/image/gegl-null-cache-store.h
	* gegl/image/gegl-swap-cache-store.c
	* gegl/image/gegl-swap-cache-store.h
	* gegl/image/gegl-swap-cache.c
	* gegl/image/gegl-swap-cache.h

	This is a partial implmentation of my new caching stuff.  It is
	kept under the tag "NEW_CACHING".  It is spiffy.  Love it.  It
	doesn't work.  Hate it.
	
2004-03-03  Sven Neumann  <sven@gimp.org>

	* tests/Makefile.am (EXTRA_PROGRAMS): can't use $(TESTS) here any
	longer because $(EXEEXT) gets in our way.

2004-02-12 22:20 Michael Schumacher <schumaml@gnome.org>
	* tests/Makefile.am
	Added $(EXEEXT) to TESTS = testgegl. With this change, building
	GEGL out of the box with MinGW on Win32 is successful.

2004-1-4 00:49 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/gegl-component-sample-model.c
	* gegl/image/gegl-component-sample-model.h
	* gegl/image/gegl-memory-cache.c
	* gegl/image/gegl-memory-cache.h
	* gegl/image/gegl-sample-model.c
	* gegl/image/gegl-sample-model.h
	* tests/gegl-image-component-sample-model-test.c
	* tests/gegl-image-mock-cache-entry-test.c

	A few fixes for more than a few memory leaks.  I believe (because
	of valgrind) there may be one more leak, but I am having trouble
	tracking it down.
	
2004-1-3 19:49 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-cache.h
	* gegl/image/gegl-memory-cache.c
	* tests/Makefile.am
	* tests/gegl-image-buffer-caching-test.c
	* tests/testgegl.c

	Added the very beginings of a test of the GeglBuffer cache
	interaction stuff.  Everything else are bug fixes discovered while
	writing the test.

2004-1-1 23:44 Daniel Rogers <daniel@phasevelocity.org>

	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-component-sample-model.c

	Updates to the copyright notice for the New Year.
	
	* gegl/image/gegl-memory-cache.c
	* gegl/image/gegl-memory-cache.h
	* tests/gegl-image-memory-cache-test.c
	* tests/gegl-image-mock-cache-entry-test.c

	A (possibly) complete test for GeglMemoryCache and fixes for bugs
	discovered during the writing of the test.

2004-1-1 23:38 Daniel Rogers <daniel@phasevelocity.org>
	
	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-component-sample-model.c
	* tests/gegl-image-buffer-double-test.c
	* tests/gegl-image-component-sample-model-test.c

	Fixes for stupid mistakes to the GPL notice.
	
2003-12-31 22:52 Daniel Rogers <daniel@phasevelocity.org>

 	* tests/Makefile.am
 	* tests/gegl-image-buffer-double-test.c
 	* tests/gegl-image-memory-cache-test.c
 	* tests/gegl-image-mock-cache-entry-test.c
 	* tests/gegl-image-mock-cache-entry.c
 	* tests/gegl-image-mock-cache-entry.h
 	* tests/testgegl.c

	A fairly complete test of the abstract class GeglCacheEntry (using
	a minimal subclass) and the beginings of a test of the
	GeglMemoryCache.

	* gegl/image/gegl-cache.c

	This adds a property for the persistent flag.

2003-12-28 21:12 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/gegl-filter.c
 	* gegl/gegl-property.c
  	* tests/gegl-mock-filter-0-1.c
 	* tests/gegl-mock-property-visitor.c
	Trivial changes so that compiling with CFLAGS="-Wall -Werror"
	won't fail.

2003-12-28 20:49 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/Makefile.am
 	* gegl/image/gegl-buffer.c
 	* gegl/image/gegl-buffer.h
 	* gegl/image/gegl-cache.c
 	* gegl/image/gegl-cache.h
 	* gegl/image/gegl-memory-cache.c
 	* gegl/image/gegl-memory-cache.h
	The implements gegl-buffer's cache interation, and implements a
	concrete cache, gegl-memory-cache.  Both of these are _completely_
	untested.  Writing tests for them is my next task.
	
2003-12-28 10:16 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/gegl-init.c
	* gegl/image/gegl-init.h
 	* gegl/image/gegl-object.c
	* gegl/image/gegl-object.h
	* gegl/image/gegl-utils.c
	* gegl/image/gegl-utils.h
	Removed becasue the conflicting types between libimage and libgegl
	have been removed.  Libgegl and libimage can now be linked to one
	another.

	* gegl/Makefile.am
 	* gegl/image/Makefile.am
	Altered the build system of libgegl and libimage so that libimage
	is an uninstalled convience library, as originally intended.

	* tests/Makefile.am
    	* tests/testgegl.c
   	* tests/testimage.c
	Removed the seperated test binary for libimage and incorporated
	the tests into testgegl, since libimage and libgegl can be linked
	to one another again.
	
2003-12-22 Manish Singh <yosh@gimp.org>

	* tests/gegl-image-component-sample-model-test.c 
	terminate g_object_get call with NULL.

2003-12-21 Calvin Williamson <calvinw@mindspring.com> 

	Removed the following to make way for new classes in the image directory. 
	Some of these will go back once the new classes are in place, but some
	will be replaced by the new versions.

	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-array-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-array-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-blend.sgml
	* docs/reference/gegl/tmpl/gegl-channel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-channels.sgml
	* docs/reference/gegl/tmpl/gegl-channel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-color-alpha.sgml
	* docs/reference/gegl/tmpl/gegl-color-data.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-gray.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-rgb.sgml
	* docs/reference/gegl/tmpl/gegl-component-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-component-storage.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-dump-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-graph-setup-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-op-interface.sgml
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-input-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-input-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-m-source-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-m-source-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-multi-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-multiply.sgml
	* docs/reference/gegl/tmpl/gegl-mult.sgml
	* docs/reference/gegl/tmpl/gegl-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-pipe.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-point-op.sgml
	* docs/reference/gegl/tmpl/gegl-print.sgml
	* docs/reference/gegl/tmpl/gegl-scalar-data.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml
	* docs/reference/gegl/tmpl/gegl-storage.sgml
	* docs/reference/gegl/tmpl/gegl-string-data.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-value-types.sgml
	* gegl/gegl-array-param-specs.c
	* gegl/gegl-array-param-specs.h
	* gegl/gegl-array-value-types.c
	* gegl/gegl-array-value-types.h
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-blend.c
	* gegl/gegl-blend.h
	* gegl/gegl-buffer.c
	* gegl/gegl-buffer.h
	* gegl/gegl-channel-param-specs.c
	* gegl/gegl-channel-param-specs.h
	* gegl/gegl-channels.c
	* gegl/gegl-channels.h
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-channel-value-types.h
	* gegl/gegl-color.c
	* gegl/gegl-color-data.c
	* gegl/gegl-color-data.h
	* gegl/gegl-color.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-color-space.c
	* gegl/gegl-color-space-gray.c
	* gegl/gegl-color-space-gray.h
	* gegl/gegl-color-space.h
	* gegl/gegl-color-space-rgb.c
	* gegl/gegl-color-space-rgb.h
	* gegl/gegl-component-color-model.c
	* gegl/gegl-component-color-model.h
	* gegl/gegl-component-storage.c
	* gegl/gegl-component-storage.h
	* gegl/gegl-data.c
	* gegl/gegl-data.h
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dfs-visitor.h
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-dump-visitor.h
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-bfs-visitor.h
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.h
	* gegl/gegl-graph-setup-visitor.c
	* gegl/gegl-graph-setup-visitor.h
	* gegl/gegl-image.c
	* gegl/gegl-image-data.c
	* gegl/gegl-image-data.h
	* gegl/gegl-image.h
	* gegl/gegl-image-iterator.c
	* gegl/gegl-image-iterator.h
	* gegl/gegl-image-op.c
	* gegl/gegl-image-op.h
	* gegl/gegl-image-op-interface.c
	* gegl/gegl-image-op-interface.h
	* gegl/gegl-input-param-specs.c
	* gegl/gegl-input-param-specs.h
	* gegl/gegl-input-value-types.c
	* gegl/gegl-input-value-types.h
	* gegl/gegl-m-source-param-specs.c
	* gegl/gegl-m-source-param-specs.h
	* gegl/gegl-m-source-value-types.c
	* gegl/gegl-m-source-value-types.h
	* gegl/gegl-multi-image-op.c
	* gegl/gegl-multi-image-op.h
	* gegl/gegl-no-input.c
	* gegl/gegl-no-input.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-pixel-param-specs.c
	* gegl/gegl-pixel-param-specs.h
	* gegl/gegl-pixel-value-types.c
	* gegl/gegl-pixel-value-types.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-scalar-data.c
	* gegl/gegl-scalar-data.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-storage.c
	* gegl/gegl-storage.h
	* gegl/gegl-string-data.c
	* gegl/gegl-string-data.h
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-unary.c
	* gegl/gegl-unary.h
	* gegl/gegl-value-types.h
	* tests/bfsvisitormultouttest.c
	* tests/bfsvisitortest.c
	* tests/buffertest.c
	* tests/channelfloatvaluetest.c
	* tests/channelstest-float.c
	* tests/channeluint8valuetest.c
	* tests/channelvaluetest.c
	* tests/checkoptest.c
	* tests/colormodeltest.c
	* tests/colorspacetest.c
	* tests/colortest.c
	* tests/dfsvisitormultouttest.c
	* tests/dfsvisitortest.c
	* tests/dumpvisitortest.c
	* tests/floatarraytest.c
	* tests/gegl-check-op.c
	* tests/gegl-check-op.h
	* tests/gegl-mock-bfs-visitor.c
	* tests/gegl-mock-bfs-visitor.h
	* tests/gegl-mock-dfs-visitor.c
	* tests/gegl-mock-dfs-visitor.h
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-filter.h
	* tests/gegl-mock-image-op.c
	* tests/gegl-mock-image-op.h
	* tests/gegl-mock-node.c
	* tests/gegl-mock-node.h
	* tests/gegl-mock-op.c
	* tests/gegl-mock-op.h
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-point-op.h
	* tests/gegl-mock-properties-filter.c
	* tests/gegl-mock-properties-filter.h
	* tests/gegl-mock-visitor.c
	* tests/gegl-mock-visitor.h
	* tests/graphapplytest-float.c
	* tests/graphnodetest.c
	* tests/haverecttest.c
	* tests/iaddtest-float.c
	* tests/iaddtest-uint8.c
	* tests/imageiteratortest.c
	* tests/imageoptest.c
	* tests/imagetest.c
	* tests/mockpropertiesfiltertest.c
	* tests/multipleoutputstest.c
	* tests/multiplytest-float.c
	* tests/multtest-float.c
	* tests/multtest-uint8.c
	* tests/needrecttest.c
	* tests/nodetest.c
	* tests/optest.c
	* tests/paramtest.c
	* tests/pipetest.c
	* tests/pixelrgbafloatvaluetest.c
	* tests/pixelrgbfloatvaluetest.c
	* tests/pixelrgbuint8valuetest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest-float.c
	* tests/storagetest.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tiletest.c
	* tests/valueimagedatatest.c

	The following were added. The Property class renames what was called Data before and
	is closer to being what normal Glib properties are. The Visitor classes were
	improved as well, and now we have property to property traversal of the graph,
	as well as node to node traversal. To see how this new stuff works, see the
	various new unit tests. To see how connecting nodes and properties works
	see nodeconnectionstest. To see how various concrete filters work, see the
	mock-filters with various inputs and outputs. To see how the filters with
	image data will work see mockimagefiltertest

	* gegl/gegl-connection.c
	* gegl/gegl-connection.h
	* gegl/gegl-property.c
	* gegl/gegl-property.h
	* gegl/gegl-visitable.c
	* gegl/gegl-visitable.h
	* tests/bfspropertyvisitortest.c
	* tests/dfsnodevisitortest.c
	* tests/dfspropertyvisitortest.c
	* tests/gegl-mock-filter-0-1.c
	* tests/gegl-mock-filter-0-1.h
	* tests/gegl-mock-filter-1-1.c
	* tests/gegl-mock-filter-1-1.h
	* tests/gegl-mock-filter-1-2.c
	* tests/gegl-mock-filter-1-2.h
	* tests/gegl-mock-filter-2-1.c
	* tests/gegl-mock-filter-2-1.h
	* tests/gegl-mock-filter-2-2.c
	* tests/gegl-mock-filter-2-2.h
	* tests/gegl-mock-image.c
	* tests/gegl-mock-image-filter.c
	* tests/gegl-mock-image-filter.h
	* tests/gegl-mock-image.h
	* tests/gegl-mock-node-visitor.c
	* tests/gegl-mock-node-visitor.h
	* tests/gegl-mock-property-visitor.c
	* tests/gegl-mock-property-visitor.h
	* tests/graphtest.c
	* tests/mockfilter01test.c
	* tests/mockfilter11test.c
	* tests/mockfilter12test.c
	* tests/mockfilter21test.c
	* tests/mockfilter22test.c
	* tests/mockimagefiltertest.c
	* tests/nodeconnectionstest.c
	* tests/propertyconnectionstest.c
	* tests/updatepropertytest.c

	These are modified.

	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-color-space.sgml
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-eval-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-init.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-object.sgml
	* docs/reference/gegl/tmpl/gegl-tile.sgml
	* docs/reference/gegl/tmpl/gegl-types.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-mgr.h
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-eval-visitor.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph.c
	* gegl/gegl-graph.h
	* gegl/gegl.h
	* gegl/gegl-init.c
	* gegl/gegl-init.h
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.c
	* gegl/gegl-object.h
	* gegl/gegl-types.h
	* gegl/gegl-utils.c
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/image/gegl-init.c
	* gegl/image/gegl-utils.c
	* gegl/Makefile.am
	* tests/Makefile.am
	* tests/testgegl.c

2003-12-07 13:42 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/Makefile.am
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache.c
	* gegl/image/gegl-cache.h
	This fixes some more bugs with the proposed cache api and adds an
	implementation of the abstract class GeglCache.

2003-12-06 19:27 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache.h
	This fixes some bugs with the proposed cache api and provides a
	lot of documentation on the object.  It documents the contracts
	any implementation of GeglCache should follow.
	
2003-12-06 12:26 Daniel Rogers <daniel@phasevelocity.org>
	* gegl/image/Makefile.am
	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-cache-entry.h
	* gegl/image/gegl-cache-entry.c
	* gegl/image/gegl-cache.h
	* gegl/image/gegl-color-model.c
	* gegl/image/gegl-color-model.h
	* gegl/image/gegl-color-space-imp.h
	* gegl/image/gegl-color-space.h
	* gegl/image/gegl-tile-iterator.h
	* gegl/image/gegl-tile.h
	This adds most of the remaining classes I have planned for
	libimage.  gegl-image itself is notable missing, as are
	implementations for several of these classes.  Still a work in
	progress, but things are close now.
	
2003-12-06 11:45 Daniel Rogers <daniel@phasevelocity.org>
	* autogen.sh
	Commented out call to glib-gettextize which GEGL is not using at
	the moment.  Someone should check this, as I don't completely
	understand the autofoo tools.
	
2003-12-06 09:04 Daniel Rogers <daniel@phasevelocity.org>
	* autogen.sh
	Updated autogen.sh to work with newer libtool/autofoo stuff.
	
2003-11-28 21:20 Daniel Rogers <daniel@phasevelocity.org>
	* configure.in
	I Added a check for lcms.

	* .cvsignore
	A change to inform cvs of some eclipse project files to ignore.
	
2003-11-28 21:11 Daniel Rogers <daniel@phasevelocity.org>

	This commit is solely style updates.  This makes my files conform
	to our coding standards.

	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-buffer-double.h
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-component-sample-model.c
	* gegl/image/gegl-component-sample-model.h
	* gegl/image/gegl-init.c
	* gegl/image/gegl-init.h
	* gegl/image/gegl-normalizer-mult.c
	* gegl/image/gegl-normalizer-mult.h
	* gegl/image/gegl-normalizer.c
	* gegl/image/gegl-normalizer.h
	* gegl/image/gegl-object.c
	* gegl/image/gegl-object.h
	* gegl/image/gegl-sample-model.c
	* gegl/image/gegl-sample-model.h
	* gegl/image/gegl-utils.c
	* gegl/image/gegl-utils.h

2003-11-22 Daniel Rogers <daniel@phasevelocity.org>

	The below classes represent a partial implementation of the new
	gegl pixel data interface.  It should be used as a convience
	library libimage.
	
	* gegl/image
	* gegl/image/Makefile.am
	* gegl/image/gegl-buffer-double.c
	* gegl/image/gegl-buffer-double.h
	* gegl/image/gegl-buffer.c
	* gegl/image/gegl-buffer.h
	* gegl/image/gegl-component-sample-model.c
	* gegl/image/gegl-component-sample-model.h
	* gegl/image/gegl-normalizer-mult.c
	* gegl/image/gegl-normalizer-mult.h
	* gegl/image/gegl-normalizer.c
	* gegl/image/gegl-normalizer.h
	* gegl/image/gegl-sample-model.c
	* gegl/image/gegl-sample-model.h

	These six files are copied directly from the parent directory.
	They don't belong here but here until the rest of gegl is ready to
	integrate the new pixel data interface, these are here to allow
	compiling.  There are currently name collisions between the two
	different pieces of code that won't exist when gegl starts using
	libimage.
	
	* gegl/image/gegl-object.c 
	* gegl/image/gegl-object.h
	* gegl/image/gegl-init.c
	* gegl/image/gegl-init.h
	* gegl/image/gegl-utils.c
	* gegl/image/gegl-utils.h

	Unit tests for libimage.  Currently uses a different test binary
	since libgegl and libimage are currently not link compatible.

	* test/Makefile.am
	* test/gegl-image-buffer-double-test.c
	* test/gegl-image-component-sample-model-test.c
	* test/testimage.c

2003-10-31 Calvin Williamson <calvinw@mindspring.com>

	* gegl/image/gegl-component-sample-model.c -- added chaining in finalize
	* tests/gegl-image-component-sample-model-test.c -- added some unrefs.

2003-08-18 Calvin Williamson <calvinw@mindspring.com>
    
	Removed the ChannelSpace classes, and introduced a single color Color
	object. In the process I renamed the former constant color image object
	(previously called Color) to Fill and made this take a Color object.
	Now to create a constant color image you create a Fill object and 
	pass it a color object and a data type for the image data. Color objects
	are meant to be stored as floats internally (doubles eventually) and 
	ops can extract their color model versions of the color during processing
	and use these. This is closer to how gimp passes its colors around internally.
	(as doubles). The docs are not completely updated yet for these changes
	so descriptions and examples may be a little different. There is no need
	for "generic properties" for parameters if we assume we are passing float
	or double versions of single colors, opacities, and other parameters. 
	This makes properties a bit simpler overall.

	Also removed a bunch of ops and left more or less one of each kind. This
	is easier while the code changes a lot in the images, data buffers, iterators,
	section of the code.

	These were modified:
	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-channel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-color-data.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* docs/reference/gegl/tmpl/gegl-no-input.sgml
	* docs/reference/gegl/tmpl/gegl-pipe.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* gegl/gegl-add.c
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-channel-param-specs.c
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-channel-value-types.h
	* gegl/gegl-color.c
	* gegl/gegl-color-data.c
	* gegl/gegl-color-data.h
	* gegl/gegl-color.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-component-color-model.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-fade.c
	* gegl/gegl.h
	* gegl/gegl-i-add.c
	* gegl/gegl-image-data.c
	* gegl/gegl-image-data.h
	* gegl/gegl-image-op.c
	* gegl/gegl-image-op.h
	* gegl/gegl-init.c
	* gegl/gegl-mult.c
	* gegl/gegl-multiply.c
	* gegl/gegl-no-input.c
	* gegl/gegl-no-input.h
	* gegl/gegl-over.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-pixel-param-specs.c
	* gegl/gegl-pixel-value-types.c
	* gegl/gegl-pixel-value-types.h
	* gegl/gegl-print.c
	* gegl/gegl-unary.c
	* gegl/gegl-unary.h
	* gegl/gegl-utils.c
	* gegl/gegl-value-types.h
	* gegl/Makefile.am
	* tests/addtest-float.c
	* tests/addtest-uint8.c
	* tests/channelfloatvaluetest.c
	* tests/channelstest-float.c
	* tests/channeluint8valuetest.c
	* tests/checkoptest.c
	* tests/colormodeltest.c
	* tests/fadetest-float.c
	* tests/fadetest-uint8.c
	* tests/gegl-check-op.c
	* tests/gegl-mock-properties-filter.c
	* tests/graphapplytest-float.c
	* tests/haverecttest.c
	* tests/iaddtest-float.c
	* tests/iaddtest-uint8.c
	* tests/Makefile.am
	* tests/mockpropertiesfiltertest.c
	* tests/multiplytest-float.c
	* tests/multtest-float.c
	* tests/multtest-uint8.c
	* tests/nodetest.c
	* tests/pixelrgbafloatvaluetest.c
	* tests/pixelrgbfloatvaluetest.c
	* tests/pixelrgbuint8valuetest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest-float.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/valueimagedatatest.c
	* tests/valuetest.c

	These were removed as described above:
	* docs/reference/gegl/tmpl/gegl-atop.sgml
	* docs/reference/gegl/tmpl/gegl-channel-data.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-float.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-copy.sgml
	* docs/reference/gegl/tmpl/gegl-darken.sgml
	* docs/reference/gegl/tmpl/gegl-difference.sgml
	* docs/reference/gegl/tmpl/gegl-image-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-i-mult.sgml
	* docs/reference/gegl/tmpl/gegl-inside.sgml
	* docs/reference/gegl/tmpl/gegl-lighten.sgml
	* docs/reference/gegl/tmpl/gegl-max.sgml
	* docs/reference/gegl/tmpl/gegl-min.sgml
	* docs/reference/gegl/tmpl/gegl-normal.sgml
	* docs/reference/gegl/tmpl/gegl-outside.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-data.sgml
	* docs/reference/gegl/tmpl/gegl-premult.sgml
	* docs/reference/gegl/tmpl/gegl-screen.sgml
	* docs/reference/gegl/tmpl/gegl-subtract.sgml
	* docs/reference/gegl/tmpl/gegl-unpremult.sgml
	* docs/reference/gegl/tmpl/gegl-xor.sgml
	* gegl/gegl-atop.c
	* gegl/gegl-atop.h
	* gegl/gegl-channel-data.c
	* gegl/gegl-channel-data.h
	* gegl/gegl-channel-space.c
	* gegl/gegl-channel-space-float.c
	* gegl/gegl-channel-space-float.h
	* gegl/gegl-channel-space.h
	* gegl/gegl-channel-space-uint8.c
	* gegl/gegl-channel-space-uint8.h
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* gegl/gegl-darken.c
	* gegl/gegl-darken.h
	* gegl/gegl-difference.c
	* gegl/gegl-difference.h
	* gegl/gegl-image-param-specs.c
	* gegl/gegl-image-param-specs.h
	* gegl/gegl-i-mult.c
	* gegl/gegl-i-mult.h
	* gegl/gegl-inside.c
	* gegl/gegl-inside.h
	* gegl/gegl-lighten.c
	* gegl/gegl-lighten.h
	* gegl/gegl-max.c
	* gegl/gegl-max.h
	* gegl/gegl-min.c
	* gegl/gegl-min.h
	* gegl/gegl-normal.c
	* gegl/gegl-normal.h
	* gegl/gegl-outside.c
	* gegl/gegl-outside.h
	* gegl/gegl-pixel-data.c
	* gegl/gegl-pixel-data.h
	* gegl/gegl-premult.c
	* gegl/gegl-premult.h
	* gegl/gegl-screen.c
	* gegl/gegl-screen.h
	* gegl/gegl-subtract.c
	* gegl/gegl-subtract.h
	* gegl/gegl-unpremult.c
	* gegl/gegl-unpremult.h
	* gegl/gegl-xor.c
	* gegl/gegl-xor.h
	* tests/channelspacetest.c
	* tests/colortest-float.c
	* tests/colortest-uint8.c
	* tests/copytest-float.c
	* tests/copytest-uint8.c
	* tests/imulttest-float.c
	* tests/imulttest-uint8.c
	* tests/normaltest-float.c

	These were added:
	* docs/reference/gegl/tmpl/gegl-array-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-array-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-fill.sgml
	* docs/reference/gegl/tmpl/gegl-string-data.sgml
	* gegl/gegl-array-param-specs.c
	* gegl/gegl-array-param-specs.h
	* gegl/gegl-array-value-types.c
	* gegl/gegl-array-value-types.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-string-data.c
	* gegl/gegl-string-data.h
	* tests/colortest.c
	* tests/filltest-float.c
	* tests/filltest-uint8.c
	* tests/floatarraytest.c

2003-08-05 Calvin Williamson <calvinw@mindspring.com>

	Added the image op interface. This puts the need_rect, have_rect
	and color_model compute methods in these. This interface is implemented
	by any op that has input or output image data, hence needs to calculate
	the above rects and color model to go with that image data. 

	* gegl/Makefile.am
	* gegl/gegl-channels.c
	* gegl/gegl-color.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-image-op.c
	* gegl/gegl-image-op.h
	* gegl/gegl-init.c
	* gegl/gegl-input-value-types.c
	* gegl/gegl-m-source-value-types.c
	* gegl/gegl-multi-image-op.c
	* gegl/gegl-multi-image-op.h
	* gegl/gegl-no-input.c
	* gegl/gegl-unary.c
	* gegl/gegl.h
	* tests/haverecttest.c
	* tests/needrecttest.c
	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-multi-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml

2003-08-01 Calvin Williamson <calvinw@mindspring.com>

	Added basic multi-output support. Introduced m-sources, which stands for 
	sources that have multiple outputs, like a channels splitter. New tests
	show how the m-sources work.  
  
	* gegl/gegl-channels.c
	* gegl/gegl-channels.h
	* gegl/gegl-m-source-param-specs.c
	* gegl/gegl-m-source-param-specs.h
	* gegl/gegl-m-source-value-types.c
	* gegl/gegl-m-source-value-types.h
	* gegl/gegl-multi-image-op.c
	* gegl/gegl-multi-image-op.h
	* tests/channelstest-float.c
	* tests/multipleoutputstest.c

	Changed the following to do multi-output support.

	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* gegl/Makefile.am
	* gegl/gegl-binary.c
	* gegl/gegl-comp.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-image-op.c
	* gegl/gegl-init.c
	* gegl/gegl-input-value-types.c
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-param-specs.h
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-unary.c
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-value-types.h
	* gegl/gegl.h
	* tests/Makefile.am
	* tests/addtest-float.c
	* tests/bfsvisitormultouttest.c
	* tests/bfsvisitortest.c
	* tests/dfsvisitormultouttest.c
	* tests/dfsvisitortest.c
	* tests/gegl-mock-node.c
	* tests/gegl-mock-op.c
	* tests/gegl-mock-point-op.c
	* tests/graphapplytest-float.c
	* tests/graphnodetest.c
	* tests/nodetest.c
	* tests/optest.c
	* tests/testgegl.c

2003-07-11 Calvin Williamson <calvinw@mindspring.com>

	Changed ScanlineProcessor so that it keeps a hash table of iterators. This
	means that ops ask the processor to look up the iterator for them.
	So we dont pass the array of iterators to the scanline functions, just
	pass the processor instead. Different types of ops (area, geometric, etc)
	will have processors that organize their iterators in different ways. 

	Changed all the scanline functions to match this. 

	* gegl/gegl-add.c
	* gegl/gegl-atop.c
	* gegl/gegl-color.c
	* gegl/gegl-copy.c
	* gegl/gegl-darken.c
	* gegl/gegl-difference.c
	* gegl/gegl-fade.c
	* gegl/gegl-i-add.c
	* gegl/gegl-i-mult.c
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-multiply.c
	* gegl/gegl-normal.c
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-unpremult.c
	* gegl/gegl-xor.c
	* tests/addtest-float.c
	* tests/gegl-check-op.c
	* tests/gegl-mock-point-op.c

	Updated docs about the changes above:

	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml


2003-07-10 Calvin Williamson <calvinw@mindspring.com>

	Changed GLists in Node and Op to GArray's. Updated everyone
	else to use these now as well. Fixed some compile errors from
	David Neary <dneary@free.fr>. 

	* gegl/gegl-add.c
	* gegl/gegl-atop.c
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-binary.c
	* gegl/gegl-blend.c
	* gegl/gegl-buffer.c
	* gegl/gegl-channel-space-float.c
	* gegl/gegl-channel-space-uint8.c
	* gegl/gegl-channel-space.c
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-color-model.c
	* gegl/gegl-color-space-gray.c
	* gegl/gegl-color-space-rgb.c
	* gegl/gegl-color-space.c
	* gegl/gegl-color.c
	* gegl/gegl-comp.c
	* gegl/gegl-component-color-model.c
	* gegl/gegl-component-storage.c
	* gegl/gegl-copy.c
	* gegl/gegl-darken.c
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-difference.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-fade.c
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph-setup-visitor.c
	* gegl/gegl-graph.c
	* gegl/gegl-i-add.c
	* gegl/gegl-i-mult.c
	* gegl/gegl-image-iterator.c
	* gegl/gegl-image-op.c
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-multiply.c
	* gegl/gegl-no-input.c
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-normal.c
	* gegl/gegl-object.c
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-pipe.c
	* gegl/gegl-point-op.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-storage.c
	* gegl/gegl-subtract.c
	* gegl/gegl-unary.c
	* gegl/gegl-unpremult.c
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl-xor.c

	* tests/Makefile.am
	* tests/addtest-float.c
	* tests/addtest-uint8.c
	* tests/bfsvisitortest.c
	* tests/copytest-float.c
	* tests/copytest-uint8.c
	* tests/dfsvisitortest.c
	* tests/fadetest-float.c
	* tests/fadetest-uint8.c
	* tests/gegl-check-op.c
	* tests/gegl-mock-bfs-visitor.c
	* tests/gegl-mock-dfs-visitor.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-image-op.c
	* tests/gegl-mock-node.c
	* tests/gegl-mock-object.c
	* tests/gegl-mock-op.c
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-properties-filter.c
	* tests/gegl-mock-visitor.c
	* tests/graphapplytest-float.c
	* tests/iaddtest-float.c
	* tests/iaddtest-uint8.c
	* tests/imulttest-float.c
	* tests/imulttest-uint8.c
	* tests/multtest-float.c
	* tests/multtest-uint8.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest-float.c

	Added these docs:

	* docs/dia/inputs_outputs_for_color_op.dia
	* docs/dia/inputs_outputs_for_fade_op.dia
	* docs/dia/inputs_outputs_for_over_op.dia
	* docs/reference/gegl/images/inputs_outputs_for_color_op.png
	* docs/reference/gegl/images/inputs_outputs_for_fade_op.png
	* docs/reference/gegl/images/inputs_outputs_for_over_op.png

	Re-wrote parts of Op, Graph, Data and Node documentation sections:

	* docs/dia/apply.dia
	* docs/dia/collectinputs.dia
	* docs/dia/composite.dia
	* docs/dia/graph.dia
	* docs/dia/node_no_input_upstream.dia
	* docs/dia/ops.dia
	* docs/dia/sharednode.dia
	* docs/dia/simplegraph.dia
	* docs/reference/gegl/Makefile.am
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/images/composite.png
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-atop.sgml
	* docs/reference/gegl/tmpl/gegl-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-blend.sgml
	* docs/reference/gegl/tmpl/gegl-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-channel-data.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-float.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space.sgml
	* docs/reference/gegl/tmpl/gegl-color-data.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-gray.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-rgb.sgml
	* docs/reference/gegl/tmpl/gegl-color-space.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-component-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-component-storage.sgml
	* docs/reference/gegl/tmpl/gegl-copy.sgml
	* docs/reference/gegl/tmpl/gegl-darken.sgml
	* docs/reference/gegl/tmpl/gegl-data.sgml
	* docs/reference/gegl/tmpl/gegl-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-difference.sgml
	* docs/reference/gegl/tmpl/gegl-dump-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-eval-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-fade.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph-setup-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-i-add.sgml
	* docs/reference/gegl/tmpl/gegl-i-mult.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-inside.sgml
	* docs/reference/gegl/tmpl/gegl-lighten.sgml
	* docs/reference/gegl/tmpl/gegl-max.sgml
	* docs/reference/gegl/tmpl/gegl-min.sgml
	* docs/reference/gegl/tmpl/gegl-mult.sgml
	* docs/reference/gegl/tmpl/gegl-multiply.sgml
	* docs/reference/gegl/tmpl/gegl-no-input.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-normal.sgml
	* docs/reference/gegl/tmpl/gegl-object.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-outside.sgml
	* docs/reference/gegl/tmpl/gegl-over.sgml
	* docs/reference/gegl/tmpl/gegl-pipe.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-data.sgml
	* docs/reference/gegl/tmpl/gegl-point-op.sgml
	* docs/reference/gegl/tmpl/gegl-premult.sgml
	* docs/reference/gegl/tmpl/gegl-print.sgml
	* docs/reference/gegl/tmpl/gegl-scalar-data.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml
	* docs/reference/gegl/tmpl/gegl-screen.sgml
	* docs/reference/gegl/tmpl/gegl-storage.sgml
	* docs/reference/gegl/tmpl/gegl-subtract.sgml
	* docs/reference/gegl/tmpl/gegl-tile.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-unpremult.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-xor.sgml


2003-07-04 Calvin Williamson <calvinw@mindspring.com>

	More properties work. Removed the "input" property of Node and moved it to Graph,
	where it makes more sense. Added image input properties to Unary, Binary, Comp. 
	Added a normal blend mode, and updated the tests and docs. 

	* HACKING
	* autogen.sh
	* gegl/Makefile.am
	* gegl/gegl-atop.c
	* gegl/gegl-binary.c
	* gegl/gegl-color.c
	* gegl/gegl-comp.c
	* gegl/gegl-darken.c
	* gegl/gegl-graph.c
	* gegl/gegl-inside.c
	* gegl/gegl-multiply.c
	* gegl/gegl-node.c
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-pipe.c
	* gegl/gegl-unary.c
	* gegl/gegl-xor.c
	* gegl/gegl.h

	Updated tests to match changes:

	* tests/Makefile.am
	* tests/bfsvisitormultouttest.c
	* tests/bfsvisitortest.c
	* tests/channelfloatvaluetest.c
	* tests/channeluint8valuetest.c
	* tests/dfsvisitormultouttest.c
	* tests/dfsvisitortest.c
	* tests/gegl-check-op.c
	* tests/gegl-mock-node.c
	* tests/gegl-mock-op.c
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-properties-filter.c
	* tests/graphnodetest.c
	* tests/nodetest.c
	* tests/optest.c
	* tests/pixelrgbafloatvaluetest.c
	* tests/pixelrgbfloatvaluetest.c
	* tests/pixelrgbuint8valuetest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/testutils.h

	Update these docs:

	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/tmpl/gegl-atop.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-blend.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-darken.sgml
	* docs/reference/gegl/tmpl/gegl-difference.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-inside.sgml
	* docs/reference/gegl/tmpl/gegl-lighten.sgml
	* docs/reference/gegl/tmpl/gegl-multiply.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-outside.sgml
	* docs/reference/gegl/tmpl/gegl-over.sgml
	* docs/reference/gegl/tmpl/gegl-screen.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-xor.sgml

	Added these:

	* docs/reference/gegl/tmpl/gegl-normal.sgml
	* gegl/gegl-normal.c
	* gegl/gegl-normal.h
	* tests/addtest-float.c
	* tests/addtest-uint8.c
	* tests/colortest-float.c
	* tests/colortest-uint8.c
	* tests/copytest-float.c
	* tests/copytest-uint8.c
	* tests/fadetest-float.c
	* tests/fadetest-uint8.c
	* tests/graphapplytest-float.c
	* tests/iaddtest-float.c
	* tests/iaddtest-uint8.c
	* tests/imulttest-float.c
	* tests/imulttest-uint8.c
	* tests/multiplytest-float.c
	* tests/multtest-float.c
	* tests/multtest-uint8.c
	* tests/normaltest-float.c
	* tests/simpletreetest-float.c

	Removed these:

	* tests/addtest-rgb-float.c
	* tests/addtest-rgb-uint8.c
	* tests/colortest-rgb-float.c
	* tests/colortest-rgb-uint8.c
	* tests/copytest-rgb-float.c
	* tests/copytest-rgb-uint8.c
	* tests/fadetest-rgb-float.c
	* tests/fadetest-rgb-uint8.c
	* tests/graphapplytest-rgb-float.c
	* tests/iaddtest-rgb-float.c
	* tests/iaddtest-rgb-uint8.c
	* tests/imulttest-rgb-float.c
	* tests/imulttest-rgb-uint8.c
	* tests/multiplytest-rgb-float.c
	* tests/multtest-rgb-float.c
	* tests/multtest-rgb-uint8.c
	* tests/simpletreetest-rgb-float.c

2003-06-29 Calvin Williamson <calvinw@mindspring.com>

	Moved some switches and ifs outside the inner loops.

	* gegl/gegl-add.c
	* gegl/gegl-atop.c
	* gegl/gegl-color.c
	* gegl/gegl-darken.c
	* gegl/gegl-difference.c
	* gegl/gegl-fade.c
	* gegl/gegl-i-add.c
	* gegl/gegl-i-mult.c
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-multiply.c
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-pipe.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-unpremult.c
	* gegl/gegl-xor.c
	
2003-06-25 Calvin Williamson <calvinw@mindspring.com>

	Simplifications related to straightening out the Data classes and how ops
	install, retrieve, and validate data. This should clear up a lot of confusing
	code, and make it more apparent where we need to pass the data lists around. 

	Modified these:
	* HACKING
	* autogen.sh
	* configure.in
	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-atop.c
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-blend.c
	* gegl/gegl-blend.h
	* gegl/gegl-channel-data.c
	* gegl/gegl-channel-space.h
	* gegl/gegl-color-model.h
	* gegl/gegl-color.c
	* gegl/gegl-color.h
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-copy.c
	* gegl/gegl-darken.c
	* gegl/gegl-data.c
	* gegl/gegl-data.h
	* gegl/gegl-difference.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-fade.c
	* gegl/gegl-fade.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph.c
	* gegl/gegl-i-add.c
	* gegl/gegl-i-mult.c
	* gegl/gegl-image-data.c
	* gegl/gegl-image-op.c
	* gegl/gegl-image-op.h
	* gegl/gegl-init.c
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-mult.h
	* gegl/gegl-multiply.c
	* gegl/gegl-no-input.c
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-pipe.c
	* gegl/gegl-pixel-data.c
	* gegl/gegl-point-op.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-scalar-data.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-unary.c
	* gegl/gegl-unpremult.c
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl-xor.c
	* tests/Makefile.am
	* tests/colortest-rgb-float.c
	* tests/colortest-rgb-uint8.c
	* tests/gegl-check.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-point-op.c
	* tests/haverecttest.c
	* tests/needrecttest.c
	* tests/testgegl.c
	* tests/testutils.c

	Added some tests (gegl-mock-properties.c and mockpropertiesfiltertest.c) to
	illustrate how generic properties are treated for passing to ops. You can see
	examples of scalars, pixels, and channel data being passed to an op and being
	stored in the op's input data list, (which has a GValue inside it).

	Added these:
	* tests/checkoptest.c
	* tests/gegl-check-op.c
	* tests/gegl-check-op.h
	* tests/gegl-mock-properties-filter.c
	* tests/gegl-mock-properties-filter.h
	* tests/mockpropertiesfiltertest.c

	Removed these old tests:
	* tests/checktest.c
	* tests/gegl-check.c
	* tests/gegl-check.h
	* tests/gegl-mock-param-filter.c
	* tests/gegl-mock-param-filter.h

	Updated docs:
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-atop.sgml
	* docs/reference/gegl/tmpl/gegl-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-blend.sgml
	* docs/reference/gegl/tmpl/gegl-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-channel-data.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-float.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space.sgml
	* docs/reference/gegl/tmpl/gegl-color-data.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-gray.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-rgb.sgml
	* docs/reference/gegl/tmpl/gegl-color-space.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-component-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-component-storage.sgml
	* docs/reference/gegl/tmpl/gegl-copy.sgml
	* docs/reference/gegl/tmpl/gegl-darken.sgml
	* docs/reference/gegl/tmpl/gegl-data.sgml
	* docs/reference/gegl/tmpl/gegl-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-difference.sgml
	* docs/reference/gegl/tmpl/gegl-dump-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-eval-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-fade.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph-setup-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-i-add.sgml
	* docs/reference/gegl/tmpl/gegl-i-mult.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-inside.sgml
	* docs/reference/gegl/tmpl/gegl-lighten.sgml
	* docs/reference/gegl/tmpl/gegl-max.sgml
	* docs/reference/gegl/tmpl/gegl-min.sgml
	* docs/reference/gegl/tmpl/gegl-mult.sgml
	* docs/reference/gegl/tmpl/gegl-multiply.sgml
	* docs/reference/gegl/tmpl/gegl-no-input.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-object.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-outside.sgml
	* docs/reference/gegl/tmpl/gegl-over.sgml
	* docs/reference/gegl/tmpl/gegl-pipe.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-data.sgml
	* docs/reference/gegl/tmpl/gegl-point-op.sgml
	* docs/reference/gegl/tmpl/gegl-premult.sgml
	* docs/reference/gegl/tmpl/gegl-print.sgml
	* docs/reference/gegl/tmpl/gegl-scalar-data.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml
	* docs/reference/gegl/tmpl/gegl-screen.sgml
	* docs/reference/gegl/tmpl/gegl-storage.sgml
	* docs/reference/gegl/tmpl/gegl-subtract.sgml
	* docs/reference/gegl/tmpl/gegl-tile.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-unpremult.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-xor.sgml

2003-03-11  Sven Neumann  <sven@gimp.org>

	* autogen.sh
	* gegl/Makefile.am
	* gil/gil/Makefile.am
	* gil/tests/Makefile.am
	* tests/Makefile.am
	* tools/testsuite/Makefile.am: a couple of Makefile changes that
	make the gegl build work with automake-1.7. It should still work
	with automake-1.4 (and probably other versions).

2003-02-24 Calvin Williamson <calvinw@mindspring.com>

	Patch from Daniel Rogers (daniel@phasevelocity.org) for Copy op. 

	Modified these:

	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/gegl.types
	* gegl/Makefile.am
	* gegl/gegl.h
	* tests/Makefile.am
	* tests/testgegl.c

	Added these:

	* docs/reference/gegl/tmpl/gegl-copy.sgml
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* tests/copytest-rgb-float.c
	* tests/copytest-rgb-uint8.c

2003-02-11 Calvin Williamson <calvinw@mindspring.com>

	Renamed some classes:  
		data-space -> channel-space 
		data-buffer -> buffer 
		image -> image-op
		image-buffer -> image 
		image-buffer-data -> image-data
		image-buffer-iterator -> image-iterator

	Fixed circular header problems for lots of header files,
	and wrote a lot of gtk-doc documentation.

	Added these:
	* docs/dia/collectinputs.dia
	* docs/dia/graph.dia
	* docs/reference/gegl/compiling.sgml
	* docs/reference/gegl/configuring.sgml
	* docs/reference/gegl/cvs.sgml
	* docs/reference/gegl/debugging.sgml
	* docs/reference/gegl/images/collectinputs.png
	* docs/reference/gegl/images/graph.png
	* docs/reference/gegl/images/graphsource.png
	* docs/reference/gegl/mailinglists.sgml
	* docs/reference/gegl/prerequisites.sgml
	* docs/reference/gegl/tmpl/gegl-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-float.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space.sgml
	* docs/reference/gegl/tmpl/gegl-channel-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-color-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-op.sgml
	* docs/reference/gegl/tmpl/gegl-image-param-specs.sgml
	* docs/reference/gegl/unittests.sgml
	* docs/reference/gegl/version.xml.in
	* gegl/gegl-buffer.c
	* gegl/gegl-buffer.h
	* gegl/gegl-channel-space.c
	* gegl/gegl-channel-space-float.c
	* gegl/gegl-channel-space-float.h
	* gegl/gegl-channel-space.h
	* gegl/gegl-channel-space-uint8.c
	* gegl/gegl-channel-space-uint8.h
	* gegl/gegl-color-data.c
	* gegl/gegl-color-data.h
	* gegl/gegl-image-data.c
	* gegl/gegl-image-data.h
	* gegl/gegl-image-iterator.c
	* gegl/gegl-image-iterator.h
	* gegl/gegl-image-op.c
	* gegl/gegl-image-op.h
	* gegl/gegl-image-param-specs.c
	* gegl/gegl-image-param-specs.h
	* tests/buffertest.c
	* tests/channelspacetest.c
	* tests/gegl-mock-image-op.c
	* tests/gegl-mock-image-op.h
	* tests/imageiteratortest.c
	* tests/imageoptest.c

	Removed these:
	* docs/reference/gegl/tmpl/gegl-attributes.sgml
	* docs/reference/gegl/tmpl/gegl-data-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-data-space-float.sgml
	* docs/reference/gegl/tmpl/gegl-data-space.sgml
	* docs/reference/gegl/tmpl/gegl-data-space-u8.sgml
	* docs/reference/gegl/tmpl/gegl-data-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer-data.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer.sgml
	* gegl/gegl-data-buffer.c
	* gegl/gegl-data-buffer.h
	* gegl/gegl-data-space.c
	* gegl/gegl-data-space-float.c
	* gegl/gegl-data-space-float.h
	* gegl/gegl-data-space.h
	* gegl/gegl-data-space-uint8.c
	* gegl/gegl-data-space-uint8.h
	* gegl/gegl-image-buffer.c
	* gegl/gegl-image-buffer-data.c
	* gegl/gegl-image-buffer-data.h
	* gegl/gegl-image-buffer.h
	* gegl/gegl-image-buffer-iterator.c
	* gegl/gegl-image-buffer-iterator.h
	* gegl/gegl-image-buffer-param-specs.c
	* gegl/gegl-image-buffer-param-specs.h
	* tests/databuffertest.c
	* tests/dataspacetest.c
	* tests/gegl-mock-image.c
	* tests/gegl-mock-image.h
	* tests/imagebufferiteratortest.c
	* tests/imagebuffertest.c

	Changed these:
	* autogen.sh
	* configure.in
	* docs/dia/composite.dia
	* docs/gegl.html
	* docs/Makefile.am
	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/images/composite.png
	* docs/reference/gegl/Makefile.am
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-atop.sgml
	* docs/reference/gegl/tmpl/gegl-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-binary.sgml
	* docs/reference/gegl/tmpl/gegl-blend.sgml
	* docs/reference/gegl/tmpl/gegl-channel-data.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-color.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-gray.sgml
	* docs/reference/gegl/tmpl/gegl-color-space-rgb.sgml
	* docs/reference/gegl/tmpl/gegl-color-space.sgml
	* docs/reference/gegl/tmpl/gegl-component-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-component-storage.sgml
	* docs/reference/gegl/tmpl/gegl-comp.sgml
	* docs/reference/gegl/tmpl/gegl-darken.sgml
	* docs/reference/gegl/tmpl/gegl-data.sgml
	* docs/reference/gegl/tmpl/gegl-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-difference.sgml
	* docs/reference/gegl/tmpl/gegl-dump-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-bfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-dfs-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-eval-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-fade.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph-setup-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-i-add.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-i-mult.sgml
	* docs/reference/gegl/tmpl/gegl-input-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-inside.sgml
	* docs/reference/gegl/tmpl/gegl-lighten.sgml
	* docs/reference/gegl/tmpl/gegl-max.sgml
	* docs/reference/gegl/tmpl/gegl-min.sgml
	* docs/reference/gegl/tmpl/gegl-multiply.sgml
	* docs/reference/gegl/tmpl/gegl-mult.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-no-input.sgml
	* docs/reference/gegl/tmpl/gegl-object.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-outside.sgml
	* docs/reference/gegl/tmpl/gegl-over.sgml
	* docs/reference/gegl/tmpl/gegl-pipe.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-data.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-point-op.sgml
	* docs/reference/gegl/tmpl/gegl-premult.sgml
	* docs/reference/gegl/tmpl/gegl-print.sgml
	* docs/reference/gegl/tmpl/gegl-scalar-data.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml
	* docs/reference/gegl/tmpl/gegl-screen.sgml
	* docs/reference/gegl/tmpl/gegl-storage.sgml
	* docs/reference/gegl/tmpl/gegl-subtract.sgml
	* docs/reference/gegl/tmpl/gegl-tile.sgml
	* docs/reference/gegl/tmpl/gegl-types.sgml
	* docs/reference/gegl/tmpl/gegl-unary.sgml
	* docs/reference/gegl/tmpl/gegl-unpremult.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-xor.sgml
	* docs/TODO.xml
	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-atop.c
	* gegl/gegl-atop.h
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-blend.c
	* gegl/gegl-blend.h
	* gegl/gegl-channel-data.c
	* gegl/gegl-channel-data.h
	* gegl/gegl-channel-param-specs.c
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-color.c
	* gegl/gegl-color.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-color-space.h
	* gegl/gegl-color-space-rgb.h
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-component-color-model.c
	* gegl/gegl-component-color-model.h
	* gegl/gegl-component-storage.c
	* gegl/gegl-component-storage.h
	* gegl/gegl-darken.c
	* gegl/gegl-darken.h
	* gegl/gegl-data.h
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dfs-visitor.h
	* gegl/gegl-difference.c
	* gegl/gegl-difference.h
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-dump-visitor.h
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-bfs-visitor.h
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.h
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-mgr.h
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-eval-visitor.h
	* gegl/gegl-fade.c
	* gegl/gegl-fade.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph.c
	* gegl/gegl-graph.h
	* gegl/gegl-graph-setup-visitor.h
	* gegl/gegl.h
	* gegl/gegl-i-add.c
	* gegl/gegl-i-add.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-i-mult.c
	* gegl/gegl-i-mult.h
	* gegl/gegl-init.c
	* gegl/gegl-input-value-types.h
	* gegl/gegl-inside.c
	* gegl/gegl-inside.h
	* gegl/gegl-lighten.c
	* gegl/gegl-lighten.h
	* gegl/gegl-max.c
	* gegl/gegl-max.h
	* gegl/gegl-min.c
	* gegl/gegl-min.h
	* gegl/gegl-mult.c
	* gegl/gegl-mult.h
	* gegl/gegl-multiply.c
	* gegl/gegl-multiply.h
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-no-input.c
	* gegl/gegl-no-input.h
	* gegl/gegl-object.c
	* gegl/gegl-object.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-outside.c
	* gegl/gegl-outside.h
	* gegl/gegl-over.c
	* gegl/gegl-over.h
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-pixel-data.c
	* gegl/gegl-pixel-data.h
	* gegl/gegl-pixel-param-specs.c
	* gegl/gegl-pixel-param-specs.h
	* gegl/gegl-pixel-value-types.c
	* gegl/gegl-pixel-value-types.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-premult.c
	* gegl/gegl-premult.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-scalar-data.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-screen.h
	* gegl/gegl-storage.c
	* gegl/gegl-storage.h
	* gegl/gegl-subtract.c
	* gegl/gegl-subtract.h
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-unary.c
	* gegl/gegl-unary.h
	* gegl/gegl-unpremult.c
	* gegl/gegl-unpremult.h
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl-xor.c
	* gegl/gegl-xor.h
	* gegl/Makefile.am
	* gegl.pc.in
	* gil/gil/Makefile.am
	* gil/tests/Makefile.am
	* HACKING
	* Makefile.am
	* README
	* tests/addtest-rgb-float.c
	* tests/addtest-rgb-uint8.c
	* tests/checktest.c
	* tests/colormodeltest.c
	* tests/colortest-rgb-float.c
	* tests/colortest-rgb-uint8.c
	* tests/fadetest-rgb-float.c
	* tests/fadetest-rgb-uint8.c
	* tests/gegl-check.c
	* tests/gegl-check.h
	* tests/gegl-mock-bfs-visitor.h
	* tests/gegl-mock-dfs-visitor.h
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-filter.h
	* tests/gegl-mock-node.h
	* tests/gegl-mock-object.h
	* tests/gegl-mock-op.h
	* tests/gegl-mock-param-filter.h
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-point-op.h
	* tests/gegl-mock-visitor.h
	* tests/graphapplytest-rgb-float.c
	* tests/haverecttest.c
	* tests/iaddtest-rgb-float.c
	* tests/iaddtest-rgb-uint8.c
	* tests/imagetest.c
	* tests/imulttest-rgb-float.c
	* tests/imulttest-rgb-uint8.c
	* tests/Makefile.am
	* tests/multiplytest-rgb-float.c
	* tests/multtest-rgb-float.c
	* tests/multtest-rgb-uint8.c
	* tests/needrecttest.c
	* tests/objecttest.c
	* tests/paramtest.c
	* tests/pipetest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest-rgb-float.c
	* tests/storagetest.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tiletest.c
	* tests/valueimagedatatest.c

2002-12-20 Calvin Williamson <calvinw@mindspring.com>

	Renamed GeglAttribute to GeglData and expanded these to have subclasses
	for PixelData, ChannelData, ImageData, and ScalarData. Now there are nodes and
	ops, with the data classes representing the data that is passed through the
	graph during evaluation. Also added op properties to represent the various
	generic input and output data for each of the ops. Regular gobject data
	specific properties will map to some generic data property. The data properties
	are held in the op class. Renamed previous ImageData to ImageBuffer.   	

	Added these:
	* docs/reference/gegl/images/node_2inputs_1output.png
	* docs/reference/gegl/tmpl/gegl-image-buffer-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-input-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-input-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer-data.sgml
	* docs/reference/gegl/tmpl/gegl-data-space-uint8.sgml
	* docs/reference/gegl/tmpl/gegl-image-buffer.sgml
	* docs/reference/gegl/tmpl/gegl-data.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-data.sgml
	* docs/reference/gegl/tmpl/gegl-channel-data.sgml
	* docs/reference/gegl/tmpl/gegl-scalar-data.sgml
	* gegl/gegl-image-buffer-iterator.c
	* gegl/gegl-image-buffer-iterator.h
	* gegl/gegl-image-buffer-data.h
	* gegl/gegl-image-buffer-param-specs.h
	* gegl/gegl-image-buffer.c
	* gegl/gegl-image-buffer.h
	* gegl/gegl-data.c
	* gegl/gegl-data.h
	* gegl/gegl-scalar-data.c
	* gegl/gegl-pixel-data.c
	* gegl/gegl-pixel-data.h
	* gegl/gegl-channel-data.c
	* gegl/gegl-channel-data.h
	* gegl/gegl-image-buffer-data.c
	* gegl/gegl-scalar-data.h
	* gegl/gegl-image-buffer-param-specs.c
	* gegl/gegl-input-param-specs.c
	* gegl/gegl-input-param-specs.h
	* gegl/gegl-input-value-types.h
	* gegl/gegl-input-value-types.c
	* gegl/gegl-data-space-uint8.c
	* gegl/gegl-data-space-uint8.h
	* tests/imagebuffertest.c
	* tests/gegl-mock-param-filter.c
	* tests/gegl-mock-param-filter.h
	* tests/imagebufferiteratortest.c
	* tests/channelvaluetest.c
	
	Removed these:
	* docs/reference/gegl/tmpl/gegl-image-data-iterator.sgml
	* docs/reference/gegl/tmpl/gegl-image-data-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-image-data.sgml
	* gegl/gegl-attributes.c
	* gegl/gegl-attributes.h
	* gegl/gegl-data-space-u8.c
	* gegl/gegl-data-space-u8.h
	* gegl/gegl-image-data-iterator.c
	* gegl/gegl-image-data-iterator.h
	* gegl/gegl-image-data-param-specs.c
	* gegl/gegl-image-data-param-specs.h
	* gegl/gegl-image-data.c
	* gegl/gegl-image-data.h
	* tests/imagedataiteratortest.c
	* tests/imagedatatest.c
		
	Modified these as described above:
	* gegl/Makefile.am
	* gegl/gegl-add.c
	* gegl/gegl-atop.c
	* gegl/gegl-binary.c
	* gegl/gegl-blend.c
	* gegl/gegl-channel-param-specs.c
	* gegl/gegl-channel-param-specs.h
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-color.c
	* gegl/gegl-comp.c
	* gegl/gegl-darken.c
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-difference.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-fade.c
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph.c
	* gegl/gegl-i-add.c
	* gegl/gegl-i-mult.c
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-init.c
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-multiply.c
	* gegl/gegl-no-input.c
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-pixel-param-specs.c
	* gegl/gegl-pixel-param-specs.h
	* gegl/gegl-pixel-value-types.c
	* gegl/gegl-point-op.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-types.h
	* gegl/gegl-unary.c
	* gegl/gegl-unpremult.c
	* gegl/gegl-utils.c
	* gegl/gegl-value-types.h
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl-xor.c
	* gegl/gegl.h

	Updated tests: 
	* tests/Makefile.am
	* tests/addtest-rgb-float.c
	* tests/addtest-rgb-uint8.c
	* tests/bfsvisitormultouttest.c
	* tests/bfsvisitortest.c
	* tests/checktest.c
	* tests/colormodeltest.c
	* tests/colortest-rgb-float.c
	* tests/dataspacetest.c
	* tests/dfsvisitormultouttest.c
	* tests/dfsvisitortest.c
	* tests/fadetest-rgb-float.c
	* tests/fadetest-rgb-uint8.c
	* tests/gegl-check.c
	* tests/gegl-check.h
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-image.c
	* tests/gegl-mock-node.c
	* tests/gegl-mock-op.c
	* tests/gegl-mock-point-op.c
	* tests/graphapplytest-rgb-float.c
	* tests/graphnodetest.c
	* tests/haverecttest.c
	* tests/iaddtest-rgb-float.c
	* tests/iaddtest-rgb-uint8.c
	* tests/imulttest-rgb-float.c
	* tests/imulttest-rgb-uint8.c
	* tests/multiplytest-rgb-float.c
	* tests/multtest-rgb-float.c
	* tests/multtest-rgb-uint8.c
	* tests/needrecttest.c
	* tests/nodetest.c
	* tests/optest.c
	* tests/paramtest.c
	* tests/pipetest.c
	* tests/pixelrgbuint8valuetest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest-rgb-float.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/valueimagedatatest.c

	Updated docs:
	* docs/dia/simplegraph.dia
	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/gegl.types
	* docs/reference/gegl/images/simplegraph.png
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-attributes.sgml
	* docs/reference/gegl/tmpl/gegl-channel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-component-color-model.sgml
	* docs/reference/gegl/tmpl/gegl-eval-mgr.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph-setup-visitor.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-point-op.sgml
	* docs/reference/gegl/tmpl/gegl-scanline-processor.sgml
	* docs/reference/gegl/tmpl/gegl-storage.sgml
	* docs/reference/gegl/tmpl/gegl-tile.sgml
	* docs/reference/gegl/tmpl/gegl-types.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* docs/reference/gegl/tmpl/gegl-visitor.sgml

2002-11-13 Calvin Williamson <calvinw@mindspring.com>
	
	Created gegl-init.c and moved all init code out of gegl-utils. Then
	split the value types and the param specs into separate channel and pixel value
	types. See the corresponding unit tests for examples.

	Also temporarily removed multiple outputs from the nodes classes till work
	is complete on setting up the list of attributes/paramspecs to pass to each op.
	Too confusing to do it with multiple outputs for now. 

	Added more rgba value types and param specs.    

	Removed gegl_op_apply_image for time being as well, not sure it
	makes sense in the current scheme.

	* gegl/Makefile.am
	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-binary.c
	* gegl/gegl-color.c
	* gegl/gegl-comp.c
	* gegl/gegl-data-space-float.c
	* gegl/gegl-data-space-u8.c
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph-setup-visitor.c
	* gegl/gegl-graph.c
	* gegl/gegl-graph.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-no-input.c
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-point-op.c
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-types.h
	* gegl/gegl-unary.c
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-value-types.h
	* gegl/gegl-visitor.c
	* gegl/gegl.h
	* docs/reference/gegl/Makefile.am
	* docs/reference/gegl/gegl-docs.sgml
	* docs/reference/gegl/gegl-sections.txt
	* docs/reference/gegl/gegl-undocumented.txt
	* docs/reference/gegl/tmpl/gegl-add.sgml
	* docs/reference/gegl/tmpl/gegl-attributes.sgml
	* docs/reference/gegl/tmpl/gegl-filter.sgml
	* docs/reference/gegl/tmpl/gegl-graph.sgml
	* docs/reference/gegl/tmpl/gegl-image.sgml
	* docs/reference/gegl/tmpl/gegl-node.sgml
	* docs/reference/gegl/tmpl/gegl-op.sgml
	* docs/reference/gegl/tmpl/gegl-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-types.sgml
	* docs/reference/gegl/tmpl/gegl-unused.sgml
	* docs/reference/gegl/tmpl/gegl-utils.sgml
	* docs/reference/gegl/tmpl/gegl-value-types.sgml
	* tests/Makefile.am
	* tests/addtest-rgb-float.c
	* tests/addtest-rgb-uint8.c
	* tests/bfsvisitortest.c
	* tests/checktest.c
	* tests/colormodeltest.c
	* tests/colorspacetest.c
	* tests/colortest-rgb-float.c
	* tests/databuffertest.c
	* tests/dataspacetest.c
	* tests/dfsvisitortest.c
	* tests/dumpvisitortest.c
	* tests/fadetest-rgb-float.c
	* tests/fadetest-rgb-uint8.c
	* tests/gegl-check.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-filter.h
	* tests/gegl-mock-point-op.c
	* tests/graphapplytest-rgb-float.c
	* tests/graphnodetest.c
	* tests/iaddtest-rgb-float.c
	* tests/iaddtest-rgb-uint8.c
	* tests/imagedatatest.c
	* tests/imulttest-rgb-float.c
	* tests/imulttest-rgb-uint8.c
	* tests/multiplytest-rgb-float.c
	* tests/multtest-rgb-float.c
	* tests/multtest-rgb-uint8.c
	* tests/nodemultouttest.c
	* tests/nodetest.c
	* tests/objecttest.c
	* tests/optest.c
	* tests/paramtest.c
	* tests/simpletreetest-rgb-float.c
	* tests/storagetest.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tiletest.c
	* tests/valueimagedatatest.c
	* tests/valuetest.c
	Modified these as described above.

	* docs/reference/gegl/tmpl/gegl-init.sgml
	* docs/reference/gegl/tmpl/gegl-channel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-image-data-param-specs.sgml
	* docs/reference/gegl/tmpl/gegl-channel-value-types.sgml
	* docs/reference/gegl/tmpl/gegl-pixel-value-types.sgml
	* gegl/gegl-channel-value-types.c
	* gegl/gegl-channel-value-types.h
	* gegl/gegl-pixel-value-types.c
	* gegl/gegl-pixel-value-types.h
	* gegl/gegl-channel-param-specs.c
	* gegl/gegl-channel-param-specs.h
	* gegl/gegl-pixel-param-specs.h
	* gegl/gegl-pixel-param-specs.c
	* gegl/gegl-image-data-param-specs.c
	* gegl/gegl-image-data-param-specs.h
	* gegl/gegl-init.c
	* gegl/gegl-init.h
	* tests/pixelrgbfloatvaluetest.c
	* tests/pixelrgbafloatvaluetest.c
	* tests/channelfloatvaluetest.c
	* tests/pixelrgbuint8valuetest.c
	* tests/channeluint8valuetest.c
	Added these to split up value types into channel and pixel value types.
	Fixed the tests to reflect this as well. Also split the pixel and channel 
	and image data param specs.

	* gegl/gegl-param-specs.c
	* gegl/gegl-value-types.c
	* tests/nodemultouttest.c
	* tests/floatvaluetest.c
	* tests/rgbfloatvaluetest.c
	* tests/rgbuint8valuetest.c
	* tests/uint8valuetest.c
	Removed these since split channel and pixel value types. 	


2002-11-11  Sven Neumann  <sven@gimp.org>

	* docs/Makefile.am: fixed rule for TODO.html

	* tests/Makefile.am: use the automake TESTS target to build testgegl.
	Use 'make check' to run the tests.

2002-10-15 Calvin Williamson <calvinw@mindspring.com>

	The ColorModel classes now have a ColorSpace (RGB, GRAY, etc) and a DataSpace
	(8bit, 16bit, float).  DataSpaces describe channel data or indexed data. 

	Introduced ImageData objects to describe image output from Filters.  Each
	ImageData has an area, a ColorModel and a Tile (eventually Tile system or
	manager).  Each Tile in turn has a DataBuffer and Storage object.  The
	DataBuffer has pointers to banks of data and the Storage object has info that
	describes the samples in each bank. 

	The ComponentColorModel and ComponentStorage subclasses of ColorModel and
	Storage describe the regular separated channels component color models (R,G,B
	stored in separate banks in the DataBuffer)

	ImageDataIterator allows getting pixels for an area of ImageData object.  

	Also began introducing some gegl value types for CHANNEL, PIXEL, FLOAT, UINT8,
	etc. These will let us use GValue techniques for passing all inputs to ops, and
	describing/validating them with param specs. (see gegl-value-types.c,
	gegl-param-specs.c) For tests for these see valuetest.c floatvaluetest.c,etc
	in the unit tests. 

	* gegl/gegl-color-space.c
	* gegl/gegl-color-space-gray.c
	* gegl/gegl-color-space-gray.h
	* gegl/gegl-color-space.h
	* gegl/gegl-color-space-rgb.c
	* gegl/gegl-color-space-rgb.h
	* gegl/gegl-component-color-model.c
	* gegl/gegl-component-color-model.h
	* gegl/gegl-component-storage.c
	* gegl/gegl-component-storage.h
	* gegl/gegl-data-buffer.c
	* gegl/gegl-data-buffer.h
	* gegl/gegl-data-space.c
	* gegl/gegl-data-space-float.c
	* gegl/gegl-data-space-float.h
	* gegl/gegl-data-space.h
	* gegl/gegl-data-space-u8.c
	* gegl/gegl-data-space-u8.h
	* gegl/gegl-i-add.c
	* gegl/gegl-i-add.h
	* gegl/gegl-image-data.c
	* gegl/gegl-image-data.h
	* gegl/gegl-image-data-iterator.c
	* gegl/gegl-image-data-iterator.h
	* gegl/gegl-i-mult.c
	* gegl/gegl-i-mult.h
	* gegl/gegl-mult.c
	* gegl/gegl-mult.h
	* gegl/gegl-storage.c
	* gegl/gegl-storage.h
	* tests/addtest-rgb-float.c
	* tests/addtest-rgb-uint8.c
	* tests/checktest.c
	* tests/colorspacetest.c
	* tests/colortest-rgb-float.c
	* tests/colortest-rgb-uint8.c
	* tests/databuffertest.c
	* tests/dataspacetest.c
	* tests/fadetest-rgb-float.c
	* tests/fadetest-rgb-uint8.c
	* tests/floatvaluetest.c
	* tests/gegl-check.c
	* tests/gegl-check.h
	* tests/graphapplytest-rgb-float.c
	* tests/iaddtest-rgb-float.c
	* tests/iaddtest-rgb-uint8.c
	* tests/imagedataiteratortest.c
	* tests/imagedatatest.c
	* tests/imulttest-rgb-float.c
	* tests/imulttest-rgb-uint8.c
	* tests/multiplytest-rgb-float.c
	* tests/multtest-rgb-float.c
	* tests/multtest-rgb-uint8.c
	* tests/paramtest.c
	* tests/rgbfloatvaluetest.c
	* tests/rgbuint8valuetest.c
	* tests/simpletreetest-rgb-float.c
	* tests/storagetest.c
	* tests/uint8valuetest.c
	* tests/valueimagedatatest.c
	* tests/valuetest.c

	Added these.

	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-atop.c
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-blend.c
	* gegl/gegl-color.c
	* gegl/gegl-color.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-darken.c
	* gegl/gegl-difference.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-mgr.h
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-fade.c
	* gegl/gegl-fade.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph.c
	* gegl/gegl.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-inside.c
	* gegl/gegl-lighten.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-multiply.c
	* gegl/gegl-no-input.c
	* gegl/gegl-no-input.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-outside.c
	* gegl/gegl-over.c
	* gegl/gegl-param-specs.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-point-op.c
	* gegl/gegl-premult.c
	* gegl/gegl-print.c
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-unary.c
	* gegl/gegl-unary.h
	* gegl/gegl-unpremult.c
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-value-types.c
	* gegl/gegl-value-types.h
	* gegl/gegl-xor.c
	* gegl/Makefile.am
	* tests/colormodeltest.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-filter.h
	* tests/gegl-mock-point-op.c
	* tests/haverecttest.c
	* tests/imagetest.c
	* tests/Makefile.am
	* tests/needrecttest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tiletest.c

	Modified.

	* gegl/gegl-buffer.c
	* gegl/gegl-buffer.h
	* gegl/gegl-color-model-gray.c
	* gegl/gegl-color-model-gray-float.c
	* gegl/gegl-color-model-gray-float.h
	* gegl/gegl-color-model-gray.h
	* gegl/gegl-color-model-gray-u16.c
	* gegl/gegl-color-model-gray-u16.h
	* gegl/gegl-color-model-gray-u8.c
	* gegl/gegl-color-model-gray-u8.h
	* gegl/gegl-color-model-rgb.c
	* gegl/gegl-color-model-rgb-float.c
	* gegl/gegl-color-model-rgb-float.h
	* gegl/gegl-color-model-rgb.h
	* gegl/gegl-color-model-rgb-u16.c
	* gegl/gegl-color-model-rgb-u16.h
	* gegl/gegl-color-model-rgb-u8.c
	* gegl/gegl-color-model-rgb-u8.h
	* gegl/gegl-const-mult.c
	* gegl/gegl-const-mult.h
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-mem-buffer.c
	* gegl/gegl-mem-buffer.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-tiled-image.c
	* gegl/gegl-tiled-image.h
	* gegl/gegl-tile-iterator.c
	* gegl/gegl-tile-iterator.h
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-value-transform.c
	* tests/addtest.c
	* tests/buffertest.c
	* tests/colormodelrgbfloattest.c
	* tests/colormodelrgbtest.c
	* tests/colortest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/fadetest.c
	* tests/filltest.c
	* tests/graphapplytest.c
	* tests/membuffertest.c
	* tests/multiplytest.c
	* tests/sampledimagetest.c
	* tests/simpletreetest.c
	* tests/statoptest.c
	* tests/tiledimagetest.c
	* tests/tileiteratortest.c
	* tests/tilemgrtest.c
	* tests/valuetiletest.c
	
	Removed these.

2002-09-13 Calvin Williamson <calvinw@mindspring.com>

	Removed the composite nodes and broke these into Over, Atop, Inside,
	Outside and Xor.  These all inherit from the Comp class. You can pass a
	boolean to these to say whether the fg should be premultiplied before the
	operation. 
	
	Next started to move some of the blend modes into separate classes. Normal,
	Darken, Lighten, Multiply, Screen, Difference are examples of these.  They
	all use (1-aB)*F + (1-aF)*B + aB * aF * f(F/aF, B/aB) where f(x,y)
	describes the blending mode, and Foreground = (F, aF) Background = (B, aB)
	are premultiplied.  These all extend Blend, so that you can pass an opacity
	on the Foreground for each of these. These ops are the standard layer modes
	in gimp. Will add soft light, hard light, exclusion, overlay, etc. to these.

	Finally left the other binary ops under Binary. These are Max, Min, Add, 
	Subtract, etc. These are just straight f(x,y) expressions. You can place
	a multiplier (fade) on the second input to these to control the percent of
	the second input to use.	
	 
	* gegl/Makefile.am
	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-attributes.c
	* gegl/gegl-buffer.c
	* gegl/gegl-buffer.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color.c
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-const-mult.c
	* gegl/gegl-const-mult.h
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-max.c
	* gegl/gegl-max.h
	* gegl/gegl-min.c
	* gegl/gegl-min.h
	* gegl/gegl-param-specs.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-premult.c
	* gegl/gegl-premult.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-screen.c
	* gegl/gegl-screen.h
	* gegl/gegl-subtract.c
	* gegl/gegl-subtract.h
	* gegl/gegl-tile-iterator.c
	* gegl/gegl-tile-iterator.h
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-unpremult.c
	* gegl/gegl-unpremult.h
	* gegl/gegl-utils.c
	* gegl/gegl.h

	Modified these.

	* gegl/gegl-atop.c
	* gegl/gegl-atop.h
	* gegl/gegl-binary.c
	* gegl/gegl-binary.h
	* gegl/gegl-blend.c
	* gegl/gegl-blend.h
	* gegl/gegl-darken.c
	* gegl/gegl-darken.h
	* gegl/gegl-difference.c
	* gegl/gegl-difference.h
	* gegl/gegl-fade.c
	* gegl/gegl-fade.h
	* gegl/gegl-inside.c
	* gegl/gegl-inside.h
	* gegl/gegl-lighten.c
	* gegl/gegl-lighten.h
	* gegl/gegl-multiply.c
	* gegl/gegl-multiply.h
	* gegl/gegl-no-input.c
	* gegl/gegl-no-input.h
	* gegl/gegl-outside.c
	* gegl/gegl-outside.h
	* gegl/gegl-over.c
	* gegl/gegl-over.h
	* gegl/gegl-pipe.c
	* gegl/gegl-pipe.h
	* gegl/gegl-tiled-image.c
	* gegl/gegl-tiled-image.h
	* gegl/gegl-unary.c
	* gegl/gegl-unary.h
	* gegl/gegl-xor.c
	* gegl/gegl-xor.h

	Added.

	* gegl/gegl-comp-premult.c
	* gegl/gegl-comp-premult.h
	* gegl/gegl-dark.c
	* gegl/gegl-dark.h
	* gegl/gegl-diff.c
	* gegl/gegl-diff.h
	* gegl/gegl-light.c
	* gegl/gegl-light.h
	* gegl/gegl-mult.c
	* gegl/gegl-mult.h
	* gegl/gegl-stat-op.c
	* gegl/gegl-stat-op.h

	* tests/Makefile.am
	* tests/addtest.c
	* tests/colormodeltest.c
	* tests/colortest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/dfsvisitortest.c
	* tests/filltest.c
	* tests/graphapplytest.c
	* tests/haverecttest.c
	* tests/imagetest.c
	* tests/needrecttest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/sampledimagetest.c
	* tests/simpletreetest.c
	* tests/statoptest.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tileiteratortest.c
	* tests/tiletest.c

	Updated the tests to match changes above. testutils was changed to handle
	more colormodels.

	* tests/valuetest.c
	
	Removed.

	* tests/fadetest.c
	* tests/multiplytest.c
	* tests/pipetest.c
	* tests/tiledimagetest.c
	* tests/valuetiletest.c

	New tests.

2002-08-26 Calvin Williamson <calvinw@mindspring.com>

	Updated Node class to incorporate multi-output nodes. Now nodes have a
	(usually) fixed number of outputs and inputs for their lifetime.  Changed
	the terminology to use sinks for nodes attached to outputs, and sources for
	nodes attached to inputs. Also made changes to properties and moved all of
	the "num_inputs", "num_outputs", "source0", "source1", etc properties to
	the Node class.

	* gegl/gegl-add.c
	* gegl/gegl-comp-premult.c
	* gegl/gegl-comp.c
	* gegl/gegl-const-mult.c
	* gegl/gegl-dark.c
	* gegl/gegl-diff.c
	* gegl/gegl-eval-bfs-visitor.c
	* gegl/gegl-eval-bfs-visitor.h
	* gegl/gegl-eval-dfs-visitor.c
	* gegl/gegl-eval-dfs-visitor.h
	* gegl/gegl-eval-mgr.c
	* gegl/gegl-eval-mgr.h
	* gegl/gegl-eval-visitor.c
	* gegl/gegl-eval-visitor.h
	* gegl/gegl-light.c
	* gegl/gegl-max.c
	* gegl/gegl-min.c
	* gegl/gegl-mult.c
	* gegl/gegl-premult.c
	* gegl/gegl-screen.c
	* gegl/gegl-subtract.c
	* gegl/gegl-unpremult.c

	Added these to replace the removed .gil versions of these. Only add,
	const-mult, mult, comp, comp-premult have more than just the float case
	right now. The rest just have float data types.

	* codegen/test_files/gegl-add.gil
	* codegen/test_files/gegl-comp-premult.gil
	* codegen/test_files/gegl-comp.gil
	* codegen/test_files/gegl-const-mult.gil
	* codegen/test_files/gegl-dark.gil
	* codegen/test_files/gegl-diff.gil
	* codegen/test_files/gegl-light.gil
	* codegen/test_files/gegl-max.gil
	* codegen/test_files/gegl-min.gil
	* codegen/test_files/gegl-mult.gil
	* codegen/test_files/gegl-premult.gil
	* codegen/test_files/gegl-screen.gil
	* codegen/test_files/gegl-subtract.gil
	* codegen/test_files/gegl-unpremult.gil

	Moved the .gil files to codegen test directory for now.  

	* gil/gil/Makefile.am
	* gil/gil/gil-bfs-visitor.c
	* gil/gil/gil-bfs-visitor.h
	* gil/gil/gil-binary-op.c
	* gil/gil/gil-binary-op.h
	* gil/gil/gil-block.c
	* gil/gil/gil-block.h
	* gil/gil/gil-constant.c
	* gil/gil/gil-constant.h
	* gil/gil/gil-dfs-visitor.c
	* gil/gil/gil-dfs-visitor.h
	* gil/gil/gil-expr-statement.c
	* gil/gil/gil-expr-statement.h
	* gil/gil/gil-expression.c
	* gil/gil/gil-expression.h
	* gil/gil/gil-node.c
	* gil/gil/gil-node.h
	* gil/gil/gil-statement.c
	* gil/gil/gil-statement.h
	* gil/gil/gil-types.h
	* gil/gil/gil-unary-op.c
	* gil/gil/gil-unary-op.h
	* gil/gil/gil-variable.c
	* gil/gil/gil-variable.h
	* gil/gil/gil-visitor.c
	* gil/gil/gil-visitor.h
	* gil/gil/gil.h
	* gil/gil/gilast.c
	* gil/gil/gilast.h
	* gil/gil/gilinterpret.c
	* gil/gil/gilinterpret.h
	* gil/gil/gilstatement.c
	* gil/gil/gilstatement.h
	* gil/gil/gilsymbol.c
	* gil/gil/gilsymbol.h
	* gil/gil/gilsymboltable.c
	* gil/gil/gilsymboltable.h
	* gil/gil/giltype.c
	* gil/gil/giltype.h
	* gil/gil/lexer.l
	* gil/gil/parse.y
	* gil/gil/parse.y.declonly
	* gil/gil/parse.y.noactions
	* gil/gil/parse.y.withdecl
	* gil/gil/parse.y.withdeclsnoactions
	* gil/gil/test-declarations.gil
	* gil/gil/test-expressions.gil

	Adding new gil code, uses GObjects and constructs parse trees so far.
	See the unit tests added below for details (in gil/tests dir)

	* gil/tests/Makefile.am
	* gil/tests/bfsvisitortest.c
	* gil/tests/binaryoptest.c
	* gil/tests/blocktest.c
	* gil/tests/constanttest.c
	* gil/tests/dfsvisitortest.c
	* gil/tests/exprstatementtest.c
	* gil/tests/gil-mock-bfs-visitor.c
	* gil/tests/gil-mock-bfs-visitor.h
	* gil/tests/gil-mock-dfs-visitor.c
	* gil/tests/gil-mock-dfs-visitor.h
	* gil/tests/gil-mock-node.c
	* gil/tests/gil-mock-node.h
	* gil/tests/gil-mock-visitor.c
	* gil/tests/gil-mock-visitor.h
	* gil/tests/nodetest.c
	* gil/tests/testgil.c
	* gil/tests/unaryoptest.c
	* gil/tests/variabletest.c

	Adding new unit tests for gil code

	* tests/bfsvisitormultouttest.c
	* tests/dfsvisitormultouttest.c
	* tests/nodemultouttest.c

	Added these gegl unit tests, mostly for multi-output nodes.

	* gegl/gegl-add.gil
	* gegl/gegl-comp-premult.gil
	* gegl/gegl-comp.gil
	* gegl/gegl-const-mult.gil
	* gegl/gegl-dark.gil
	* gegl/gegl-diff.gil
	* gegl/gegl-light.gil
	* gegl/gegl-max.gil
	* gegl/gegl-min.gil
	* gegl/gegl-mult.gil
	* gegl/gegl-premult.gil
	* gegl/gegl-screen.gil
	* gegl/gegl-subtract.gil
	* gegl/gegl-unpremult.gil
	* gegl/gegl-graph-bfs-visitor.c
	* gegl/gegl-graph-bfs-visitor.h
	* gegl/gegl-graph-dfs-visitor.c
	* gegl/gegl-graph-dfs-visitor.h
	* gegl/gegl-graph-evaluate-visitor.c
	* gegl/gegl-graph-evaluate-visitor.h
	* gegl/gegl-graph-init-visitor.c
	* gegl/gegl-graph-init-visitor.h

	The .gils got retired to codegen directory, and graph stuff got re-written
	and moved in the Eval classes (EvalMgr, EvalDfsVisitor, etc)

	* gil/gilast.c
	* gil/gilast.h
	* gil/gilinterpret.c
	* gil/gilinterpret.h
	* gil/gilsymbol.c
	* gil/gilsymbol.h
	* gil/gilsymboltable.c
	* gil/gilsymboltable.h
	* gil/giltype.c
	* gil/giltype.h
	* gil/lexer.l
	* gil/parse.y
	* gil/test.gil

	This got moved to gil/gil directory. Eventually will be replaced completely
	with new gil gobject code.

	* gegl/Makefile.am
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-buffer.h
	* gegl/gegl-color-model.h
	* gegl/gegl-color.h
	* gegl/gegl-comp-premult.h
	* gegl/gegl-comp.h
	* gegl/gegl-copy.c
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dfs-visitor.h
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-dump-visitor.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-graph-setup-visitor.c
	* gegl/gegl-graph-setup-visitor.h
	* gegl/gegl-graph.c
	* gegl/gegl-graph.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-mem-buffer.h
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-param-specs.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-point-op.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-stat-op.h
	* gegl/gegl-tile-iterator.c
	* gegl/gegl-tile-iterator.h
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-value-types.c
	* gegl/gegl-value-types.h
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl.h

	Most changes in Node, introducing Eval classes. Took out gil stuff from
	Makefile.am

	* ChangeLog
	* HACKING
	* Makefile.am
	* README
	* configure.in
	* gil/Makefile.am
	* gil/README

	Miscellaneous changes.

	* tests/Makefile.am
	* tests/addtest.c
	* tests/bfsvisitortest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/dfsvisitortest.c
	* tests/dumpvisitortest.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-image.c
	* tests/gegl-mock-node.c
	* tests/gegl-mock-op.c
	* tests/gegl-mock-point-op.c
	* tests/graphapplytest.c
	* tests/graphnodetest.c
	* tests/imagetest.c
	* tests/needrecttest.c
	* tests/nodetest.c
	* tests/optest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/sampledimagetest.c
	* tests/simpletreetest.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/valuetest.c

	Updated lots of tests, mostly moving Properties around, updating for
	multi-output nodes.

2002-08-11 Calvin Williamson <calvinw@mindspring.com>

	Re-arranged the basic composite pattern again. Now we have Graphs as the
	composite or container class, Filter is the leaf or non-container class and
	Op as the common superclass. Op is a thing which produces outputs from
	inputs. So Graphs now contain Filters and other Graphs. 

	Also added Attributes structures, the Op class has an array of these. These
	hold the values of outputs, param specs that describe the outputs, and have
	rects, need rects, colormodels and any other attributes that are passed up
	and down the tree. Added a bunch of visitors to do the Graph traversals.

	* gegl/gegl-graph-bfs-visitor.h
	* gegl/gegl-graph-dfs-visitor.c
	* gegl/gegl-graph-dfs-visitor.h
	* gegl/gegl-graph-evaluate-visitor.c
	* gegl/gegl-graph-bfs-visitor.c
	* gegl/gegl-graph-evaluate-visitor.h
	* gegl/gegl-graph.h
	* gegl/gegl-graph.c
	* gegl/gegl-dump-visitor.c
	* gegl/gegl-dump-visitor.h
	* gegl/gegl-dfs-visitor.h
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-graph-init-visitor.c
	* gegl/gegl-graph-init-visitor.h
	* gegl/gegl-graph-setup-visitor.c
	* gegl/gegl-graph-setup-visitor.h
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-attributes.h
	* gegl/gegl-attributes.c

	Added files. 
    
	* tests/dumpvisitortest.c
	* tests/dfsvisitortest.c
	* tests/bfsvisitortest.c
	* tests/gegl-mock-dfs-visitor.c
	* tests/gegl-mock-dfs-visitor.h
	* tests/gegl-mock-bfs-visitor.c
	* tests/gegl-mock-bfs-visitor.h
	* tests/haverecttest.c
	* tests/needrecttest.c
	* tests/gegl-mock-filter.c
	* tests/gegl-mock-filter.h
	* tests/graphapplytest.c
	* tests/graphnodetest.c

	New tests. 

	* Makefile.am
	* README
	* autogen.sh
	* configure.in

	Updated these to work with latest autotools.

	* HACKING

	Added this.

	* gegl/Makefile.am
	* gegl/gegl-add.gil
	* gegl/gegl-add.h
	* gegl/gegl-buffer.h
	* gegl/gegl-color-model-gray-float.c
	* gegl/gegl-color-model-gray-float.h
	* gegl/gegl-color-model-gray-u16.c
	* gegl/gegl-color-model-gray-u16.h
	* gegl/gegl-color-model-gray-u8.c
	* gegl/gegl-color-model-gray-u8.h
	* gegl/gegl-color-model-gray.h
	* gegl/gegl-color-model-rgb-float.h
	* gegl/gegl-color-model-rgb-u16.h
	* gegl/gegl-color-model-rgb-u8.h
	* gegl/gegl-color-model-rgb.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-color.h
	* gegl/gegl-comp-premult.gil
	* gegl/gegl-comp-premult.h
	* gegl/gegl-comp.gil
	* gegl/gegl-comp.h
	* gegl/gegl-const-mult.gil
	* gegl/gegl-const-mult.h
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* gegl/gegl-dark.gil
	* gegl/gegl-dark.h
	* gegl/gegl-diff.gil
	* gegl/gegl-diff.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-light.gil
	* gegl/gegl-light.h
	* gegl/gegl-max.gil
	* gegl/gegl-max.h
	* gegl/gegl-mem-buffer.h
	* gegl/gegl-min.gil
	* gegl/gegl-min.h
	* gegl/gegl-mult.gil
	* gegl/gegl-mult.h
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.c
	* gegl/gegl-object.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-premult.gil
	* gegl/gegl-premult.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.gil
	* gegl/gegl-screen.h
	* gegl/gegl-stat-op.c
	* gegl/gegl-stat-op.h
	* gegl/gegl-subtract.gil
	* gegl/gegl-subtract.h
	* gegl/gegl-tile-iterator.h
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-unpremult.gil
	* gegl/gegl-unpremult.h
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl-value-types.c
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h
	* gegl/gegl.h

	Changes to lots of things to re-arrange Filters and Graphs. 

	* gil/Makefile.am
	* codegen/Makefile.am
	* codegen/parser.y

	* tests/Makefile.am
	* tests/addtest.c
	* tests/buffertest.c
	* tests/colormodelrgbfloattest.c
	* tests/colormodelrgbtest.c
	* tests/colormodeltest.c
	* tests/colortest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/filltest.c
	* tests/gegl-mock-image.h
	* tests/gegl-mock-node.h
	* tests/gegl-mock-object.h
	* tests/gegl-mock-op.c
	* tests/gegl-mock-op.h
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-point-op.h
	* tests/gegl-mock-visitor.c
	* tests/gegl-mock-visitor.h
	* tests/imagetest.c
	* tests/membuffertest.c
	* tests/nodetest.c
	* tests/objecttest.c
	* tests/optest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/sampledimagetest.c
	* tests/simpletreetest.c
	* tests/statoptest.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tileiteratortest.c
	* tests/tilemgrtest.c
	* tests/tiletest.c

	Filled out the tests for the new Graph classes.

	* gegl/gegl-filter-bfs-visitor.c
	* gegl/gegl-filter-bfs-visitor.h
	* gegl/gegl-filter-dfs-visitor.c
	* gegl/gegl-filter-dfs-visitor.h
	* gegl/gegl-filter-inputs-visitor.c
	* gegl/gegl-filter-inputs-visitor.h
	* tests/filtertest.c

	Removed these.

2002-04-02 Calvin Williamson <calvinw@mindspring.com>

	* gegl/Makefile.am
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-print.c
	* gegl/gegl-visitor.c
	* gegl/gegl.h

	Changed Op's apply so that it isnt overridden by subclasses, rather it sets
	up a Filter with that op as the root and calls traverse which only Filter
	classes implement.

	* gegl/gegl-filter-bfs-visitor.c
	* gegl/gegl-filter-bfs-visitor.h
	* gegl/gegl-filter-dfs-visitor.c
	* gegl/gegl-filter-dfs-visitor.h
	* gegl/gegl-filter-inputs-visitor.c
	* gegl/gegl-filter-inputs-visitor.h

	Added an inputs visitor for Filter to match interior nodes that dont have
	inputs to inputs to the Filter. Renamed the Dfs and Bfs visitors.	

	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dfs-visitor.h

	Removed these.

	* tests/Makefile.am
	* tests/addtest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/filltest.c
	* tests/imagetest.c
	* tests/optest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/simpletreetest.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/valuetest.c

	Changed the teardown and setup routine names for these. Changed the name of
	functions in testutils.

	* tests/filtertest.c

	Added filter tests.

2002-03-27 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-bfs-visitor.c
	* gegl/gegl-bfs-visitor.h
	* gegl/gegl-dfs-visitor.c
	* gegl/gegl-dfs-visitor.h
	* gegl/gegl-visitor.c
	* gegl/gegl-visitor.h

	Made visitors for the traversal work done during evaluation of a graph.
	These are regular GoF visitor patterns where the element classes are Node,
	Op, and Filter.  The visitor classes are Visitor(abstract), BfsVisitor,
	DfsVisitor, and have visit_node, visit_op, visit_filter methods that
	specify the operations done on the nodes during traversal. A graph is
	evaluated by traversing first breadth first to compute need rects and pass
	down inherited attributes. This is followed by a depth first pass to
	compute have rects, result rects, color models and to do the evaluation of
	the node.

	* gegl/Makefile.am
	* gegl/gegl-comp-premult.gil
	* gegl/gegl-comp.gil
	* gegl/gegl-const-mult.gil
	* gegl/gegl-copy.c
	* gegl/gegl-dark.gil
	* gegl/gegl-diff.gil
	* gegl/gegl-fill.c
	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-light.gil
	* gegl/gegl-max.gil
	* gegl/gegl-min.gil
	* gegl/gegl-mult.gil
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.c
	* gegl/gegl-object.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-premult.gil
	* gegl/gegl-print.c
	* gegl/gegl-sampled-image.c
	* gegl/gegl-screen.gil
	* gegl/gegl-subtract.gil
	* gegl/gegl-types.h
	* gegl/gegl-unpremult.gil
	* gegl/gegl.h

	Updated these to use visitors above. Moved most of the traversal code out
	of Filter and into the visitor classes.  

	* tests/gegl-mock-visitor.c
	* tests/gegl-mock-visitor.h

	Test classes for visitor.

	* tests/Makefile.am
	* tests/filltest.c
	* tests/gegl-mock-op.c
	* tests/nodetest.c
	* tests/objecttest.c
	* tests/optest.c
	* tests/sampledimagetest.c
	* tests/testgegl.c

	Update tests for visitor changes.

2002-03-16 Calvin Williamson <calvinw@mindspring.com>

	* gegl/Makefile.am
	* gegl/gegl-add.gil
	* gegl/gegl-comp-premult.gil
	* gegl/gegl-comp.gil
	* gegl/gegl-const-mult.gil
	* gegl/gegl-copy.c
	* gegl/gegl-dark.gil
	* gegl/gegl-diff.gil
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-light.gil
	* gegl/gegl-max.gil
	* gegl/gegl-min.gil
	* gegl/gegl-mult.gil
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.c
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-premult.gil
	* gegl/gegl-print.c
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen.gil
	* gegl/gegl-stat-op.c
	* gegl/gegl-subtract.gil
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-tile.c
	* gegl/gegl-types.h
	* gegl/gegl-unpremult.gil
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl.h

	Updated these. Changed GeglNode to support multiple outputs. This means
	that every op specifies a num_inputs and a num_outputs when created. (in
	instance init mostly). Then there can be a list of output nodes
	attached to each output.  (So Node's outputs field is a list of lists).
	With this the inputs for each node now give their corresponding output
	index.

	Also changed the Op so that outputs and inputs of ops correspond to
	GValues, so that the basic evaluate routine in Op now takes a list of
	output values and input values to process. Got rid of OpRequests. 

	* gegl/gegl-filter.c
	* gegl/gegl-filter.h
	* gegl/gegl-param-specs.c
	* gegl/gegl-param-specs.h
	* gegl/gegl-value-transform.c
	* gegl/gegl-value-types.c
	* gegl/gegl-value-types.h

	Added these. Added GValues for passing output and input data. Introduced a
	GeglImageData (see value-types.h) which replaces the old GeglOpRequests. 

	There is a new "container" op type, which is called Filter. This is the
	composite piece of the pattern and replaces the ImageMgr (now gone), handling
	graph traversal of the op children that it contains.

	* gegl/gegl-image-mgr.c
	* gegl/gegl-image-mgr.h
	* gegl/gegl-simple-image-mgr.c
	* gegl/gegl-simple-image-mgr.h

	Removed. Moved the code in these to Filter now. Filter talks directly
	to the TileMgr instead.

	* tests/Makefile.am
	* tests/addtest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/filltest.c
	* tests/imagetest.c
	* tests/nodetest.c
	* tests/objecttest.c
	* tests/optest.c
	* tests/pointoptest.c
	* tests/printtest.c
	* tests/sampledimagetest.c
	* tests/simpletreetest.c
	* tests/statoptest.c
	* tests/testgegl.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tiletest.c

	Updated these to reflect changes above.

	* tests/gegl-mock-image.c
	* tests/gegl-mock-image.h
	* tests/gegl-mock-node.c
	* tests/gegl-mock-node.h
	* tests/gegl-mock-object.c
	* tests/gegl-mock-object.h
	* tests/gegl-mock-op.c
	* tests/gegl-mock-op.h
	* tests/gegl-mock-point-op.c
	* tests/gegl-mock-point-op.h
	* tests/valuetest.c

	Added some mock objects to test things in abstract classes (Node, Op,
	etc).

	* tests/imagemgrtest.c
	* tests/simpleimagemgrtest.c

	Removed the old ImageMgr tests.

2001-12-22 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-add-impl.gil
	* gegl/gegl-add-impl.h
	* gegl/gegl-add.c
	* gegl/gegl-comp-impl.gil
	* gegl/gegl-comp-impl.h
	* gegl/gegl-comp-premult-impl.gil
	* gegl/gegl-comp-premult-impl.h
	* gegl/gegl-comp-premult.c
	* gegl/gegl-comp.c
	* gegl/gegl-const-mult-impl.gil
	* gegl/gegl-const-mult-impl.h
	* gegl/gegl-const-mult.c
	* gegl/gegl-copy-impl.c
	* gegl/gegl-copy-impl.h
	* gegl/gegl-dark-impl.gil
	* gegl/gegl-dark-impl.h
	* gegl/gegl-dark.c
	* gegl/gegl-diff-impl.gil
	* gegl/gegl-diff-impl.h
	* gegl/gegl-diff.c
	* gegl/gegl-fill-impl.c
	* gegl/gegl-fill-impl.h
	* gegl/gegl-image-impl.c
	* gegl/gegl-image-impl.h
	* gegl/gegl-light-impl.gil
	* gegl/gegl-light-impl.h
	* gegl/gegl-light.c
	* gegl/gegl-max-impl.gil
	* gegl/gegl-max-impl.h
	* gegl/gegl-max.c
	* gegl/gegl-min-impl.gil
	* gegl/gegl-min-impl.h
	* gegl/gegl-min.c
	* gegl/gegl-mult-impl.gil
	* gegl/gegl-mult-impl.h
	* gegl/gegl-mult.c
	* gegl/gegl-op-impl.c
	* gegl/gegl-op-impl.h
	* gegl/gegl-point-op-impl.c
	* gegl/gegl-point-op-impl.h
	* gegl/gegl-premult-impl.gil
	* gegl/gegl-premult-impl.h
	* gegl/gegl-premult.c
	* gegl/gegl-print-impl.c
	* gegl/gegl-print-impl.h
	* gegl/gegl-sampled-image-impl.c
	* gegl/gegl-sampled-image-impl.h
	* gegl/gegl-screen-impl.gil
	* gegl/gegl-screen-impl.h
	* gegl/gegl-screen.c
	* gegl/gegl-stat-op-impl.c
	* gegl/gegl-stat-op-impl.h
	* gegl/gegl-subtract-impl.gil
	* gegl/gegl-subtract-impl.h
	* gegl/gegl-subtract.c
	* gegl/gegl-unpremult-impl.gil
	* gegl/gegl-unpremult-impl.h
	* gegl/gegl-unpremult.c
	* tests/addimpltest.c
	* tests/constmultimpltest.c
	* tests/fillimpltest.c
	* tests/opimpltest.c
	* tests/pointopimpltest.c
	* tests/printimpltest.c
	* tests/sampledimageimpltest.c
	* tests/statopimpltest.c

	Removed these. 

	* gegl/gegl-add.gil
	* gegl/gegl-comp-premult.gil
	* gegl/gegl-comp.gil
	* gegl/gegl-const-mult.gil
	* gegl/gegl-dark.gil
	* gegl/gegl-diff.gil
	* gegl/gegl-light.gil
	* gegl/gegl-max.gil
	* gegl/gegl-min.gil
	* gegl/gegl-mult.gil
	* gegl/gegl-premult.gil
	* gegl/gegl-screen.gil
	* gegl/gegl-subtract.gil
	* gegl/gegl-unpremult.gil

	Added these. 

	* gegl/Makefile.am
	* gegl/gegl-buffer.h
	* gegl/gegl-comp-premult.h
	* gegl/gegl-comp.h
	* gegl/gegl-const-mult.h
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-image-mgr.c
	* gegl/gegl-image-mgr.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-simple-image-mgr.c
	* gegl/gegl-simple-image-mgr.h
	* gegl/gegl-stat-op.c
	* gegl/gegl-stat-op.h
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-tile.h
	* gegl/gegl.h
	* tests/Makefile.am
	* tests/constmulttest.c
	* tests/testgegl.c
	* tests/testutils.c

	Updated these. 

	Took out the impl classes for now. I think we should wait on these till
	later. For the time being it should be easier to work without them. 

2001-12-09 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-add-impl.gil
	* gegl/gegl-add-impl.h
	* gegl/gegl-add.c
	* gegl/gegl-add.h
	* gegl/gegl-buffer.c
	* gegl/gegl-buffer.h
	* gegl/gegl-color-model-gray-float.c
	* gegl/gegl-color-model-gray-float.h
	* gegl/gegl-color-model-gray-u16.c
	* gegl/gegl-color-model-gray-u16.h
	* gegl/gegl-color-model-gray-u8.c
	* gegl/gegl-color-model-gray-u8.h
	* gegl/gegl-color-model-gray.c
	* gegl/gegl-color-model-gray.h
	* gegl/gegl-color-model-rgb-float.c
	* gegl/gegl-color-model-rgb-float.h
	* gegl/gegl-color-model-rgb-u16.c
	* gegl/gegl-color-model-rgb-u16.h
	* gegl/gegl-color-model-rgb-u8.c
	* gegl/gegl-color-model-rgb-u8.h
	* gegl/gegl-color-model-rgb.c
	* gegl/gegl-color-model-rgb.h
	* gegl/gegl-color-model.c
	* gegl/gegl-color-model.h
	* gegl/gegl-color.c
	* gegl/gegl-color.h
	* gegl/gegl-comp-impl.gil
	* gegl/gegl-comp-impl.h
	* gegl/gegl-comp-premult-impl.gil
	* gegl/gegl-comp-premult-impl.h
	* gegl/gegl-comp-premult.c
	* gegl/gegl-comp-premult.h
	* gegl/gegl-comp.c
	* gegl/gegl-comp.h
	* gegl/gegl-const-mult-impl.gil
	* gegl/gegl-const-mult-impl.h
	* gegl/gegl-const-mult.c
	* gegl/gegl-const-mult.h
	* gegl/gegl-copy-impl.c
	* gegl/gegl-copy-impl.h
	* gegl/gegl-copy.c
	* gegl/gegl-copy.h
	* gegl/gegl-dark-impl.gil
	* gegl/gegl-dark-impl.h
	* gegl/gegl-dark.c
	* gegl/gegl-dark.h
	* gegl/gegl-diff-impl.gil
	* gegl/gegl-diff-impl.h
	* gegl/gegl-diff.c
	* gegl/gegl-diff.h
	* gegl/gegl-fill-impl.c
	* gegl/gegl-fill-impl.h
	* gegl/gegl-fill.c
	* gegl/gegl-fill.h
	* gegl/gegl-image-impl.c
	* gegl/gegl-image-impl.h
	* gegl/gegl-image-mgr.c
	* gegl/gegl-image-mgr.h
	* gegl/gegl-image.c
	* gegl/gegl-image.h
	* gegl/gegl-light-impl.gil
	* gegl/gegl-light-impl.h
	* gegl/gegl-light.c
	* gegl/gegl-light.h
	* gegl/gegl-max-impl.gil
	* gegl/gegl-max-impl.h
	* gegl/gegl-max.c
	* gegl/gegl-max.h
	* gegl/gegl-mem-buffer.c
	* gegl/gegl-mem-buffer.h
	* gegl/gegl-min-impl.gil
	* gegl/gegl-min-impl.h
	* gegl/gegl-min.c
	* gegl/gegl-min.h
	* gegl/gegl-mult-impl.gil
	* gegl/gegl-mult-impl.h
	* gegl/gegl-mult.c
	* gegl/gegl-mult.h
	* gegl/gegl-node.c
	* gegl/gegl-node.h
	* gegl/gegl-object.c
	* gegl/gegl-object.h
	* gegl/gegl-op-impl.c
	* gegl/gegl-op-impl.h
	* gegl/gegl-op.c
	* gegl/gegl-op.h
	* gegl/gegl-point-op-impl.c
	* gegl/gegl-point-op-impl.h
	* gegl/gegl-point-op.c
	* gegl/gegl-point-op.h
	* gegl/gegl-premult-impl.gil
	* gegl/gegl-premult-impl.h
	* gegl/gegl-premult.c
	* gegl/gegl-premult.h
	* gegl/gegl-print-impl.c
	* gegl/gegl-print-impl.h
	* gegl/gegl-print.c
	* gegl/gegl-print.h
	* gegl/gegl-sampled-image-impl.c
	* gegl/gegl-sampled-image-impl.h
	* gegl/gegl-sampled-image.c
	* gegl/gegl-sampled-image.h
	* gegl/gegl-scanline-processor.c
	* gegl/gegl-scanline-processor.h
	* gegl/gegl-screen-impl.gil
	* gegl/gegl-screen-impl.h
	* gegl/gegl-screen.c
	* gegl/gegl-screen.h
	* gegl/gegl-simple-image-mgr.c
	* gegl/gegl-simple-image-mgr.h
	* gegl/gegl-stat-op-impl.c
	* gegl/gegl-stat-op-impl.h
	* gegl/gegl-stat-op.c
	* gegl/gegl-stat-op.h
	* gegl/gegl-subtract-impl.gil
	* gegl/gegl-subtract-impl.h
	* gegl/gegl-subtract.c
	* gegl/gegl-subtract.h
	* gegl/gegl-tile-iterator.c
	* gegl/gegl-tile-iterator.h
	* gegl/gegl-tile-mgr.c
	* gegl/gegl-tile-mgr.h
	* gegl/gegl-tile.c
	* gegl/gegl-tile.h
	* gegl/gegl-types.h
	* gegl/gegl-unpremult-impl.gil
	* gegl/gegl-unpremult-impl.h
	* gegl/gegl-unpremult.c
	* gegl/gegl-unpremult.h
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/gegl.h

	Removed gob from the project, and ported to glib2.0.  All classes now are
	GObjects, and are constructed with g_object_new. Gtk is no longer required. 

	Split the op classes into a graph related (extrinsic) part, and an image
	processing (intrinsic) part. Added glib properties for some classes. Lots
	of other changes, Ill update the docs/geglClasses.html to reflect changes.

	* tools/testsuite/Makefile.am
	* tools/testsuite/csuite.c
	* tools/testsuite/csuite.h
	* tools/testsuite/ctest.c
	* tools/testsuite/ctest.h
	* tools/testsuite/testcomplex.c

	A xUnit testing setup. This is used for unit tests below in the tests dir.
	testcomplex.c is an example of using the framework.

	* tests/Makefile.am
	* tests/addimpltest.c
	* tests/addtest.c
	* tests/buffertest.c
	* tests/colormodelrgbfloattest.c
	* tests/colormodelrgbtest.c
	* tests/colormodeltest.c
	* tests/colortest.c
	* tests/constmultimpltest.c
	* tests/constmulttest.c
	* tests/copytest.c
	* tests/fillimpltest.c
	* tests/filltest.c
	* tests/imagemgrtest.c
	* tests/imagetest.c
	* tests/membuffertest.c
	* tests/nodetest.c
	* tests/objecttest.c
	* tests/opimpltest.c
	* tests/optest.c
	* tests/pointopimpltest.c
	* tests/pointoptest.c
	* tests/printimpltest.c
	* tests/printtest.c
	* tests/sampledimageimpltest.c
	* tests/sampledimagetest.c
	* tests/simpleimagemgrtest.c
	* tests/simpletreetest.c
	* tests/statopimpltest.c
	* tests/statoptest.c
	* tests/testgegl.c
	* tests/testgeglfile.c
	* tests/testutils.c
	* tests/testutils.h
	* tests/tileiteratortest.c
	* tests/tilemgrtest.c
	* tests/tiletest.c

	A set of unit tests for gegl development. testgegl.c sets up the tests. 

2001-06-07 Calvin Williamson <calvinw@mindspring.com>

	* docs/geglClasses.html
	* docs/images/image_request.png
	* docs/images/image_to_image_manager_bridge.png
	Updating the geglClasses.html doc to match the last checkin.

2001-06-06 Calvin Williamson <calvinw@mindspring.com>
	
	* gegl/gegl-statistics-op.gob
	* gegl/gegl.h
	Added these.

	* configure.in
	* docs/TODO.xml
	* autogen.sh
	* configure.in
	* docs/TODO.xml
	* gegl/Makefile.am
	* gegl/gegl-add-op.gil
	* gegl/gegl-cache.gob
	* gegl/gegl-color-convert-op.gob
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u16.gob
	* gegl/gegl-color-model-gray-u16_4.gob
	* gegl/gegl-color-model-gray-u8.gob
	* gegl/gegl-color-model-gray.gob
	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u16.gob
	* gegl/gegl-color-model-rgb-u16_4.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color-model-rgb.gob
	* gegl/gegl-color-model.gob
	* gegl/gegl-color.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-copy-op.gob
	* gegl/gegl-dark-op.gil
	* gegl/gegl-data-buffer.gob
	* gegl/gegl-diff-op.gil
	* gegl/gegl-dual-src-op.gob
	* gegl/gegl-fill-op.gob
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image-manager.gob
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-n-src-op.gob
	* gegl/gegl-node.gob
	* gegl/gegl-object.gob
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-premult-op.gil
	* gegl/gegl-print-op.gob
	* gegl/gegl-screen-op.gil
	* gegl/gegl-single-src-op.gob
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	* gegl/gegl-tile-image-manager.gob
	* gegl/gegl-tile-iterator.gob
	* gegl/gegl-tile.gob
	* gegl/gegl-unpremult-op.gil
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* tests/testgegl.c

	Moved the class structure around a bit. Op class inherits from Node
	now. Image, StatisticsOp (and possibly others) inherit from this. PointOp,
	ImageBuffer still inherit from Image. 

	The basic idea is that Image and its subclasses are operations that
	produce a destination image during operation.  Anything else should subclass
	Op, which has the notion for some kind of operation with a prepare,process, and
	finish stage. But an Op does not need to write an output image. 

	It may have inputs and be included in image graphs like Image operations. 

	Whenever a node needs an Image input for operation, it follows the
	graph down through any non-Image ops until it finds an Image op to use as
	input. 

	Generally Image inputs pass through non-Image ops without being altered. 

	Also renamed the main "get_pixels" routine to "apply" so that the 
	main processing routine is now called gegl_op_apply (See GeglOp and 
	tests/testgegl.c for examples. 

	I'll try to update docs/geglClasses.html shortly with all this.

2001-03-06 Calvin Williamson <calvinw@mindspring.com>

	Added:

	* gegl/gegl-cache.gob
	* gegl/gegl-data-buffer.gob
	* gegl/gegl-image-manager.gob
	* gegl/gegl-tile.gob
	* gegl/gegl-tile-image-manager.gob
	* gegl/gegl-tile-iterator.gob

	These are new classes:

	GeglImageManager (and GeglTileImageManager)-these deal with setting up
	ops, and fetching tiles from the cache to pass to the ops.	
	
	GeglCache-stores tiles and passes them to GeglTileImageManager 

	GeglDataBuffer-banks of data. GeglTiles have these.
	
	GeglTile-image data chunks. Can be any size, have a colormodel, 
	and are the things that get passed back to ops prepare,apply,finish
	routines. GeglTiles have pointers to data buffers that hold the 
	actual data.	

	GeglTileIterator- a scanline iterator over a portion of a GeglTile
	
	More docs on all these upcoming shortly.

	Updated:

	* gegl/Makefile.am
	* gegl/gegl-add-op.gil
	* gegl/gegl-color-convert-op.gob
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u16.gob
	* gegl/gegl-color-model-gray-u16_4.gob
	* gegl/gegl-color-model-gray-u8.gob
	* gegl/gegl-color-model-gray.gob
	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u16.gob
	* gegl/gegl-color-model-rgb-u16_4.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color-model-rgb.gob
	* gegl/gegl-color-model.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-copy-op.gob
	* gegl/gegl-dark-op.gil
	* gegl/gegl-diff-op.gil
	* gegl/gegl-fill-op.gob
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-n-src-op.gob
	* gegl/gegl-object.gob
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-premult-op.gil
	* gegl/gegl-print-op.gob
	* gegl/gegl-screen-op.gil
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	* gegl/gegl-types.h
	* gegl/gegl-unpremult-op.gil
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* tests/Makefile.am
	* tests/testgegl.c

	-made all these work with the new ImageManager, Tiles, etc.

		Removed:
	* gegl/gegl-image-iterator.h

	-this is replaced by the tile iterators. 

2001-02-19  Jay Cox  <jaycox@gimp.org>

	* opgen/test-op.xml: new test operator
	
	* opgen/blend.xml
	* opgen/geglgen.pl
	* opgen/Gegl/Config.pm
	* opgen/Gegl/Op.pm
	* opgen/Gegl/PointOp.pm
	* opgen/Gegl/PointProcessor.pm
	* opgen/Gegl/XML.pm
	* opgen/Gegl/XML/PointProcessor.pm:  Updates to make
	the output compile.

	
	* opgen/README
	* docs/TODO.xml: update current status.

2001-02-12 Calvin Williamson <calvinw@mindspring.com>

	* docs/geglClasses.html
	* gegl/gegl-add-op.gil
	* gegl/gegl-dark-op.gil
	* gegl/gegl-diff-op.gil
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-screen-op.gil
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	moved the have_rect, need_rect, result_rect all to GeglImage.

	* tests/testgegl.c
	* tests/testgeglfile.c
	updated these to work the GEGL_ prefixes

2001-02-10  Jay Cox  <jaycox@gimp.org>

	* codegen/test_files/gegl-print-op.gil
	* gegl/gegl-color-*.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-fill-op.gil
	* gegl/gegl-n-src-op.gil
	* gegl/gegl-print-op.gil
	* gegl/gegl-utils.c
	* gegl/gegl-types.h
	Add a GEGL_ prefix to the enums defined in gegl-types.h

	* opgen/Gegl/Config.pm
	* opgen/Gegl/Op.pm
	* opgen/Gegl/PointOp.pm
	* opgen/Gegl/PointProcessor.pm
	Fix some bugs in the output.

2001-02-09  Jay Cox  <jaycox@gimp.org>

	* opgen/Gegl/PointProcessor.pm
	Replace the alpha component of pixels with MAX_CHANNEL for buffers
		that don't have an alpha channel.
	
	* opgen/blend.xml:
	A new test operator.

	* opgen/README
	* docs/TODO.xml
	Update accordingly

2001-02-05  Jay Cox  <jaycox@gimp.org>

	* opgen/Gegl/Op.pm
	Fix capitalization.
	
	* gegl/gegl-n-src-op.gob
	* opgen/Gegl/PointOp.pm
	minor fixes

	* opgen/Gegl/PointProcessor.pm
	Only generate the _has_alpha variables if we are going to use them.

	* docs/TODO.xml
	update opgen status

2001-02-04 Calvin Williamson <calvinw@mindspring.com>

	* Makefile.am
	* configure.in
	* gegl/Makefile.am
	* gegl/gegl-add-op.gil
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image.gob
	* gegl/gegl-n-src-op.gob
	* gegl/gegl-node.gob
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	Changed these so the "name" of the op is just taken from the
	class name instead of passing a name up to constructor chain.	

	Removed testgegl,testgeglfile from gegl/Makefile.am. Added tests
	and docs dir to Makefile.am and configure.in.

	* gegl/testgegl.c
	* gegl/testgeglfile.c

	Moved these to a separate tests dir.

	* tests/Makefile.am
	* tests/testgegl.c
	* tests/testgeglfile.c

	* docs/Makefile.am
	* docs/TODO.xml
	* docs/make-todo

	Added these so that our TODO lists work like gtk, gimp, etc.

	* docs/codegen.html
	* docs/gegl.html
	* docs/geglClasses.html

	Updated these, fixed links..

	* docs/geglTasks.html

	Removed this, since we can just use TODO.xml instead.

2001-02-04  Jay Cox  <jaycox@gimp.org>

	* opgen/README
	updated TODO section.
	
	* opgen/geglopgen.dtd
	added prepare element.
	
	* opgen/Gegl/Config.pm
	Changed enum names.
	
	* opgen/Gegl/XML/PointOp.pm
	* opgen/Gegl/PointOp.pm
	made the prepare function customizable
	
	* opgen/Gegl/PointProcessor.pm
	removed the mask_mask calculation. fixed some bugs.

	* gegl/Makefile.am
	* gegl/gegl-n-src-op.gob
	New file that operators created with opgen use as a base class.
	
	
2001-02-04  Jay Cox  <jaycox@gimp.org>

	* opgen/README
	* opgen/geglopgen.dtd
	* opgen/geglgen.pl
	* opgen/subtract.xml
	* opgen/Gegl/Config.pm
	* opgen/Gegl/Op.pm
	* opgen/Gegl/PointOp.pm
	* opgen/Gegl/PointProcessor.pm
	* opgen/Gegl/XML.pm
	* opgen/Gegl/XML/PointOp.pm
	* opgen/Gegl/XML/PointProcessor.pm
	Initial Checkin for opgen.  Opgen generates gegl-operators from
	XML files.  The code it generates isn't good enough to compile,
	but it is pretty close.

2001-02-04 Calvin Williamson <calvinw@mindspring.com>

	* Makefile.am
	* configure.in
	* gegl/Makefile.am

	Checks for gob 1.0.5 and gtk/glib 1.2.8 now. 

	* gil/Makefile.am
	* gil/README
	* gil/TODO
	* gil/gilast.c
	* gil/gilast.h
	* gil/gilinterpret.c
	* gil/gilinterpret.h
	* gil/gilsymbol.c
	* gil/gilsymbol.h
	* gil/gilsymboltable.c
	* gil/gilsymboltable.h
	* gil/giltype.c
	* gil/giltype.h
	* gil/lexer.l
	* gil/parse.y
	* gil/test.gil

	Added this directory for gil. This is a new abstract syntax
	tree version of the the code-generator. It builds asts 
	for simple expressions (not proper gil syntax yet).  
	It will generate code during tree traversal. Right
	now it just prints out the ast. See gil/README
	and gil/test.gil. Needs symbol table work, and the real 
	gil syntax to be useful.   
	

2001-01-04 Calvin Williamson <calvinw@mindspring.com>

	* README
	* gegl/Makefile.am
	* gegl/gegl-add-op.gil
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u16.gob
	* gegl/gegl-color-model-gray-u16_4.gob
	* gegl/gegl-color-model-gray-u8.gob
	* gegl/gegl-color-model-gray.gob
	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u16.gob
	* gegl/gegl-color-model-rgb-u16_4.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color-model-rgb.gob
	* gegl/gegl-color-model.gob
	* gegl/gegl-color.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-copy-op.gob
	* gegl/gegl-copychan-op.gob
	* gegl/gegl-dark-op.gil
	* gegl/gegl-diff-op.gil
	* gegl/gegl-fill-op.gob
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image-iterator.gob
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-node.gob
	* gegl/gegl-object.gob
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-premult-op.gil
	* gegl/gegl-print-op.gob
	* gegl/gegl-screen-op.gil
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	* gegl/gegl-unpremult-op.gil
	* gegl/testgegl.c
	* gegl/testgeglfile.c

	Changed to use protected and private data and methods more 
	like in C++. See README in top directory for an
	update on how things work now. Also fixed some ref counting
	bugs and introduced some ref counting debugging in gegl-object.
	Updated some names, to do be more consistent. Now we use this
	naming scheme: self always refers to the current class. self_bleah
	means "self cast to superclass bleah".   
	eg in PointOp class, self would refer to "this" (ie a PointOp), and 
	self_op = GEGL_OP(self) would refer to "self as superclass op". 

	* gegl/gegl-print-op.gil
	* gegl/gegl-fill-op.gil

	Removed these for now, till autogeneration works for multiple data
	types at once. gob version has all data types in it for now. 
	 

2001-01-19 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-node.gob - added node class. This is
	for management of image graphs (dags).  

	* gegl/Makefile.am
	* gegl/gegl-add-op.gil
	* gegl/gegl-color-convert-op.gob
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u16.gob
	* gegl/gegl-color-model-gray-u16_4.gob
	* gegl/gegl-color-model-gray-u8.gob
	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u16.gob
	* gegl/gegl-color-model-rgb-u16_4.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-copy-op.gob
	* gegl/gegl-copychan-op.gob
	* gegl/gegl-dark-op.gil
	* gegl/gegl-diff-op.gil
	* gegl/gegl-dual-src-op.gob
	* gegl/gegl-fill-op.gob
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image-iterator.gob
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-object.gob
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-premult-op.gil
	* gegl/gegl-print-op.gob
	* gegl/gegl-screen-op.gil
	* gegl/gegl-single-src-op.gob
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	* gegl/gegl-unpremult-op.gil
	* gegl/testgegl.c
	* docs/gegl.html
	* docs/geglTasks.html

	Updated all of these to work with the Node class. 
	Since this introduced ref counting on the graphs,
	there are some ref bugs in testgegl.c now, Ill track 
	these down soon. Run with GTK_DEBUG=objects on for
	debugging. 
	
2000-11-18 Garry R. Osgood <gosgood@idt.net>
	* gegl/docs/pr_docs/introduction.tex
	* gegl/docs/pr_docs/gimp.tex
	Reread Cavin's email of 11:24 am and decided that
	the tail of the introduction had to address the
	"expectations" problem head on. I think it does now.

2000-11-17 Garry R. Osgood <gosgood@idt.net>
	* gegl/docs/pr_docs/introduction.tex
	* gegl/docs/pr_docs/gimp.tex
	Aligned doc structure and intro content overview
	with Calvin's 09-17-2000 e-mail

2000-11-17 Garry R. Osgood <gosgood@idt.net>
	* gegl/docs/pr_docs/introduction.tex
	* gegl/docs/pr_docs/gimp.tex
	Changes to introduction, and document ordering, 
	per Sept 16 2000 email to Caro, Calvin, Yosh. 

2000-11-16 Garry R. Osgood <gosgood@idt.net>
	* gegl/docs/pr_docs/schedule.tex 
	 Minor typos. Tabulated hours. Memory 
	 management issues cribbed from Shantzis 
	 1994 compositing paper, a 
	 turf very similar to GEGL.

2000-11-02 Calvin Williamson <calvinw@mindspring.com>

	* gegl/Makefile.am
	Removed some duplicate lines in Makefile.am for
	gegl-fill-op.h
	gegl-print-op.h
	gegl-fill-op-private.h
	gegl-print-op-private.h
	gegl-fill-op.c
	gegl-print-op.c

2000-08-29 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-add-op.gil
	* gegl/gegl-color-convert-op.gob
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-composite-op.gil
	* gegl/gegl-composite-premult-op.gil
	* gegl/gegl-copy-op.gob
	* gegl/gegl-copychan-op.gob
	* gegl/gegl-dark-op.gil
	* gegl/gegl-diff-op.gil
	* gegl/gegl-image-buffer.gob
	* gegl/gegl-image-iterator.gob
	* gegl/gegl-image.gob
	* gegl/gegl-light-op.gil
	* gegl/gegl-max-op.gil
	* gegl/gegl-min-op.gil
	* gegl/gegl-mult-op.gil
	* gegl/gegl-op.gob
	* gegl/gegl-point-op.gob
	* gegl/gegl-premult-op.gil
	* gegl/gegl-screen-op.gil
	* gegl/gegl-subtract-op.gil
	* gegl/gegl-test-op.gil
	* gegl/gegl-unpremult-op.gil
	* gegl/gegl-utils.c
	* gegl/gegl-utils.h
	* gegl/testgegl.c
	I changed the ImageBuffer class and moved the data for it to the Image
	class. This allowed the Op class to be done without using the extra
	ImageBuffers. Now the memory for Ops calculations is allocated and
	stored in data field of the Image class only if it needs it during
	get_pixels. This makes more sense and simplifies the Op class. Ops can
	only have memory allocated during get_pixels.  ImageBuffers are
	allocated when created though.	

	Also introduced haveRects (domain of definitions), needRects (roi) and
	resultRects fields and methods for Op, Images.(see Shantzis Siggraph94 for
	these terms)  

2000-08-21 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color-model-rgb-u16-.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u8.gob:
	* gegl/gegl-color-model-gray-u16.gob
	Updated each of these to implement converters for CopyOp
	to call.

	* gegl/Makefile.am:
	* gegl/gegl-copy-op.gob:
	* gegl/gegl-copy-op.gil:
	Removed copy-op.gil, added copy-op.gob since this is done by
	calling converters now.  

	* gegl/gegl-op.gob:
	* gegl/gegl-image-buffer.gob:
	* gegl/gegl-image.gob:
	Took out copy_pixels from Image, and Op and moved to ImageBuffer
	Put in some offsets for the sources relative to Op.

	* gegl/testgegl.c:
	Put in tests for CopyOp.

2000-08-07 Calvin Williamson <calvinw@mindspring.com>

	* gegl/gegl-color-convert-op.gob
	* gegl/gegl-color-convert-to-rgb-op.gob
	* gegl/gegl-color-convert-to-gray-op.gob
	* gegl/gegl-color-model.gob
	* gegl/gegl-color-model-rgb-float.gob
	* gegl/gegl-color-model-rgb-u8.gob
	* gegl/gegl-color-model-rgb-u16-.gob
	* gegl/gegl-color-model-gray-float.gob
	* gegl/gegl-color-model-gray-u8.gob:
	* gegl/gegl-color-model-gray-u16.gob
	* gegl/Makefile.am:
	Finished the ColorConvertOps. ColorConvertOp now looks for
	a converter to use to convert from a passed source color model.  If it
	cant find a converter then it uses a conversion through XYZ space. See
	ColorConvertOp and ColorModel for details. The color models implement
	their converters as "interfaces" (see gegl_object_add_interface) Also
	see the constructor of any of the specific ColorModel classes for
	details.

	* gegl/gegl-color-convert-to-rgb-float-op.gob 
	* gegl/gegl-color-convert-to-gray-float-op.gob 
	* gegl/gegl-color-convert-to-rgb-u8-op.gob 
	* gegl/gegl-color-convert-to-gray-u8-op.gob 
	* gegl/gegl-color-convert-to-rgb-u16-op.gob 
	* gegl/gegl-color-convert-to-gray-u16-op.gob 
	* gegl/gegl-color-convert-to-rgb-u16_4-op.gob 
	* gegl/gegl-color-convert-to-gray-u16_4-op.gob: 
	Removed these. Only need ColorConvertToRgbOp, ColorConvertToGrayOp
	for these. It converts to whatever data type the dest has.

	* gegl/testgegl.c:
	Cleaned up testgegl to reflect the above changes.

	* gegl/gegl-image-iterator.gob:
	fixed bug where num_channels was calculated wrong. 

2000-07-03 Calvin Williamson <calvinw@mindspring.com>

	* Redid ColorConvertOp to use the new Image,
	Op,ImageBuffer class structures. 

	* Added ColorConvertOpToRgb, ColorConvertOpToGray.

	* ColorConvertOp does the XYZ conversion if a direct 
	converter routine cant be found for the conversion.	

	* Changed testgegl to have tests for these conversion routines.

2000-07-01 Caroline Dahloff <caro@rhythm.com>

	* updated www.gegl.org

	* changed gegl-copy-op, gegl-image-buffer, testgeglfile
	copy-op is now a single-op and image-buffer copy pixels
	uses copy-op. i added test code for copy-op in testgelfile

2000-07-01 Caroline Dahloff <caro@rhythm.com>

	* added gegl/gegl-copy-op.gil

	* added gegl/gegl-copy-op.gil to Makefile.am

	* updated docs/gegl.html and docs/geglTasks.html


2000-06-28 Caroline Dahloff <caro@rhythm.com>

	* updated docs/geglTasks.html

	* added diff-op to gegl/Makefile.am

	* implemented copy_pixel and get_pixel for
	gegl/gegl-image-buffer.gob

2000-06-27 Caroline Dahloff <caro@rhythm.com>

	* updated docs/gegl.html and geglTasks.html

	* fixed bugs in gegl/gegl-copychan-op.gob

	* added test code for copychan in testgeglfile.c

2000-06-26 Caroline Dahloff <caro@rhythm.com>

	* changed links in docs/gegl.html and codegen.html

	* added copychan to gegl/Makefil.am

	* made gegl-copychan-op.gob compadible with the new class structure.

2000-06-23 Calvin Williamson <calvinw@mindspring.com>

	* docs/gegl.html-added description of documents

	*README-brought this up to date.

2000-06-22 Calvin Williamson <calvinw@mindspring.com>

	* docs/gegl.html-updated the description and links.

2000-06-22 Calvin Williamson <calvinw@mindspring.com>

	* gegl/testgegl.c-removed gegl-graphics-state.h
	since its no longer needed.

2000-06-21 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* updated gegl.html and geglTask.gegl


2000-06-21 Caroline Dahloff <caro@rhythm.com>

	* check in for gegl

	* rm gfx-state and drawable .gob

2000-06-14 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* checked in gegl.html and gegl.jpg

2000-06-20 Caroline Dahloff <caro@rhythm.com>

	* updated docs/gegl.html to have a Getting Gegl, News, and 
	more References sections.

2000-06-20 Caroline Dahloff <caro@rhythm.com>

	* added docs/geglTasks.html

	* updated docs/gegl.html to have a CurrentTasks section.

2000-06-06 Caroline Dahloff <caro@rhythm.com>
	
	* rm .ps files in docs/gimpcon2000/caro

2000-05-31 Caroline Dahloff <caro@rhythm.com>

	* updated docs

2000-05-31 Caroline Dahloff <caro@rhythm.com>

	* check in for docs.

	* I am updating all the docs for the gimpcon

2000-05-31  Jay Cox  <jaycox@gimp.org>

	* docs/geglImageAndOp.html: Added a little to the geglIterator
	section.

2000-05-30 Caroline Dahloff <caro@rhythm.com>

	* check int for docs

	* added pictures for the r-n-h slides.

	* check in for gegl

	* change the ops to that they would work with the new
	design.

	* change Makefile.am

2000-05-30 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* added gegl.html

	* updated codegen.html and the slides for the gimpcon.

2000-05-30 Caroline Dahloff <caro@rhythm.com>

	* Many changes to Op, Image, ImageBuffer. Made Op and
	ImageBuffer inherit from common Image class, so we can do
	image chaining. (see doc/geglImageAndOp.html) 

	* changes to doc/geglImageAndOp.html to describe the new
	classes	

	* some classes arent rewritten yet for this new stuff. 
	All the color convert ops, copy_chan op, and most of 
	the remaining point ops need converting (point ops will 
	be just like MultOp).	

	*added a files gegl/trace.[ch] useful for debugging 
	get_pixels routine.

2000-05-25 Caroline Dahloff <caro@rhythm.com>
	
	* check in for docs

	* I added these files:
	  - codegen.html
	  - gegl-color-model.html
	  - gegl-color-model.gif
	  - gegl-color-convert-op.html
	  - gegl-color-convert-op.gif
	  - gimp2000/caro/slides.tex
	  - gimp2000/caro/r-n-h.tex

2000-05-24 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* fixed a bug

2000-05-22  Jay Cox  <jaycox@gimp.org>

	* doc/geglImageAndOp.html: additions and changes.

2000-05-22 Calvin Williamson <calvinw@mindspring.com>

    * checking in doc/geglImageAndOp.html 
    for Jays idea to move us to a more operator 
    chain type op tree. 

2000-05-29 Caroline Dahloff <caro@rhythm.com>

	* check ing for docs

	* i have changed the slides.tex

	* check in for codegen

	* i have changed something in parser.y and lexer.l

2000-05-15 Caroline Dahloff <caro@rhythm.com>

	* check in for docs
	
	* added all the aux files for slides.tex

	* check in for codegen

	* clean up

2000-05-14 Caroline Dahloff <caro@rhythm.com>

	* check in for docs
	
	* added stuff to slides.tex

	* check in for codegen

	* changed code in lexer.l, parser.y, common.h to
	clean up

2000-05-12 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* initial draft for slides.tex

2000-05-12 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen
	
	* changed varibles names:
 	- GENERIC_IMAGE_BLOCK ---> GENERIC_IMAGE_CODE
      BLOCK has been changed to CODE. It makes more sence.
	
	- DATA_TYPE /DATATYPE ---> DT_MACROS
	  All the varibles that are related to the channel 
	  data files have been changed.
	* the test files have been updated and channel files and the readme
	to reflex the above change.

	* this is a some small changes in lexer.l and parser.y in an attempt
	to make the code more readable.

	* check in for docs
	
	* updated to reflex the above changes

	* check in for gegl
	
	* update the .gil file to reflex the above change

2000-05-11 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* I updated the siggraph web page.


2000-05-05 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* added the html page for gimp siggraph

2000-05-05 Caroline Dahloff <caro@rhythm.com>

	* check in for gegl 

	* I have rm gegl-fill-op.gob and added the file
	gegl-fill-op.gil.

	* I have changed the Makefile.am to reflect the
	above changed.

	* check in for codegen

	* changed test_files/gegl-fill-op.gil

2000-05-05 Caroline Dahloff <caro@rhythm.com>

    * check in for codegen

    * rm the pixel data dir

    * changed parser.y so that it do no longer expect
    a pixel data file

    * for gegl

    * changed Makefile.am so that it does not include
    the pixel data file

2000-05-05 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen
	
	* updated the README to reflect the new changed

2000-05-05 Calvin Williamson <calvinw@mindspring.com>

    * updated codegen/test_files/init_test file 

	* removed codegen/pixel_data/gegl_pixel file - this is no longer needed.

2000-05-04 Caroline Dahloff <caro@rhythm.com>

	* check in for docs

	* changed MIN/MAX_CHANNEL to CHANNEL_MIN/MAX

	* check in for codegen

	* The varible macro is now called EXTERNAL_INIT.
	you define this macro in the channel_data file.

	* I have changed the channel_data files

2000-05-04 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* fixed the gegl-fill-op.gil file

	* fixed the pixel data file

2000-05-04 Calvin Williamson <calvinw@mindspring.com>

	* added codegen/test_files/init_test 

2000-05-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* fixed test_files/gegl-fill-op.gil

2000-05-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* fixed test_files/test

2000-05-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* i have changed it so when you do 
	pixel = ... and pixel might has an alpha
	it will write out the if (has_alpha).

	* changed test_files/test

2000-05-03 Caroline Dahloff <caro@rhythm.com>

	* check in for gegl
	
	* changed its make file to handel the new codegen

	* check in for codegen

	* changed the way VARIBLES work, they are now called 
	PIXEDL_INIT and CHANNEL_INIT

	* i have added a pixel data file to assist the ove function

2000-05-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have fixed PRINT, I have also change the float channel file

2000-05-03 Calvin Williamson <calvinw@mindspring.com>

	*fixed a problem with gegl/gegl-print-op.gil. Made it inherit from 
	gegl-single-src-op.gob. We need a statistics op, which would be 
	dest -less.  histogram ops, and similar ops will inherit from this. 	 

	*updated the PRINT macros in codegen/channel_data/float, u8, u16, 
	u16_4k files.

2000-04-19 Calvin Williamson <calvinw@mindspring.com>

	* remove gegl-fill-op.gil till that is working better.

	* update the Makefile.am for the above. 

2000-04-19 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* i have changed parser.y so that now it
	handels print_line better. for the has_alpha
	case with vectors.

2000-04-19 Caroline Dahloff <caro@rhythm.com>
	
	* check in for gegl
	
	* I have changed the Makefile.am, I added
	gegl-fill-op.gil and gegl-print-op.gil

	* I have added the above files.  

2000-04-12 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have split Variable into two variables; Vector_Variable and
	Scaler_Variable. By doing this I have eliminated the first 
	argument to the pervious Varible (Scale/Vector). Everything else
	works the same.

	* I have change a bit the internals of parser.y. Having _c, _v, _ca
	be special strings caused some problem so I have changed _ to $. These
	special string tokens are added to varibles when ther are added to a 
	string so when I go to print the line (print_line) I know that I have
	to add certain sufixes to these varible depending on what line I am printing.

	* I have added the test_files/gegl-print-op.gil and
	test_files/gegl-fill-op.gil

2000-04-12 Caroline Dahloff <caro@rhythm.com>

	* bug fix for my previous check in.

2000-04-12 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have added printing option for codegen. You have to
	define PRINT (x) string in channel files, and you can now
	print color varibles.

	* I have added the notion of intorducing a varible into the 
	G_I_BLOCK without having to define it in the G_I_DECL block.
	The syntax is VARIBLE(Scaler/Vector name of varible name of type).
	The varible needs to be define as a Scaler or a Vector. If it is defined
	as a vector then [num] will be added to the varible. The number will depend
	on the varibles that the varible is associated with. For example, if it is set
	equal to a Pixel with 3 channels, then for the first channel it would be [0],
	second channel it would be [1] and for the third channel it would be [3].
	The name of the varible can be anything. With this there will be a file associated
	right now it is called file. In file the user can define any sufixes that he or she
	wants the varible to have. The syntax of this is
		type_name
		{
		datatype sufix
		...
		}
	When the lexer finds a type name (it is optional, you do not have to add a type name), it will
	look in the file file for the type name and find the sufix depending on the datatyupe.

	* I have updated the channel files with the PRINT string

	* I have changed test_files_test to test the two new features

	* I have added the file file
 
2000-04-10 Calvin Williamson <calvinw@mindspring.com>

	* changed these files in gegl dir:

	  gegl/gegl-add-op.gil
	  gegl/gegl-color-convert-to-gray-float-op.gob
	  gegl/gegl-color-convert-to-gray-u16-op.gob
	  gegl/gegl-color-convert-to-gray-u16_4-op.gob
	  gegl/gegl-color-convert-to-gray-u8-op.gob
	  gegl/gegl-color-convert-to-rgb-float-op.gob
	  gegl/gegl-color-convert-to-rgb-u16-op.gob
	  gegl/gegl-color-convert-to-rgb-u16_4-op.gob
	  gegl/gegl-color-convert-to-rgb-u8-op.gob
	  gegl/gegl-color-model-gray-float.gob
	  gegl/gegl-color-model-gray-u16.gob
	  gegl/gegl-color-model-gray-u16_4.gob
	  gegl/gegl-color-model-gray-u8.gob
	  gegl/gegl-color-model-gray.gob
	  gegl/gegl-color-model-rgb-float.gob
	  gegl/gegl-color-model-rgb-u16.gob
	  gegl/gegl-color-model-rgb-u16_4.gob
	  gegl/gegl-color-model-rgb-u8.gob
	  gegl/gegl-color-model-rgb.gob
	  gegl/gegl-color-model.gob
	  gegl/gegl-composite-op.gil
	  gegl/gegl-composite-premult-op.gil
	  gegl/gegl-screen-op.gil
	  gegl/gegl-subtract-op.gil
	  gegl/gegl-unpremult-op.gil
	  gegl/gegl-utils.c
	  gegl/gegl-utils.h
	  gegl/testgegl.c
	  gegl/testgeglfile.c

	* updated the testgeglfile to create correct colormodels
	  and image buffers automatically. 
       
	* fixed GeglCompositeOp to take the composite alpha into account

	* removed the is_premultiplied flag from all the color_model_new
	  constructors.
	 
	    * Added Promote, and SignedPromote casts to some other point ops.	

	* changed these files in codegen dir:
	
	  codegen/test_files/gegl-add-op.gil
	  codegen/test_files/gegl-composite-op.gil
	  codegen/test_files/gegl-composite-premult-op.gil
	  codegen/test_files/gegl-mult-op.gil
	  codegen/test_files/gegl-premult-op.gil
	  codegen/test_files/gegl-screen-op.gil
	  codegen/test_files/gegl-subtract-op.gil
	  codegen/test_files/gegl-unpremult-op.gil

2000-04-08 Caroline Dahloff <caro@rhythm.com>
	
	* check in for codegen

	* Added SignedPromote token I changed parser.y, lexer.l
	and data_types.h and the channel files

	* I also changed PROMOTE to PROMOTE_TYPE


2000-04-07 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have added Promote to all the gil files
	in test_file

2000-04-06 Caroline Dahloff <caro@rhythm.com>

	* check in for gegl

	* Corrected the Makefile.am to be float.

2000-04-06 Caroline Dahloff <caro@rhythm.com>

	* checked in for codegen

	* updated the channel data files

2000-04-06 Caroline Dahloff <caro@rhythm.com>
	
	* check in for codegen

	* added the promote to lexer.l data_type.h, and parser.y.

	* changed the channel data files so they have
	a PROMOTE field now

2000-04-04 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I changed the varible VectorCHan to Pixel and
	Chan to Channel

	* I changed the channel data files so that they dont use the 
	MULT macro

	* check in for gegl

	* I added the following files
		- gegl-color-convert-to-gray-u16-op.gob 
		- gegl-color-convert-to-gray-u16_4-op.gob
		- gegl-color-convert-to-rgb-u16-op.gob
		- gegl-color-convert-to-rgb-u16_4-op.gob
		- gegl-color-model-gray-u16.gob 
		- gegl-color-model-gray-u16_4.gob
	
	* I fixed some display bugs in testgeglfile.c

2000-04-04 Caroline Dahloff <caro@rhythm.com>

	* check in for gegl
	
	* gegl-types.h added varible to the enum and union
	to handle all the data types u8, u16, u16_4, float

	* changed testgeglfile to handle the new data
	types

	* created a color model for u16 and u16_4
		- gegl-color-model-rgb-u16_4.gob
		- gegl-color-model-rgb-u16.gob


2000-04-04 Calvin Williamson <calvinw@mindspring.com>

	* Added the first set of .gil files(.gil files generate .gob files)
	  gegl/gegl-add-op.gil
	  gegl/gegl-composite-op.gil
	  gegl/gegl-composite-premult-op.gil
	  gegl/gegl-dark-op.gil
	  gegl/gegl-diff-op.gil
	  gegl/gegl-light-op.gil
	  gegl/gegl-max-op.gil
	  gegl/gegl-min-op.gil
	  gegl/gegl-mult-op.gil
	  gegl/gegl-premult-op.gil
	  gegl/gegl-screen-op.gil
	  gegl/gegl-subtract-op.gil
	  gegl/gegl-unpremult-op.gil  

    * removed the .gob s for the above. These get generated by codegen.

    * Added info to generate .gob s from these .gils to gegl/Makefile.am

    * Updated gegl/testgeglfile.c to use TIFFGetR,TIFFGetB,etc. 

    * In codegen/parser.y turned off debug flag   

    * Updated the .gil test files in codegen/test_files. (We can
      remove these soon.)   
     

2000-04-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* lexer.l made sure that all the stated that read the
	channel files rm all extra tokens that they dont use for
	its grammar. 
	
2000-04-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have updated the channel data files.


2000-04-03 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* fixed a bug in parser.y in the function print line. The 
	problem was that it did not do the right think with scaler
	lines that had alpha varibles in them.

2000-03-29 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* parser.y I turned off the debug print out for the lexer 
	and the parser. This flag is in the main of parser.y. I
	left a comment about it there.

	* lexer.l I changed it so that when I read the string
	GENERIC_IMAGE_DECL_BEGIN I eat up all the new lines before it.
	Then I print all out except for one. It will leave one new line
	if GENERIC_IMAGE_DECL_BEGIN is on the first line.

	* check in for gegl

	* gegl-premult-op.gob for the ==0 case we for got to
	increment the src. Fixd that.
 
2000-03-29 Calvin Williamson <calvinw@mindspring.com>

	* check in for codegen
	
	* removed some extra test files in codegen/test_files.  

	* cleaned up codegen/channel_data files u8,u16,float,u16_4k   

	* updated the html docs/genericImageLanguage.html,
	      genericChannelData.html. 
	   
    * removed a .pregob file from gegl directory. Will use
      .gil files for this.

2000-03-29 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen
	
	* fixed extra line problems

	* i have create two new states for the lexer.l form
	data_type state on can either go directly to arguments or 
	definition depending on what token one has just read.

	* updated codegen/README
	
2000-03-28 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen
	
	* this is a check in to transport data 
	from work to home. There migh be bugs in code
	but it should compile and hopefully work.

2000-03-28 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen
	
	* I changed ROUND_CHANNEL to CHANNEL_ROUND in the following files:
		- parser.y
		- lexer.l
		- data_types.h
		- channel_data/*

	* I also made both END tokes for the lexer.l eat up all \n. It
	as giving me some extra new lines otherwise. 

2000-03-28 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* lexer.l I have changed it so that the lexer will look for the token Channnel
	instead of Chan and Pixel instead of VectorChan  

2000-03-28 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* I have made the following change to parser.y, lexer.l,common.h
	data_file.h, and the the files in channel_data
	CHAN_MULT to be CHANNEL_MULT
	MIN_CHAN to be MIN_CHANNEL
	MAX_CHAN to be MAX_CHANNEL
	CHAN_CLAMP to be CHANNEL_CLAMP
	ROUND to be CHANNEL_ROUND
	    in other words i have changed CHAN to CHANNEL 


2000-03-28 Calvin Williamson <calvinw@mindspring.com>

	* check in for codegen

	* Updated all the .gil files in gegl/codegen/test_files: 
	  gegl-add-op.gil
	  gegl-composite-op.gil
	  gegl-composite-premult-op.gil
	  gegl-dark-op.gil
	  gegl-diff-op.gil
	  gegl-light-op.gil
	  gegl-max-op.gil
	  gegl-min-op.gil
	  gegl-mult-op.gil
	  gegl-premult-op.gil
	  gegl-screen-op.gil
	  gegl-subtract-op.gil
	  gegl-unpremult-op.gil

	* Changed VectorChan to Pixel, Chan to Channel in 
	      gegl/docs/genericImageLanguage.html 
	      gegl/docs/genericChannelData.html 

	* updated all the test files gegl/codegen/test_files to 
	      use the new terms. 

	    * updated gegl/codegen/README a little.


2000-03-27 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* print_info is added to lexer.l. This function will write out debug
	info in the code that is generated if DEBUG flag is set. This flag is
	defined in common.h

	* I added some ' ' to the data_files

	* I re-indented some of the test_files/gegl*

2000-03-27 Calvin Williamson <calvinw@mindspring.com>

	* check in for codegen

    * updated these files:
      codegen/test_files/gegl-screen-op.gil
      codegen/test_files/gegl-dark-op.gil
      codegen/test_files/gegl-light-op.gil
      codegen/test_files/gegl-composite-premult-op.gil
	    
      Put in the wrapper part of for the generic image
      language programs
      GENERIC_IMAGE_PROGRAM
      GENERIC_IMAGE_CODEGEN_BEGIN
      GENERIC_IMAGE_CODEGEN_END
	 
    * added docs directory and these html docs:
      docs/geglClasses.html 
      docs/genericChannelData.html 
      docs/genericImageLanguage.html 

2000-03-26 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* parser.y: Fixed the iterators, I was printing out $4.string for the variable name 
	but that string had been changed.

2000-03-26 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* parser.y: Fixed the the function read_channel_names. It has an off by
	one error. Changed when I put new lines. I know only put new lines after
	each VectorCHan in iterator and init_image_data

	* Updated README

2000-03-25 Calvin Williamson <calvinw@mindspring.com>
	
	* check in for codegen

    * updated these files:
      codegen/test_files/gegl-min-op.gil
      codegen/test_files/gegl-max-op.gil
      codegen/test_files/gegl-mult-op.gil
      codegen/test_files/gegl-subtract-op.gil
      codegen/test_files/gegl-diff-op.gil
    
      Put in the wrapper part of for the generic image
      language programs
      GENERIC_IMAGE_PROGRAM
      GENERIC_IMAGE_CODEGEN_BEGIN
      GENERIC_IMAGE_CODEGEN_END

    * removed extra spaces from channel_data files:
      u8,u16,u16_4k,float.   
 
2000-03-25 Caroline Dahloff <caro@rhythm.com>
	
	* check in for codegen

	* changed parser.y so that it does now not take the alpha
	name at the comand line. it is generated automaticly.

2000-03-25 Calvin Williamson <calvinw@mindspring.com>
	
	* check in for codegen

    * created directory channel_data which has the channel
      data files u8, u16, float, u16_4k (renamed from FLOAT,
      UINT8, UINT16)

    * removed FLOAT, UINT8, UINT16 from main codegen directory

2000-03-25 Caroline Dahloff <caro@rhythm.com>
	
	* check in for codegen

	* added the follwing test file
		gegl-add-op.gil
		gegl-mult-op.gil
		gegl-subtract-op.gil

2000-03-25 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* tested and fixed all the new .gil test file

	* fixed spacing for parser.y and lexer.l

2000-03-24 Caroline Dahloff <caro@rhythm.com>

	* check in for codegen

	* added a lot of .gil test files:
		gegl-composite-op.gil
		gegl-composite-premult-op.gil
		gegl-dark-op.gil
		gegl-diff-op.gil 
		gegl-light-op.gil 
		gegl-max-op.gil 
		gegl-min-op.gil	 
		gegl-premult-op.gil 
		gegl-screen-op.gil   
		gegl-unpremult-op.gil   

	* codegen/parser.y fixed the problem of adding * for the
	dX functions.

	* codegen/parser.y added a new line after each vectorchan
	in image data init

	* added a new line after each expantion of a vectorchan


2000-03-24 Calvin Williamson <calvinw@mindspring.com>
	
	* codegen/test_files Updated most of the test_files
    	  test,test2-8.  

2000-03-23 Caroline Dahloff <caro@rhythm.com>
	
	* codegen/lexer.l I made sure that the extra
	\n, \t, '', thta can be left over from a 
	state token was removed.

2000-03-23 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y in function get_sym. I fixed the
	crashing problem it had. I was using %d instead of %s
	when I created a new string.


2000-03-23 Caroline Dahloff <caro@rhythm.com>
	
	* codegen/parser.y. I have changed it so that
	%s_has_%s has now become its own varible, unlike 
	before when it lived of the color chan that it
	was associated with it.

2000-03-23 Caroline Dahloff <caro@rhythm.com>

	* codegen?parser.y. I have rm the varibles Pointer and
	PointerVecChan. It is now not possible to have any pointers
	in codegen.

2000-03-23 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y I have made all PointerVecChab into
	Pointers in all the grammer except for on the declatation grammar. This solves the problem
	of * not showing up for varible that are not color varible.

2000-03-23 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y changed the print_name function
	so that it sets the num varible to one.

2000-03-23 Caroline Dahloff <caro@rhythm.com>
	
	* codegen/lexer.l. Made sure that the lexer ate 
	up all the useless spaces that were left from
	reading the key words.

2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* codegen. I have changed parer.y and lexer.l so
	that the data file can have any numbers of tabs 
	before the actual string.

2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* codegen I have rm the necessity of haveing "" around
	the strings in the data files. I have changed both lexer.l
	and parser.y to complish this.

2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y: I have fixed the problem with 
	do_op_three. The problem was the doing operations on
	different varibles with different number of elements.

2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y: I have fixed the problem with 
	do_op_three. The problem was the doing operations on
	different varibles with different number of elements.


2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* codegen/parser.y I have changed it so that
	you can only preform operations if the .num
	varible is the same or that one of the variables
	is either a ZERO or a WP. The .num varible value
	for ZERO and WP is 0.

2000-03-22 Caroline Dahloff <caro@rhythm.com>

	* fixed the problem of the varible has_alpha
	not showing up in the decleration

	* changed how datatype read the string in
	parser.y


2000-03-21 Caroline Dahloff <caro@rhythm.com>

	* fixed the rpoblem with has_alpha. In the 
	get_sym function it would not recornise a has_alpha
	varible.

2000-03-21 Caroline Dahloff <caro@rhythm.com>

	* fixed the indent problem with the 
	GENERIC_IMAGE_IMAGE_DATA_INIT

	* fixed the problem of reading just one char for data files

	* rm the extra lines generatyed at the top of the files

2000-03-21 Caroline Dahloff <caro@rhythm.com>

	* Fixed the problem of always genercating _ha_alpha

	* Inited the value .inited

	* Fixed test file test2, test5

2000-03-21 Caroline Dahloff <caro@rhythm.com>

	* I have added VectorCHan (color,alpha,has_alpha). This
	means that I have added the varible, and changed the
	init_data_image.

2000-03-21 Caroline Dahloff <caro@rhythm.com>
	
	* CHanged the arguments so that the last arg can be the
	input file. If this last arg is not present, the lexer will
	use stdin

	* rm print outs that was generated when reading the data file.

2000-03-21 Caroline Dahloff <caro@rhythm.com>

	* in do_op_three for the case of OP_EQUAL, it
	was using the CHAN_MULT_STR instead of
	ROUND_STR

2000-03-20 Caroline Dahloff <caro@rhythm.com>
	
	* changed the lexer and the parser so that it will
	handle vectorchan that maybe has alpha.

	* i have updated the way codegen handles its data file
	so that it will read the file correctly

	* all the global char * varibles have now _STR at their end

	* the lexer has now a special state to read data files. the data
	file is processed by the lexer and parser.

2000-03-18 Calvin Williamson <calvinw@mindspring.com>

	* testgeglfile.c - more improvements.   Added back the tests for 
   	  the composite ops and the other point ops. 

2000-03-18 Calvin Williamson <calvinw@mindspring.com>

	* testgeglfile.c - some fixes and simplificatons. It
   	  was reading r,g,b,a in the wrong order, so it displays 
   	  correctly now. 

	* testgeglfile.c - command line args are just two equal 
   	  size RGBA source tiffs now: 
   	  >testgeglfile src1.tiff src2.tiff       

    * testgeglfile.c - removed extraneous iterator code, and so 
      dont really need get_current_rect in gegl-image-iterator constructor. 
      (However, the iterator class will need more design work for sure.) 

2000-03-16  Jay Cox  <jaycox@gimp.org>

	* gegl/gegl-image-iterator.gob: call get_current_rect in the
	constructor so that the scanline_data is initialized properly.
	* gegl/testgeglfile.c: Optomized and fixed a bug in display_image.

2000-03-16 Caroline Dahloff <caro@rhythm.com>
	
	* added error messages.

2000-03-16 Caroline Dahloff <caro@rhythm.com>

	* This is for codegen

	* I updated the README

	* Made the token indent in lexer.l take \t

2000-03-16 Caroline Dahloff <caro@rhythm.com>

	* This check in is for codegen
	* I have created a new structre called token_t and some new tokens 
	(COMPARE, MIN_MAX, ADD_SUB). These to new additions have allowed me to
	remove all the specific tokens for ==,!=,<,>,<=,>=,&,&&,|,||,MIN,MAX,++,--.
	The grammer look for the new tokens which is assoicated with the new struct
	so the grammar knows what to print. 
	* Fixed how parser.y reads the data file.
	
2000-03-15 Caroline Dahloff <caro@rhythm.com>

	* fixed bugs

2000-03-15 Caroline Dahloff <caro@rhythm.com>
	
	* fixed bugs

2000-03-15 Caroline Dahloff <caro@rhythm.com>

	* I have added the data files UINT8 and UINT16

	* I have changed the names of the GLOBAL varibles.

2000-03-15 Caroline Dahloff <caro@rhythm.com>

	* to run codegen type
	> codegen --channel-data-file CHANNEL_FILE_NAME --channel-names name,name,name
	For channel names it assumes that the last name is the alpha. If there is only
	one name it assumes that this one is alpha. 
	 
2000-03-14 Caroline Dahloff <caro@rhythm.com>

	* codegen now takes a file, I have added an example file called FLOAT

2000-03-14 Caroline Dahloff <caro@rhythm.com>

	* fixed problem

	* to run codegen now type
	codegen datatype(FLOAT, UINT8, UINT16) nameofcolorchannels(red green blue alpha)

2000-03-14 Caroline Dahloff <caro@rhythm.com>

	* fixed stuff

2000-03-14 Caroline Dahloff <caro@rhythm.com>
	
	* More changes, rm-ed the ability of adding {} cuz
	it did not work quite right. At this point it is
	necessary to have {}

	* CODEGEN has now become GENERIC_IMAGE 

2000-03-13 Caroline Dahloff <caro@rhythm.com>
	
	* This version will add {} when ever it is necessary.

2000-03-13 Caroline Dahloff <caro@rhythm.com>
	
	* rm-ed codegen ability to deal with gint, gchar ...

	* fixed a _alpha problem.

2000-03-08 Caroline Dahloff <caro@rhythm.com>

	* final check in for the day. fixed bugs.

2000-03-08 Caroline Dahloff <caro@rhythm.com>

	* fixed bugs, what a day.

2000-03-08 Caroline Dahloff <caro@rhythm.com>

	* added test_files for codegen and fixed and improved codegen.
`
2000-03-08 Caroline Dahloff <caro@rhythm.com>
	
	* fixed bugs in codegen

2000-03-08 Caroline Dahloff <caro@rhythm.com>

	* updated README for codegen and fixed a bug.

2000-03-08 Caroline Dahloff <caro@rhythm.com>
	
	* CHange the way it handled chan, floatchan, int, and float.
	Hopefully it should work much better now.

2000-03-07 Caroline Dahloff <caro@rhythm.com>
	
	* This version will now parse files that have the
	syntaxed described on Calvin's webpages.

	* I have introduced the varible ZERO

2000-03-06 Caroline Dahloff <caro@rhythm.com>

	* started to add the INIT_PIXEL_DATA

	* extra varibles are added

2000-03-03 Caroline Dahloff <caro@rhythm.com>
	
	* made more changes to codegen, there are now states
	in the lexer. 

2000-03-02 Caroline Dahloff <caro@rhythm.com>
	
	* fixed codegen, I am checking in before a big
	change

2000-03-01 Caroline Dahloff <caro@rhythm.com>
	
	* Added a tools dir that currently contain a 
	program that takes an input files and substitute 
	all the tabs with 8 spaces.

	* Passes all the .gob files through the program I mention above.
	This will hopefully rm the weired format that one sees on the
	gnome site.

	* Made some more changes to codegen, look in the README for more
	specific information

2000-02-29 Caroline Dahloff <caro@rhythm.com>
	
	* Made more modifications to codegen, I am not
	able to parse .gob files. Look at test_files/test5

	* Look in README for more updates

	* Added test_files/test5 

2000-02-28 Caroline Dahloff <caro@rhythm.com>
	
	* A lot of modifications and new stuff.
	
	* I have added VectorChan
	
	* Changed the indent

	* added descriptions in the readme

	* changed test files

2000-02-23 Caroline Dahloff <caro@rhythm.com>
	
	* Cleaned up codegen code
	
	* started to implement different kinds of Channels

2000-02-23 Caroline Dahloff <caro@rhythm.com>
	
	* Rm-ed compile errors
	
	* Added more parse functionality

	* included a dir with test files

2000-02-23 Calvin Williamson <calvinw@mindspring.com>

	* Cleaned up the initial codegen import.  


2000-02-22 Caroline Dahloff <caro@rhythm.com>

	* Initial check in of codegen dir

	* This hopefully will become a parser that will 
	create data type specific code from generic code.


2000-02-18 Calvin Williamson <calvinw@mindspring.com>

    * Added CompositePremultOp ,SingleSrcOp class

	* Updated the algorithms in CompositeOp ,CompositePremultOp
	PremultOp, UnpremultOp.

	* Made all the appropriate Ops subclasses of SingleSrcOp
	or DualSrcOp
  
2000-02-11 Calvin Williamson <calvinw@mindspring.com>

	* removed the Iterator type routines from ImageBuffer. 
  
	* updated testgeglfile to use these new routines. 

2000-02-11 Calvin Williamson <calvinw@mindspring.com>

	* rm gegl-chancopy-op.gob (renamed it)

	* added these files: 
	  gegl-copy-chan-op.gob
	  gegl-dual-src-op.gob
	  gegl-image-iterator.gob

	* updated all the ops to use the ImageIterator class

	* updated README to say use gob-0.92.3 

	* updated the generic algorithms for: 
	  gegl-add-op.gob
	  gegl-dark-op.gob
	  gegl-diff-op.gob
	  gegl-light-op.gob
	  gegl-max-op.gob
	  gegl-min-op.gob
	  gegl-mult-op.gob
	  gegl-screen-op.gob
	  gegl-subtract-op.gob

	* lots of little cleanups in most op classes 
	

2000-02-08 Caroline Dahloff <caro@rhythm.com>

	* added gegl-chancopy-op.gegl and gegl-add-op.gegl
	
	* fixed warnings 


	* added gegl-chancopy-op.gegl and gegl-add-op.gegl
	
	* fixed warnings 

2000-02-01 Caroline Dahloff <caro@rhythm.com>

	* added these files
		gegl-mult-op.gob
		gegl-min-op.gob
		gegl-max-op.gob
		gegl-subtract-op.gob
		gegl-diff-op.gob
		gegl-dark-op-.gob
		gegl-light-op.gob
		gegl-sceen-op.gob
	
	* rm CLAMP in gegl-type.h
	
	* Clamped the values i rounded  

	* Changed testgeglfile.c so that it tests the new functions

2000-01-31 Caroline Dahloff <caro@rhythm.com>

	    * fixed bugs in gegl-composite-op. It should work now.

	* tested the torgb, togray, tou8, tofloat function in
	gegl-color-model. They seem to work fine.

2000-01-31 Calvin Williamson <calvinw@mindspring.com>

	*fixed bugs in destroy methods of all convert-ops:  
	     gegl-color-convert-to-rgb-float-op.gob
	     gegl-color-convert-to-rgb-u8-op.gob
	     gegl-color-convert-to-gray-float-op.gob
	     gegl-color-convert-to-gray-u8-op.gob
	     gegl-color-convert-connection-op.gob

	*updated the PrintOp and FillOp to handle u8 and gray cases. 

	*updated testgegl to test the color conversion routines. 

2000-01-30 Calvin Williamson <calvinw@mindspring.com>

	*added ColorConvertConnectionOp class  
	 which handles conversion through an xyz float space

	*updated all the convert ops to call to_float, to_u8, to_gray, 
	 to_rgb routines of the appropriate color model classes. 

	*cleaned up some in the ColorModel classes. 

	*added a color model maker routine to gegl-utils.c 
     (need a factory thing). 

2000-01-29 Caroline Dahloff <caro@rhythm.com>

	* added to_float, to_u8, to_gray, to_rgb
	to color_model classes.

	* changed to_xyz, from_xyz in color_model
	so that it takes now a float** arg instead of a float*

Fri Jan 28 16:37:57 PST 2000 Manish Singh <yosh@gimp.org>

	* configure.in: autodetect gob and error out if not there

	* Makefile.am: revamp the build process to automatically care for
	gob stuff

	* reformatted the ChangeLog to be consistent with other projects

2000-01-28 Calvin Williamson <calvinw@mindspring.com>

	* Added the gegl-color-convert-op.gob 
	* Added the gegl-color-convert-to-rgb-float-op.gob 
	* Added the gegl-color-convert-to-rgb-u8-op.gob 
	* Added the gegl-color-convert-to-gray-float-op.gob 
	* Added the gegl-color-convert-to-gray-u8-op.gob 
	* removed gegl-convert-rgb-op.gob
	* removed gegl-convert-gray-op.gob

2000-01-28 Caroline Dahloff <caro@rhythm.com>
	
	* Simplified the gegl-composite-op.pregob

2000-01-27 Caroline Dahloff <caro@rhythm.com>

	* Changed varible names in gegl-composite-op

	* Created a gegl-composite-op.pregob

2000-01-26 Caroline Dahloff <caro@rhythm.com>

	* Fixed some bugs in gegl-color_model-gray
	  and gegl-convert-rgb/gray-op 

2000-01-26 Caroline Dahloff <caro@rhythm.com>

	* Forgot to add gegl-convert-gray.gob

2000-01-26 Caroline Dahloff <caro@rhythm.com>

	* Fixed some bugs in gegl-composite-op.gob

	* Added gegl-color-model-gray, gegl-color-model-gray-float
	  gegl-color-model-gray-u8

	* Added some function to take care of most of the cases in
	  gegl-composite-op.gobi for unpremult and premult with or
	  without alpha

	* Added suport for the color_models to convert from and to
	  XYZ space.

2000-01-25 Calvin Williamson <calvinw@mindspring.com>

	* More details for GeglDrawable class.  

	* Fixed a bunch of gegl_destroys to be correct.

	* Straightened out some of the forward header problems
	  by updating to gob-0.92.2. No gob patch is necessary
	  now.

2000-01-24 Calvin Williamson <calvinw@mindspring.com>

	* Fixed the GOB_PUBLIC_HEADER in Makefile.am for
	  gegl-composite-op.h gegl-premult-op.h gegl-unpremult-op.h

	* Fixed some of set_color for GeglColorModelRgbU8.
	  channels[i].u8 is how to get 8bit version of a GeglColor.

	* Use guint8 not guchar for 8bit data type code.

	* Added more to GeglDrawable class.

2000-01-23 Calvin Williamson <calvinw@mindspring.com>
	
	* added caros testgeglfile --which opens 2 tiffs
	  to test the composite ops. 

	* made a bunch of code more readable. 

2000-01-21 Caroline Dahloff <caro@rhythm.com>

	* added some U8 support
	* implemented part of convert, composite ops

2000-01-20 Calvin Williamson <calvinw@mindspring.com>

	* initial import  

	* The following classes have initial versions:

	  GeglObject -- base class for gegl classes  
	  GeglOp -- class for operators  
	  GeglPointOp  -- operators that only need (x,y) to compute pixel (x,y)
	  GeglFillOp -- fills images with a color
	  GeglPrintOp -- prints out the pixel values of an image (floats only now)
	  GeglImageBuffers -- buffers for image data and pointers to data 
	  GeglColorModel -- ColorSpace, color channels, alpha info, data type 
	  GeglColorModelRgb -- subclass of RGB color models
	  GeglColorModelRgbFloat -- floating pt channels RGB color model 
	  GeglColor -- stores channels for a single color 

	* There is a small test program -- testgegl
