Sat Apr  8 17:54:03 PDT 2000 caro@rhythm.com
	
	* check in for codegen

	* Added SignedPromote token I changed parser.y, lexer.l
	and data_types.h and the channel files

	* I also changed PROMOTE to PROMOTE_TYPE


Fri Apr  7 15:59:34 PDT 2000 caro@rhythm.com

	* check in for codegen

	* I have added Promote to all the gil files
	in test_file

Thu Apr  6 17:28:02 PDT 2000 caro@rhythm.com

	* check in for gegl

	* Corrected the Makefile.am to be float.

Thu Apr  6 17:06:44 PDT 2000 caro@rhythm.com

	* checked in for codegen

	* updated the channel data files

Thu Apr  6 15:17:30 PDT 2000 caro@rhythm.com
	
	* check in for codegen

	* added the promote to lexer.l data_type.h, and parser.y.

	* changed the channel data files so they have
	a PROMOTE field now

Tue Apr  4 17:59:14 PDT 2000 caro@rhythm.com

	* check in for codegen

	* I changed the varible VectorCHan to Pixel and
	Chan to Channel

	* I changed the channel data files so that they dont use the 
	MULT macro

	* check in for gegl

	* I added the following files
		- gegl-color-convert-to-gray-u16-op.gob 
		- gegl-color-convert-to-gray-u16_4-op.gob
		- gegl-color-convert-to-rgb-u16-op.gob
		- gegl-color-convert-to-rgb-u16_4-op.gob
		- gegl-color-model-gray-u16.gob 
		- gegl-color-model-gray-u16_4.gob
	
	* I fixed some display bugs in testgeglfile.c

Tue Apr  4 12:40:36 PDT 2000 caro@rhythm.com

	* check in for gegl
	
	* gegl-types.h added varible to the enum and union
	to handle all the data types u8, u16, u16_4, float

	* changed testgeglfile to handle the new data
	types

	* created a color model for u16 and u16_4
		- gegl-color-model-rgb-u16_4.gob
		- gegl-color-model-rgb-u16.gob


Tue Apr  4 12:29:33 EDT 2000 calvinw@mindspring.com

	* Added the first set of .gil files(.gil files generate .gob files)
	  gegl/gegl-add-op.gil
	  gegl/gegl-composite-op.gil
	  gegl/gegl-composite-premult-op.gil
	  gegl/gegl-dark-op.gil
	  gegl/gegl-diff-op.gil
	  gegl/gegl-light-op.gil
	  gegl/gegl-max-op.gil
	  gegl/gegl-min-op.gil
	  gegl/gegl-mult-op.gil
	  gegl/gegl-premult-op.gil
	  gegl/gegl-screen-op.gil
	  gegl/gegl-subtract-op.gil
	  gegl/gegl-unpremult-op.gil  

        * removed the .gob s for the above. These get generated by codegen.

        * Added info to generate .gob s from these .gils to gegl/Makefile.am

        * Updated gegl/testgeglfile.c to use TIFFGetR,TIFFGetB,etc. 

        * In codegen/parser.y turned off debug flag   

        * Updated the .gil test files in codegen/test_files. (We can
          remove these soon.)   
         

Mon Apr  3 13:22:41 PDT 2000 caro@rhythm.com\

	* check in for codegen

	* lexer.l made sure that all the stated that read the
	channel files rm all extra tokens that they dont use for
	its grammar. 
	
Mon Apr  3 11:52:38 PDT 2000 caro@rhythm.com

	* check in for codegen

	* I have updated the channel data files.


Mon Apr  3 11:02:12 PDT 2000 caro@rhythm.com

	* check in for codegen

	* fixed a bug in parser.y in the function print line. The 
	problem was that it did not do the right think with scaler
	lines that had alpha varibles in them.

Wed Mar 29 18:37:56 PST 2000 caro@rhythm.com

	* check in for codegen

	* parser.y I turned off the debug print out for the lexer 
	and the parser. This flag is in the main of parser.y. I
	left a comment about it there.

	* lexer.l I changed it so that when I read the string
	GENERIC_IMAGE_DECL_BEGIN I eat up all the new lines before it.
	Then I print all out except for one. It will leave one new line
	if GENERIC_IMAGE_DECL_BEGIN is on the first line.

	* check in for gegl

	* gegl-premult-op.gob for the ==0 case we for got to
	increment the src. Fixd that.
 
Wed Mar 29 17:05:22 EST 2000 calvinw@mindspring.com

	* check in for codegen
	
	* removed some extra test files in codegen/test_files.  

	* cleaned up codegen/channel_data files u8,u16,float,u16_4k   

	* updated the html docs/genericImageLanguage.html,
          genericChannelData.html. 
       
        * removed a .pregob file from gegl directory. Will use
          .gil files for this.

Wed Mar 29 11:10:13 PST 2000 caro@rhythm.com

	* check in for codegen
	
	* fixed extra line problems

	* i have create two new states for the lexer.l form
	data_type state on can either go directly to arguments or 
	definition depending on what token one has just read.

	* updated codegen/README
	
Tue Mar 28 18:55:22 PST 2000 caro@rhythm.com

	* check in for codegen
	
	* this is a check in to transport data 
	from work to home. There migh be bugs in code
	but it should compile and hopefully work.

Tue Mar 28 13:58:38 PST 2000 caro@rhythm.com

	* check in for codegen
	
	* I changed ROUND_CHANNEL to CHANNEL_ROUND in the following files:
		- parser.y
		- lexer.l
		- data_types.h
		- channel_data/*

	* I also made both END tokes for the lexer.l eat up all \n. It
	as giving me some extra new lines otherwise. 

Tue Mar 28 12:12:39 PST 2000 caro@rhythm.com

	* check in for codegen

	* lexer.l I have changed it so that the lexer will look for the token Channnel
	instead of Chan and Pixel instead of VectorChan  

Tue Mar 28 11:21:30 PST 2000 caro@rhythm.com

	* check in for codegen

	* I have made the following change to parser.y, lexer.l,common.h
	data_file.h, and the the files in channel_data
	CHAN_MULT to be CHANNEL_MULT
	MIN_CHAN to be MIN_CHANNEL
	MAX_CHAN to be MAX_CHANNEL
	CHAN_CLAMP to be CHANNEL_CLAMP
	ROUND to be CHANNEL_ROUND
        in other words i have changed CHAN to CHANNEL 


Tue Mar 28 12:33:51 EST 2000 calvinw@mindspring.com

	* check in for codegen

	* Updated all the .gil files in gegl/codegen/test_files: 
	  gegl-add-op.gil
	  gegl-composite-op.gil
	  gegl-composite-premult-op.gil
	  gegl-dark-op.gil
	  gegl-diff-op.gil
	  gegl-light-op.gil
	  gegl-max-op.gil
	  gegl-min-op.gil
	  gegl-mult-op.gil
	  gegl-premult-op.gil
	  gegl-screen-op.gil
	  gegl-subtract-op.gil
	  gegl-unpremult-op.gil

	* Changed VectorChan to Pixel, Chan to Channel in 
          gegl/docs/genericImageLanguage.html 
          gegl/docs/genericChannelData.html 

	* updated all the test files gegl/codegen/test_files to 
          use the new terms. 

        * updated gegl/codegen/README a little.


Mon Mar 27 13:48:11 PST 2000 caro@rhythm.com

	* check in for codegen

	* print_info is added to lexer.l. This function will write out debug
	info in the code that is generated if DEBUG flag is set. This flag is
	defined in common.h

	* I added some ' ' to the data_files

	* I re-indented some of the test_files/gegl*

Mon Mar 27 15:07:24 EST 2000 calvinw@mindspring.com

	* check in for codegen

        * updated these files:
          codegen/test_files/gegl-screen-op.gil
          codegen/test_files/gegl-dark-op.gil
          codegen/test_files/gegl-light-op.gil
          codegen/test_files/gegl-composite-premult-op.gil
        
          Put in the wrapper part of for the generic image
          language programs
          GENERIC_IMAGE_PROGRAM
          GENERIC_IMAGE_CODEGEN_BEGIN
          GENERIC_IMAGE_CODEGEN_END
     
        * added docs directory and these html docs:
          docs/geglClasses.html 
          docs/genericChannelData.html 
          docs/genericImageLanguage.html 

Sun Mar 26 15:01:35 PST 2000 caro@rhythm.com

	* check in for codegen

	* parser.y: Fixed the iterators, I was printing out $4.string for the variable name 
	but that string had been changed.

Sun Mar 26 14:41:12 PST 2000 caro@rhythm.com

	* check in for codegen

	* parser.y: Fixed the the function read_channel_names. It has an off by
	one error. Changed when I put new lines. I know only put new lines after
	each VectorCHan in iterator and init_image_data

	* Updated README

Sat Mar 25 21:03:06 EST 2000 calvinw@mindspring.com
	
	* check in for codegen

        * updated these files:
          codegen/test_files/gegl-min-op.gil
          codegen/test_files/gegl-max-op.gil
          codegen/test_files/gegl-mult-op.gil
          codegen/test_files/gegl-subtract-op.gil
          codegen/test_files/gegl-diff-op.gil
        
          Put in the wrapper part of for the generic image
          language programs
          GENERIC_IMAGE_PROGRAM
          GENERIC_IMAGE_CODEGEN_BEGIN
          GENERIC_IMAGE_CODEGEN_END

        * removed extra spaces from channel_data files:
          u8,u16,u16_4k,float.   
 
Sat Mar 25 17:57:43 PST 2000 caro@rhythm.com
	
	* check in for codegen

	* changed parser.y so that it does now not take the alpha
	name at the comand line. it is generated automaticly.

Sat Mar 25 17:29:26 EST 2000 calvinw@mindspring.com
	
	* check in for codegen

        * created directory channel_data which has the channel
          data files u8, u16, float, u16_4k (renamed from FLOAT,
          UINT8, UINT16)

        * removed FLOAT, UINT8, UINT16 from main codegen directory

Sat Mar 25 14:33:08 PST 2000 caro@rhythm.com
	
	* check in for codegen

	* added the follwing test file
		gegl-add-op.gil
		gegl-mult-op.gil
		gegl-subtract-op.gil

Sat Mar 25 10:56:34 PST 2000 caro@rhythm.com

	* check in for codegen

	* tested and fixed all the new .gil test file

	* fixed spacing for parser.y and lexer.l

Fri Mar 24 18:13:39 PST 2000 caro@rhythm.com

	* check in for codegen

	* added a lot of .gil test files:
		gegl-composite-op.gil
		gegl-composite-premult-op.gil
		gegl-dark-op.gil
		gegl-diff-op.gil 
		gegl-light-op.gil 
		gegl-max-op.gil 
		gegl-min-op.gil     
		gegl-premult-op.gil 
		gegl-screen-op.gil   
		gegl-unpremult-op.gil   

	* codegen/parser.y fixed the problem of adding * for the
	dX functions.

	* codegen/parser.y added a new line after each vectorchan
	in image data init

	* added a new line after each expantion of a vectorchan


Fri Mar 24 11:36:55 EST 2000 calvinw@mindspring.com 
	
	* codegen/test_files Updated most of the test_files
          test,test2-8.  

Thu Mar 23 17:53:28 PST 2000 caro@rhythm.com
	
	* codegen/lexer.l I made sure that the extra
	\n, \t, '', thta can be left over from a 
	state token was removed.

Thu Mar 23 17:42:53 PST 2000 caro@rhythm.com

	* codegen/parser.y in function get_sym. I fixed the
	crashing problem it had. I was using %d instead of %s
	when I created a new string.


Thu Mar 23 16:49:25 PST 2000 caro@rhythm.com
	
	* codegen/parser.y. I have changed it so that
	%s_has_%s has now become its own varible, unlike 
	before when it lived of the color chan that it
	was associated with it.

Thu Mar 23 15:55:36 PST 2000 caro@rhythm.com

	* codegen?parser.y. I have rm the varibles Pointer and
	PointerVecChan. It is now not possible to have any pointers
	in codegen.

Thu Mar 23 15:19:45 PST 2000 caro@rhythm.com

	* codegen/parser.y I have made all PointerVecChab into
	Pointers in all the grammer except for on the declatation grammar. This solves the problem
	of * not showing up for varible that are not color varible.

Thu Mar 23 14:35:40 PST 2000 caro@rhythm.com

	*codegen/parser.y changed the print_name function
	so that it sets the num varible to one.

Thu Mar 23 11:26:39 PST 2000 caro@rhythm.com
	
	* codegen/lexer.l. Made sure that the lexer ate 
	up all the useless spaces that were left from
	reading the key words.

Wed Mar 22 18:07:30 PST 2000 caro@rhythm.com

	* codegen. I have changed parer.y and lexer.l so
	that the data file can have any numbers of tabs 
	before the actual string.

Wed Mar 22 17:21:58 PST 2000 caro@rhythm.com

	* codegen I have rm the necessity of haveing "" around
	the strings in the data files. I have changed both lexer.l
	and parser.y to complish this.

Wed Mar 22 16:10:12 PST 2000 caro@rhythm.com

	* codegen/parser.y: I have fixed the problem with 
	do_op_three. The problem was the doing operations on
	different varibles with different number of elements.

Wed Mar 22 16:10:12 PST 2000 caro@rhythm.com

	* codegen/parser.y: I have fixed the problem with 
	do_op_three. The problem was the doing operations on
	different varibles with different number of elements.


Wed Mar 22 14:28:56 PST 2000 caro@rhythm.com

	* codegen/parser.y I have changed it so that
	you can only preform operations if the .num
	varible is the same or that one of the variables
	is either a ZERO or a WP. The .num varible value
	for ZERO and WP is 0.

Wed Mar 22 10:23:14 PST 2000 caro@rhythm.com

	* fixed the problem of the varible has_alpha
	not showing up in the decleration

	* changed how datatype read the string in
	parser.y


Tue Mar 21 18:11:07 PST 2000 caro@rhythm.com

	* fixed the rpoblem with has_alpha. In the 
	get_sym function it would not recornise a has_alpha
	varible.

Tue Mar 21 17:03:19 PST 2000 caro@rhythm.com

	* fixed the indent problem with the 
	GENERIC_IMAGE_IMAGE_DATA_INIT

	* fixed the problem of reading just one char for data files

	* rm the extra lines generatyed at the top of the files

Tue Mar 21 16:23:10 PST 2000 caro@rhythm.com

	* Fixed the problem of always genercating _ha_alpha

	* Inited the value .inited

	* Fixed test file test2, test5

Tue Mar 21 14:28:32 PST 2000 caro@rhythm.com

	* I have added VectorCHan (color,alpha,has_alpha). This
	means that I have added the varible, and changed the
	init_data_image.

Tue Mar 21 10:24:30 PST 2000 caro@rhythm.com
	
	* CHanged the arguments so that the last arg can be the
	input file. If this last arg is not present, the lexer will
	use stdin

	* rm print outs that was generated when reading the data file.

Tue Mar 21 09:44:35 PST 2000 caro@rhythm.com

	* in do_op_three for the case of OP_EQUAL, it
	was using the CHAN_MULT_STR instead of
	ROUND_STR

Mon Mar 20 17:04:58 PST 2000 caro@rhythm.com
	
	* changed the lexer and the parser so that it will
	handle vectorchan that maybe has alpha.

	* i have updated the way codegen handles its data file
	so that it will read the file correctly

	* all the global char * varibles have now _STR at their end

	* the lexer has now a special state to read data files. the data
	file is processed by the lexer and parser.

Sat Mar 18 18:56:30 EST 2000 calvinw@mindspring.com

	* testgeglfile.c - more improvements.   Added back the tests for 
          the composite ops and the other point ops. 

Sat Mar 18 12:31:14 EST 2000 calvinw@mindspring.com

	* testgeglfile.c - some fixes and simplificatons. It
          was reading r,g,b,a in the wrong order, so it displays 
          correctly now. 

	* testgeglfile.c - command line args are just two equal 
          size RGBA source tiffs now: 
          >testgeglfile src1.tiff src2.tiff       

        * testgeglfile.c - removed extraneous iterator code, and so 
          dont really need get_current_rect in gegl-image-iterator constructor. 
          (However, the iterator class will need more design work for sure.) 

2000-03-16  Jay Cox  <jaycox@earthlink.net>

	* gegl/gegl-image-iterator.gob: call get_current_rect in the
	constructor so that the scanline_data is initialized properly.
	* gegl/testgeglfile.c: Optomized and fixed a bug in display_image.

Thu Mar 16 16:04:32 PST 2000 caro@rhythm.com
	
	* added error messages.

Thu Mar 16 15:55:18 PST 2000 caro@rhythm.com

	* This is for codegen

	* I updated the README

	* Made the token indent in lexer.l take \t

Thu Mar 16 12:09:30 PST 2000 caro@rhythm.com

	* This check in is for codegen
	* I have created a new structre called token_t and some new tokens 
	(COMPARE, MIN_MAX, ADD_SUB). These to new additions have allowed me to
	remove all the specific tokens for ==,!=,<,>,<=,>=,&,&&,|,||,MIN,MAX,++,--.
	The grammer look for the new tokens which is assoicated with the new struct
	so the grammar knows what to print. 
	* Fixed how parser.y reads the data file.
	
Wed Mar 15 16:51:50 PST 2000 caro@rhythm.com

	* fixed bugs

Wed Mar 15 15:11:35 PST 2000 caro@rhythm.com
	
	* fixed bugs

Wed Mar 15 14:44:05 PST 2000 caro@rhythm.com

	* I have added the data files UINT8 and UINT16

	* I have changed the names of the GLOBAL varibles.

Wed Mar 15 10:30:38 PST 2000 caro@rhythm.com

	* to run codegen type
	> codegen --channel-data-file CHANNEL_FILE_NAME --channel-names name,name,name
	For channel names it assumes that the last name is the alpha. If there is only
	one name it assumes that this one is alpha. 
	 
Tue Mar 14 17:51:45 PST 2000 caro@rhythm.com

	* codegen now takes a file, I have added an example file called FLOAT

Tue Mar 14 14:23:29 PST 2000 caro@rhythm.com

	* fixed problem

	* to run codegen now type
	codegen datatype(FLOAT, UINT8, UINT16) nameofcolorchannels(red green blue alpha)
Tue Mar 14 11:47:10 PST 2000 caro@rhythm.com

	* fixed stuff

Tue Mar 14 10:25:59 PST 2000 caro@rhythm.com
	
	* More changes, rm-ed the ability of adding {} cuz
	it did not work quite right. At this point it is
	necessary to have {}

	* CODEGEN has now become GENERIC_IMAGE 

Mon Mar 13 14:28:43 PST 2000 caro@rhythm.com
	
	* This version will add {} when ever it is necessary.

Mon Mar 13 11:10:23 PST 2000 caro@rhythm.com
	
	* rm-ed codegen ability to deal with gint, gchar ...

	* fixed a _alpha problem.

Wed Mar  8 18:29:46 PST 2000 caro@rhythm.com

	* final check in for the day. fixed bugs.

Wed Mar  8 17:50:48 PST 2000 caro@rhythm.com

	* fixed bugs, what a day.

Wed Mar  8 16:49:34 PST 2000 caro@rhythm.com

	* added test_files for codegen and fixed and improved codegen.
`
Wed Mar  8 13:08:59 PST 2000 caro@rhythm.com
	
	* fixed bugs in codegen

Wed Mar  8 12:06:15 PST 2000 caro@rhythm.com

	* updated README for codegen and fixed a bug.

Wed Mar  8 11:30:51 PST 2000 caro@rhythm.com
	
	* CHange the way it handled chan, floatchan, int, and float.
	Hopefully it should work much better now.

Tue Mar  7 15:03:42 PST 2000 caro@rhythm.com
	
	* This version will now parse files that have the
	syntaxed described on Calvin's webpages.

	* I have introduced the varible ZERO

Mon Mar  6 12:22:44 PST 2000 caro@rhythm.com

	* started to add the INIT_PIXEL_DATA

	* extra varibles are added

Fri Mar  3 19:02:36 PST 2000 caro@rhythm.com
	
	* made more changes to codegen, there are now states
	in the lexer. 

Thu Mar  2 15:30:18 PST 2000 caro@rhythm.com
	
	* fixed codegen, I am checking in before a big
	change

Wed Mar  1 16:59:12 PST 2000 caro@rhythm.com
	
	* Added a tools dir that currently contain a 
	program that takes an input files and substitute 
	all the tabs with 8 spaces.

	* Passes all the .gob files through the program I mention above.
	This will hopefully rm the weired format that one sees on the
	gnome site.

	* Made some more changes to codegen, look in the README for more
	specific information

Tue Feb 29 19:33:03 PST 2000 caro@rhythm.com
	
	* Made more modifications to codegen, I am not
	able to parse .gob files. Look at test_files/test5

	* Look in README for more updates

	* Added test_files/test5 

Mon Feb 28 14:03:29 PST 2000 caro@rhythm.com
	
	* A lot of modifications and new stuff.
	
	* I have added VectorChan
	
	* Changed the indent

	* added descriptions in the readme

	* changed test files

Wed Feb 23 19:25:25 PST 2000 caro@rhythm.com
	
	* Cleaned up codegen code
	
	* started to implement different kinds of Channels

Wed Feb 23 17:45:55 PST 2000 caro@rhythm.com
	
	* Rm-ed compile errors
	
	* Added more parse functionality

	* included a dir with test files

Wed Feb 23 12:13:42 EST 2000 calvinw@mindspring.com

	* Cleaned up the initial codegen import.  


Tue Feb 22 16:26:59 PST 2000 caro@rhythm.com

	* Initial check in of codegen dir

	* This hopefully will become a parser that will 
	create data type specific code from generic code.


Fri Feb 18 12:48:30 PST 2000 calvinw@mindspring.com

        * Added CompositePremultOp ,SingleSrcOp class

	* Updated the algorithms in CompositeOp ,CompositePremultOp
	PremultOp, UnpremultOp.

	* Made all the appropriate Ops subclasses of SingleSrcOp
	or DualSrcOp
  
Feb 11 18:24:50 EST 2000 calvinw@mindspring.com

	* removed the Iterator type routines from ImageBuffer. 
  
	* updated testgeglfile to use these new routines. 

Fri Feb 11 17:38:13 EST 2000 calvinw@mindspring.com

	* rm gegl-chancopy-op.gob (renamed it)

	* added these files: 
	  gegl-copy-chan-op.gob
	  gegl-dual-src-op.gob
	  gegl-image-iterator.gob

	* updated all the ops to use the ImageIterator class

	* updated README to say use gob-0.92.3 

	* updated the generic algorithms for: 
	  gegl-add-op.gob
	  gegl-dark-op.gob
	  gegl-diff-op.gob
	  gegl-light-op.gob
	  gegl-max-op.gob
	  gegl-min-op.gob
	  gegl-mult-op.gob
	  gegl-screen-op.gob
	  gegl-subtract-op.gob

	* lots of little cleanups in most op classes 
	

Tue Feb  8 16:08:54 PST 2000 caro@rhythm.com

	* added gegl-chancopy-op.gegl and gegl-add-op.gegl
	
	* fixed warnings 


	* added gegl-chancopy-op.gegl and gegl-add-op.gegl
	
	* fixed warnings 

Tue Feb  1 16:18:41 PST 2000 caro@rhythm.com

	* added these files
		gegl-mult-op.gob
		gegl-min-op.gob
		gegl-max-op.gob
		gegl-subtract-op.gob
		gegl-diff-op.gob
		gegl-dark-op-.gob
		gegl-light-op.gob
		gegl-sceen-op.gob
	
	* rm CLAMP in gegl-type.h
	
	* Clamped the values i rounded  

	* Changed testgeglfile.c so that it tests the new functions

Mon Jan 31 17:48:34 PST 2000 caro@rhythm.com

        * fixed bugs in gegl-composite-op. It should work now.

	* tested the torgb, togray, tou8, tofloat function in
	gegl-color-model. They seem to work fine.

Mon Jan 31 14:11:17 EST 2000 calvinw@mindspring.com

	*fixed bugs in destroy methods of all convert-ops:  
         gegl-color-convert-to-rgb-float-op.gob
         gegl-color-convert-to-rgb-u8-op.gob
         gegl-color-convert-to-gray-float-op.gob
         gegl-color-convert-to-gray-u8-op.gob
         gegl-color-convert-connection-op.gob

	*updated the PrintOp and FillOp to handle u8 and gray cases. 

	*updated testgegl to test the color conversion routines. 

Sun Jan 30 16:03:20 EST 2000 calvinw@mindspring.com

	*added ColorConvertConnectionOp class  
	 which handles conversion through an xyz float space

	*updated all the convert ops to call to_float, to_u8, to_gray, 
	 to_rgb routines of the appropriate color model classes. 

	*cleaned up some in the ColorModel classes. 

	*added a color model maker routine to gegl-utils.c 
         (need a factory thing). 

Sat Jan 29 15:29:38 PST 2000 caro@rhythm.com

	* added to_float, to_u8, to_gray, to_rgb
	to color_model classes.

	* changed to_xyz, from_xyz in color_model
	so that it takes now a float** arg instead of a float*

Fri Jan 28 16:37:57 PST 2000 Manish Singh <yosh@gimp.org>

	* configure.in: autodetect gob and error out if not there

	* Makefile.am: revamp the build process to automatically care for
	gob stuff

	* reformatted the ChangeLog to be consistent with other projects

Fri Jan 28 18:42:26 EST 2000 calvinw@mindspring.com

	* Added the gegl-color-convert-op.gob 
	* Added the gegl-color-convert-to-rgb-float-op.gob 
	* Added the gegl-color-convert-to-rgb-u8-op.gob 
	* Added the gegl-color-convert-to-gray-float-op.gob 
	* Added the gegl-color-convert-to-gray-u8-op.gob 
	* removed gegl-convert-rgb-op.gob
	* removed gegl-convert-gray-op.gob

Fri Jan 28 14:12:37 PST 2000 caro@rhythm.com
	
	* Simplified the gegl-composite-op.pregob

Thu Jan 27 13:05:25 PST 2000 caro@rhythm.com

	* Changed varible names in gegl-composite-op

	* Created a gegl-composite-op.pregob

Wed Jan 26 14:05:54 PST 2000 caro@rhythm.com

	* Fixed some bugs in gegl-color_model-gray
	  and gegl-convert-rgb/gray-op 

Wed Jan 26 13:42:07 PST 2000 caro@rhythm.com

	* Forgot to add gegl-convert-gray.gob

Wed Jan 26 13:03:51 PST 2000  caro@rhythm.com

	* Fixed some bugs in gegl-composite-op.gob

	* Added gegl-color-model-gray, gegl-color-model-gray-float
	  gegl-color-model-gray-u8

	* Added some function to take care of most of the cases in
	  gegl-composite-op.gobi for unpremult and premult with or
	  without alpha

	* Added suport for the color_models to convert from and to
	  XYZ space.

Tue Jan 25 10:51:05 EST 2000 calvinw@mindspring.com

	* More details for GeglDrawable class.  

	* Fixed a bunch of gegl_destroys to be correct.

	* Straightened out some of the forward header problems
	  by updating to gob-0.92.2. No gob patch is necessary
	  now.

Mon Jan 24 11:27:03 EST 2000  calvinw@mindspring.com

	* Fixed the GOB_PUBLIC_HEADER in Makefile.am for
	  gegl-composite-op.h gegl-premult-op.h gegl-unpremult-op.h

	* Fixed some of set_color for GeglColorModelRgbU8.
	  channels[i].u8 is how to get 8bit version of a GeglColor.

	* Use guint8 not guchar for 8bit data type code.

	* Added more to GeglDrawable class.

Sun Jan 23 13:13:18 EST 2000  calvinw@mindspring.com 
	
	* added caros testgeglfile --which opens 2 tiffs
	  to test the composite ops. 

	* made a bunch of code more readable. 

Fri Jan 21 17:59:49 PST 2000  caro@rhythm.com

	* added some U8 support
	* implemented part of convert, composite ops

Thu Jan 20 09:20:48 PST 2000  calvinw@mindspring.com  

	* initial import  

	* The following classes have initial versions:

	  GeglObject -- base class for gegl classes  
	  GeglOp -- class for operators  
	  GeglPointOp  -- operators that only need (x,y) to compute pixel (x,y)
	  GeglFillOp -- fills images with a color
	  GeglPrintOp -- prints out the pixel values of an image (floats only now)
	  GeglImageBuffers -- buffers for image data and pointers to data 
	  GeglColorModel -- ColorSpace, color channels, alpha info, data type 
	  GeglColorModelRgb -- subclass of RGB color models
	  GeglColorModelRgbFloat -- floating pt channels RGB color model 
	  GeglColor -- stores channels for a single color 

	* There is a small test program -- testgegl
