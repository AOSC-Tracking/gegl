                 ⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽
                 GEGL - an image processing framework
                 ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺

GEGL only has released development snapshots thus far. Odd micro versions are
from SVN whilst even micro numbers indicate released snapshots.

Changes in GEGL 0.0.17
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 • Configuration both from commandline arguments and at runtime.
 • GeglBuffer
   • Transparently sharable across processes.
   • Fileformat compatible with swap format.
   • Tunable cache size.
 • Operations
   • Optimized iteration over buffer in pointer filters when possible using a
     scan iterator.
   • Handle variant implementations of GeglOperations.
   • Optimized variants of some point and compositing operations reimplemented
     using a new data type /g4float/ that allows writing cpu agnostic vectorized
     code for GCC.
   • New operations: write-buffer, v4l, color-temperature.

Contributions from:
  Øyvind Kolås, Kevin Cozens, Sven Neumann, Manish Singh, Martin Nordholts,
  Étienne Bersac, Hans Petter Jansson, Jan Heller, dmacs@netspace.org and
  Sven Anders.

Changes in GEGL 0.0.16
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 • Install headers for development of external operation plug-ins.
 • Added rowstride argument to gegl_buffer_set ()
 • Made it possible for sink operations to do chunkwise processing
   through GeglProcessor.
   when processed using a GeglProcessor.
 • constification of GeglRectangles and babl formats.
 • Build and dist fixes, plugged annoying buffer leaks, GEGL now
   also works on OSX

Contributions from:
  Øyvind Kolås, Étienne Bersac, Kevin Cozens, Sven Neumann,
  Manish Singh, Michael Natterer, Hans Brauer, Deji Akingunola,
  Bradley Broom and Tor Lillqvist.

Changes in GEGL 0.0.14
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 • Relicensed under LGPLv3+.
 • Per node caches (faster recomputation when properties of nodes in
   composition change)
 • Sampler framwork for interpolation.
 • Modified API for retrieving scaled buffers gegl_node_blit / gegl_buffer_get.
 • Renamed XML serialization and parsing API to be descendants of GeglNode.
 • Progress monitoring for GeglProcessor
 • New operation base class GeglOperationAreaFilter
 • API reference installed and browsable using devhelp.
 • New operations: ff-load, mono-mixer, contrast-curve, save-pixbuf,
   compositing ops from SVG-1.2 draft, value-invert, convert-format,
   bilateral-filter, snn-mean

Contributions from:
  Étienne Bersac, Kevin Cozens, Manish Singh, Mark Probst, Martin Nordholts,
  Michael Schumacher, Mukund Sivaraman, Shlomi Fish, Tor Lillqvist and
  Øyvind Kolås


Changes in GEGL 0.0.12
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 • Swapping out of image pyramid.
 • Speedups to text rendering.
 • GEGL compiles on win32
 • GEGL_SWAP now specifies swapdir location.
 • Small refactorings of public API.
 • Changed the XML parser/serializer to not use attributes for node properties.
 • Improvements to documentation.
 • Automagic build environment for operations simplified.
 • Internal API for saving/loading GeglBuffers to/from disk.
 • Ruby, C# and Python bindings added to version control system
   (not included in distributed tarball)

Contributions from:

Kevin Cozens, Michael Schumacher. Sven Neumann and Øyvind Kolås,

Changes in GEGL 0.0.8
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
The GEGL 0.0.8 release tarball didn't build properly and was removed, the
0.0.10 release replaces the 0.0.8 release.


Changes in GEGL 0.0.6
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 • hit detection code
 • handling of relative/absolute path names for XML.
 • merged GeglNode and GeglGraph classes.
 • build fixes for Win32 and FreeBSD
 • temporary disabled custom cairo in test application.
 • png and EXR improvements.

Contributions from:
  Dominik Ernst, Kevin Cozens, Øyvind Kolås, Michael Schumacher and Øyvind Kolås.


Changes in GEGL 0.0.4
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
This was the first public release of GEGL.

 • 8bit, 16bit integer and 32bit floating point, RGB, CIE Lab, YCbCr and naive
  CMYK output.
 • Extendable through plug-ins.
 • XML, C and Python interfaces.
 • Memory efficient evaluation of subregions.
 • Tiled, sparse, pyramidial and larger than RAM buffers.
 • Rich core set of processing operations
    • PNG, JPEG, SVG, EXR, RAW and other image sources.
    • Arithmetic operations, porter duff compositing operations, SVG blend
      modes, other blend modes, apply mask.
      • Gaussian blur.
      • Basic color correction tools.
      • Most processing done with High Dynamic Range routines.
      • Text layouting using pango

Contributions from:
  Dominik Ernst, Kevin Cozens, Manish Singh, Martin Nordholts, Michael Natterer.
  Philip Lafleur, Sven Neumann and Øyvind Kolås.

Changes in GEGL 0.0.x
⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
Contributions from:
  Calvin Williamson, Caroline Dahloff Daniel Rogers, Garry R. Osgood, Jay Cox
  and Sven Neumann,

