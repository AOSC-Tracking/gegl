GENERIC_IMAGE_DECL_BEGIN
int i;
float f;
Chan a; 
VectorChan d(color,alpha,has_alpha);
VectorChan s(color,alpha,has_alpha);
VectorChan s1(color,alpha), s2(color,alpha);
VectorChan s3(color,alpha,has_alpha); /*a comment*/

GENERIC_IMAGE_DECL_END

GENERIC_IMAGE_IMAGE_DATA_INIT

/* d = s1 * s2 * s3; */
GENERIC_IMAGE_BLOCK_BEGIN
d = s1 * (s2 * s3);
GENERIC_IMAGE_BLOCK_END

/* d = WP - ((WP - s1) * (WP - s2)); */
GENERIC_IMAGE_BLOCK_BEGIN
d = WP - ((WP - s1) * (WP - s2));
GENERIC_IMAGE_BLOCK_END

/* 
dX(d,1);
dX(s,1);
dX(s1,1);
dX(s2,2);
dX(s3,3);
*/
GENERIC_IMAGE_BLOCK_BEGIN
dX(d,1);
dX(s,1);
dX(s1,1);
dX(s2,2);
dX(s3,3);
GENERIC_IMAGE_BLOCK_END

/* d = s1 * s2 + s3; */
GENERIC_IMAGE_BLOCK_BEGIN
d = s1 * s2 + s3;
GENERIC_IMAGE_BLOCK_END
