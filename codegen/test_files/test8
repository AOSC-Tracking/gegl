private
void
COLORSPACEa_op_COLORSPACE_DATATYPE (GeglPointOp *point_op)
{
    GeglCompositePremultOp * self = GEGL_COMPOSITE_PREMULT_OP (point_op);
    GeglPointOpPrivate *point_opP = (GeglPointOpPrivate *)(point_op->_priv); 

    GENERIC_IMAGE_DECL_BEGIN
    VectorChan dest(color);
    VectorChan src1(color,alpha,has_alpha);
    VectorChan src2(color,alpha);
    Chan a;
    GENERIC_IMAGE_DECL_END

    guint width = point_opP->scanline_width;

    gegl_image_iterator_get_scanline_data ( 
                      point_opP->iterators[0], 
                      (guchar**)dest_data);
    gegl_image_iterator_get_scanline_data ( 
                      point_opP->iterators[1],
                      (guchar**)src1_data);
    gegl_image_iterator_get_scanline_data ( 
                      point_opP->iterators[2],
                      (guchar**)src2_data); 

    GENERIC_IMAGE_IMAGE_DATA_INIT

     GENERIC_IMAGE_BLOCK_BEGIN
     dest = src2_color;

     dX(dest,1);
     dX(src2,1);
     GENERIC_IMAGE_BLOCK_END
}
