/* fldskjflksjd sdfjlskfjlsdkfjdslkjfsldkfjdlskf */
Chan a ;
 VectorChan s1(_c_,_a_), s2(_c_,_a_), d(_c_,_a_); /*ljfldkjfdl*/ 
  d = s1 * s2;
 VectorChan s(_c_,_a_), d(_c_,_a_); 
 d = CHAN_CLAMP(5 * s);
 VectorChan d(_c_,_a_), s1(_c_,_a_), s2(_c_,_a_), s3(_c_,_a_); 
 d = (s1 + s2 + s3)/3;
 VectorChan d(_c_,_a_), s1(_c_,_a_), s2(_c_,_a_), s(_c_,_a_);
 d = s * s1 + (WP-s) * s2;
 VectorChan d(_c_,_a_), s1(_c_,_a_), s2(_c_,_a_), s3(_c_,_a_);
 d = CHAN_CLAMP(s1 * s2 + s3);
 VectorChan d(_c_,_a_), s1(_c_,_a_), s2(_c_,_a_), s3(_c_,_a_); 
 d = .333 * (s1 + s2 + s3); 
 VectorChan dest(_c_,_a_);
 VectorChan src1(_c_,_a_);
 VectorChan src2(_c_,_a_);
 dest = WP - ((WP - src1) * (WP - src2));
 dest = MAX(src1, src2);
 dest = MIN(src1, src2);
 dest = MAX(src1, src2);
 dest = src1 * src2;
 dest = CHAN_CLAMP(src1 - src2);
 dest = ABS(src1 - src2);
 dest = MIN(src1, src2);
 dest = CHAN_CLAMP(src1 + src2);
 dest_a = CHAN_CLAMP(src1_a + src2_a);
 dest = dest_a * dest; 
 VectorChan c(_c_,_a_);
 FloatChan f;
 c_c = c_c * c_c;
 f = f * f;
 c_c = c_c * f;
 c_c = c_c / c_c;
 f = f / f;
 c = f / c;
 c = c / f;
 c = 5.0 * c;
 c = 5 * c;
 f = 5.0 * f;
 f = 5.0 * f;
 c = c / 5.0;
 c_c = c_c / 5.0; 
 c_c = c_c / 5;
 c_c = c_c + c_c;
 f = f + c_a;
 c_c = c_c + f;
 c_c = c_c;
 c_c = f;
/* test vectors */
 VectorChan g[4], h[2];
 g = c;
 g = h;



