README
======

This is a program that parses a file with generic code (not data type specific) and creates a file with data type specific code. 

To run the program type:
codegen [data type] [color space] < input file > output file

	[data type] 	The current options are FLOAT, UINT8, and  UINT16.
	[color space]	This is a string of characters, the program assumes that each
			character is a channel. For example if you typed rgb, it would assume
			that there are 3 color channels names r, g, and b. The alpha channel is
			assumed. 
	input file  	The are various files in the dir test_files 


We have various key words that represent data types. We have Chan, FloatChan, and VectorChan. Chan and VectorChan are the same data type as the passed in data type and FloatChan is a float.

VectorChan can be defined as a normal vector (VectorChan a[some int]), a color vector with out alpha (VectorChan v(_c_)), or a color vector with alpha (VectorChan v(_c_,_a_)). 

To refer to only the color part of a color vector, one type vector_name_c, and to refer to the alpha part one type vector_name_a.

Anything that is between /*codegen_copy codegen_copy*/ gets copied. Inside /*codegen_copy codegen_copy*/ the keyword CHAN gets substituted with the data type and the keyword HUE gets substitued with color space.
 
Caroline Dahllof <caro@rhythm.com>

