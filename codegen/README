README
======

Codegen parses a single generic image language program as
described in:

gegl/docs/genericImageLanguage.html 
gegl/docs/genericChannelData.html
 
To run the program:

>codegen --channel-names COLOR_CHANNEL_NAMES  --channel-data-file CHANNEL_DATA_FILE 
 

CHANNEL_DATA_FILE: a file that contains the data type
specific information (see genericImageLanguage.html) . See
gegl/codegen/channel_data for the examples
u8,u16,u16_4k,float.

COLOR_CHANNEL_NAMES: a list of the color channel names. The
names are comma-separated with no spaces.

Codegen is built from 4 files: 

1)lexer.l 
2)parser.y 
3)common.h
4)data_type.h

The over all flow of the program goes like this: parser.y
contains the main of the program and starts by parsing the
command line. It will read the channel-data-file, and
initialize all the varibles in data_type.h with the read
values. It will also parse the channel-names and set
NUM_COLOR_CHAN and NAME_COLOR_CHAN from these. It then calls
yyparse.

lexer.l has 8 states: 

1)the initial state 
2)GENERIC_IMAGE_DECL 
3)GENERIC_IMAGE_BLOCK 
4)COMMENT 
5)DATA_TYPE
6)ARGUMENTS
7)DEFINITION
8)EXTERNAL_INIT

inital state ---------DATATYPE_BEGIN-------------> DATA_TYPE
inital state ---------GENERIC_IMAGE_DECL_BEGIN---> GENERIC_IMAGE_DECL
inital state ---------GENERIC_IMAGE_BLOCK_BEGIN--> GENERIC_IMAGE_BLOCK
DATA_TYPE ------------DATATYPE_END---------------> inital state 
GENERIC_IMAGE_DECL ---GENERIC_IMAGE_DECL_END-----> inital state
GENERIC_IMAGE_BLOCK---GENERIC_IMAGE_BLOCK_END----> inital state
GENERIC_IMAGE_BLOCK---EXTERNAL_INIT--------------> EXTERNAL_VARIABLE
EXTERNAL_VARIABLE ----)--------------------------> GENERIC_IMAGE_BLOCK


DATA_TYPE ------------dt_keyword.arg == 0 -------> DEFINITION
DATA_TYPE ------------dt_keyword.arg == 1 -------> ARGUMENTS
ARGUMENTS ---------------------------------------> DEFINITION
DEFINITION --------------------------------------> DATA_TYPE  

GENERIC_IMAGE_DECL ---/*-->COMMENT--*/-->GENERIC_IMAGE_DECL
GENERIC_IMAGE_BLOCK --/*-->COMMENT--*/-->GENERIC_IMAGE_BLOCK

===
 
Caroline Dahllof <caro@rhythm.com>
