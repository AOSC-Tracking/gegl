<!-- This is used to generate the online TODO list for GEGL using
     the script docs/make-todo. Whenever a change to this file is
     committed to CVS,the file is run through make-todo and the online
     version updated. If you modify this file, you should check for
     parse errors by running:

     $ docs/make-todo TODO.xml > /dev/null

     before committing, or you may screw up the online version.--> 
<todo logourl="gegl.jpg">
  <title>Gegl Task list</title>
  <section>
    <title>Gegl Architecture</title>

    <entry size="small" status="0%" target="0.0">
      <title>GeglGraph Inputs to Interior Node Inputs</title>
      <description>
        <p>
GeglGraph needs a better method for specifying the correspondence
of inputs of interior nodes to the inputs of the Graph. Right
now these are set up in an initial traversal of the Graph when
the root is set. 
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Masks for Image Op</title>
      <description>
        <p> 
Add an input to image op which represents an mask for the area
affected by the operation.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>In-place Buffers</title>
      <description>
        <p> 
Work out a scheme for passing in-place image buffers along the ops.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Automatic Image Data Conversions</title>
      <description>
        <p>
Currently Scalar Data, Pixel Data as well as Channel Data can all
be converted. Need to add Image Data conversions.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>More Data Types</title>
      <description>
        <p>
Currently have Scalar Data, Pixel Data, Channel Data, and Image Data as 
Data types that can be passed along ops. May want to pass Vector Data (
vectors of pixels, vectors of scalars) or Matrix Data along as well. 
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Additional Image Iterators</title>
      <description>
        <p>
Need to create more image iterator details. Right now there is a
ImageIterator class which is basically a iterator over scanlines of
a portion of the image(ie. a tile). Need to provide iterators that
can request other shaped areas for work. 
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Additional ColorSpaces and ColorModels</title>
      <description>
        <p>
Need to fill out details of more of the color models, and the
corresponding color conversion ops. Also complete a color model
"promotion" and conversion scheme for use when doing automatic
color conversion. ie if inputs to some 2-input op are rgb u8 and
cmyk u8 then the output is rgb u8.
        </p>
        <ul>
            Possible color models: 
            <li> GeglColorModelIndexed </li>
            <li> GeglColorModelCmyk </li>
            <li> GeglColorModelCieXyz </li>
            <li> GeglColorModelsRgb </li>
            <li> GeglColorModelHsv </li>
            <li> GeglColorModelLab </li>
            <li> GeglColorModelMultiChannel </li>             
        </ul>
        <p>
Some ICC profile based color models would be nice. This would allow
adding more detailed color management support. 
        </p>
      </description>
      <contact>&lt;gegl-developer@lists.xcf.berkeley.edu&gt;</contact>
    </entry>

    <entry size="big" status="0%" target="0.0">
      <title>Memory, Cache Manager</title>
      <description>
        <p>
Memory management classes in the form of cache with swappable
pages.  This will mean data buffers will be requested from a cache
manager, and we need schemes (ref counting, etc) for deciding what
to swap out.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="big" status="0%" target="0.0">
      <title>Multi-Threading Support</title>
      <description>
        <p>
Basic multi-threading support and scheduler/task management. This
should be added in the EvalMgr, which is the appropriate place for
these. Probably a work-pile scheme with a task manager doling out
different roi pieces of the image to work on. 
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

  </section> <!-- Gegl -->

  <section>

    <title>Ops</title>

    <entry size="medium" status="0%" target="0.0">
      <title>Color Conversion Ops</title>
      <description>
        <p> 
There are color conversions included in the color space classes, but
there are no conversion ops that use these conversions yet.  
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Copy Op</title>
      <description>
        <p> 
Add a copy op, that just copies from input to output.  
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>Area Op</title>
      <description>
        <p>
Area operations base class. This class requests contiguous regions
from of the image for doing area-based operations. Will need to
cobble together tiles if the available tiles dont match the
requested ones. 
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="medium" status="0%" target="0.0">
      <title>SwitchOp, RoiOp, Non Image Producing Ops.</title>
      <description>
        <p> 
This item is for creating more non-image producing ops. For example
switch op would pick one of its inputs and pass its data along.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

    <entry size="big" status="20%" target="0.0">
      <title>More Blend Ops</title>
      <description>
        <p> 
Assume (A,aA) (B,aB) (C,aC) all premultiplied. Blend ops use the 
formula C = (1-aB)*A + (1-aA)*B + aA*aB*f(A/aA,B/aB). 
For example, when f(x,y) = x*y, you get C = (1-aB)*A + (1-aA)*B + A*B
and aC = aB + aC - aB*aC. Need to finish at least Normal, Compatible,
Multiply, Screen, Overlay, SoftLight, HardLight, ColorDodge, ColorBurn, Darken,
Lighten, Difference, Exclusion modes.
        </p>
      </description>
      <contact>&lt;gegldev@gegl.org&gt;</contact>
    </entry>

  </section> <!-- Ops -->

</todo>
