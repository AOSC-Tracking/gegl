dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.54)

AC_INIT(gegl/gegl-add.c)

GLIB_REQUIRED_VERSION=2.6.4

dnl ==========================================================================
dnl                              Versioning              
dnl ==========================================================================

dnl Making releases:
dnl   GEGL_MICRO_VERSION += 1;
dnl   GEGL_INTERFACE_AGE += 1;
dnl   GEGL_BINARY_AGE += 1;
dnl if any functions have been added, set GEGL_INTERFACE_AGE to 0.
dnl if backwards compatibility has been broken,
dnl set GEGL_BINARY_AGE _and_ GEGL_INTERFACE_AGE to 0.

dnl The triplet 
GEGL_MAJOR_VERSION=0
GEGL_MINOR_VERSION=0
GEGL_MICRO_VERSION=2
GEGL_VERSION=$GEGL_MAJOR_VERSION.$GEGL_MINOR_VERSION.$GEGL_MICRO_VERSION

dnl The X.Y in -lgegl-X.Y line. This is expected to stay 1.0 until Gegl 2.
GEGL_API_VERSION=1.0

dnl Number of releases since we've added interfaces
GEGL_INTERFACE_AGE=0
GEGL_BINARY_AGE=0

AC_SUBST(GEGL_MAJOR_VERSION)
AC_SUBST(GEGL_MINOR_VERSION)
AC_SUBST(GEGL_VERSION)
AC_SUBST(GEGL_API_VERSION)
AC_SUBST(GEGL_MICRO_VERSION)
AC_SUBST(GEGL_INTERFACE_AGE)
AC_SUBST(GEGL_BINARY_AGE)

dnl libtool versioning
LT_CURRENT=`expr 100 '*' $GEGL_MINOR_VERSION + $GEGL_MICRO_VERSION - $GEGL_INTERFACE_AGE`
LT_REVISION=$GEGL_INTERFACE_AGE
LT_AGE=`expr $GEGL_BINARY_AGE - $GEGL_INTERFACE_AGE`
LT_VERSION_INFO="$lt_current:$lt_revision:$lt_age"
LT_CURRENT_MINUS_AGE=`expr $lt_current - $lt_age`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_VERSION_INFO)
AC_SUBST(LT_CURRENT_MINUS_AGE)

dnl ==========================================================================

AM_INIT_AUTOMAKE(gegl,$GEGL_VERSION)

AC_PROG_CC
AM_PROG_LIBTOOL
AC_PROG_YACC
AM_PROG_LEX

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_gegl_aclocal_flags,[
   ac_cv_gegl_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_gegl_aclocal_flags"

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

GLIB_PACKAGES="gobject-2.0 gmodule-2.0"
AC_SUBST(GLIB_PACKAGES)

dnl This PATH_GLIB is somewhat redundant, but does a sanity compile and 
dnl importantly defines the GLIB_GENMARSHAL variable for subst into the
dnl Makefile
AM_PATH_GLIB_2_0($GLIB_REQUIRED_VERSION, :,
  AC_MSG_ERROR([
*** GLIB $GLIB_REQUIRED_VERSION or better is required. The latest version of 
*** GLIB is always available from ftp://ftp.gtk.org/.]),
  gobject gmodule)

PKG_CHECK_MODULES(DEP, glib-2.0 >= $GLIB_REQUIRED_VERSION $GLIB_PACKAGES, , AC_MSG_ERROR([
        *** GLib not found. You can find it on ftp://ftp.gtk.org
        *** Errors follow:
            $DEP_PKG_ERRORS]))

# Rerun PKG_CONFIG to add gthread-2.0 cflags, but not libs
DEP_CFLAGS=`$PKG_CONFIG --cflags $GLIB_PACKAGES gthread-2.0`

gtk_doc_min_version=0.10
AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    IFS="${IFS=		}"; gegl_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
	cur=$1; shift
	if test -z $min ; then break; fi
	if test -z $cur ; then GTKDOC=false; break; fi
	if test $cur -gt $min ; then break ; fi
	if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gegl_save_IFS"

    if $GTKDOC ; then
	AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

gegltargetlib=libgegl-$GEGL_API_VERSION.la

AC_SUBST(gegltargetlib)

AC_MSG_CHECKING(whether make is GNU Make)
STRIP_BEGIN=
STRIP_END=
if $ac_make --version 2>/dev/null | grep '^GNU Make ' >/dev/null ; then
	STRIP_BEGIN='$(strip $(STRIP_DUMMY)'
	STRIP_END=')'
	AC_MSG_RESULT(yes)
else
    	AC_MSG_RESULT(no)
fi
STRIP_DUMMY=
AC_SUBST(STRIP_DUMMY)
AC_SUBST(STRIP_BEGIN)
AC_SUBST(STRIP_END)

dnl Disable the gtk-doc stuff by default to avoid Jade hassles
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        use gtk-doc to build documentation [default=no]], enable_gtk_doc="$enableval", enable_gtk_doc=no)

if test x$enable_gtk_doc = xyes ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi


######################################
# Checks for gtk-doc and docbook-tools
######################################

GTK_DOC_CHECK([1.0])

dnl NOTE: We need to use a separate automake conditional for this
dnl   	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

AC_CHECK_PROGS(PERL, perl5 perl)


################
# Check for lcms
################
 
have_lcms=no
AC_CHECK_LIB(lcms, cmsCreateProofingTransform, [
  AC_CHECK_HEADER(lcms.h,
    have_lcms=yes
    LCMS_LIBS="-llcms", [
    AC_CHECK_HEADER(lcms/lcms.h,
      have_lcms=yes
      AC_DEFINE(HAVE_LCMS_LCMS_H, 1,
        [Define to 1 if the lcms header must be included as lcms/lcms.h])
      LCMS_LIBS="-llcms")])
])
 
AC_SUBST(LCMS_LIBS)
AM_CONDITIONAL(HAVE_LCMS, test $have_lcms = yes)


AC_OUTPUT([
Makefile
gil/Makefile
gil/gil/Makefile
gil/tests/Makefile
gegl/Makefile
gegl/image/Makefile
tools/Makefile
tools/testsuite/Makefile
tests/Makefile
docs/Makefile
docs/reference/Makefile
docs/reference/gegl/Makefile
docs/reference/gegl/version.xml
gegl.pc
gegl-uninstalled.pc
])
