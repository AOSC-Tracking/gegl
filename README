.---. .--- .---. .
| __  |__  | __  |
|   | |    |   | |
`---| `--- `---| `---                                           a rough guide
=============================================================================

GEGL is a image processing library. 
GEGL is a library facilitating the creation, manipulation and processing
of DAGs, directed acyclic graphs, of image processing operations.


The graph
-----------------------------------------------------------------------------

Algorithms created with GEGL are expressed as graphs of nodes. The nodes
have associated image processing operations. A node has output and input
pads which can be connected, the generated data from one node can be used
as the input for many others.


The operations
-----------------------------------------------------------------------------

Operations are gobjects, the API to extend gegl is not frozen in any way yet
but already now it should be easy to extend GEGL with new operations.


About the processing
-----------------------------------------------------------------------------

To make GEGL process data you request a rectangular region of an node's output
pad to be rendered into a provided linear buffer, of any (supported by babl)
pixel representation.

Operation categories 
-----------------------------------------------------------------------------

All nodes in the graph are operations, when dividing the operations into
categories it is done based on what input and output pads are available
for connection to other operations.

Source
    No input pad
    One output pad
    Example: PNG loader, webcam

Filter
    One input pad
    One output pad
    Example: brightness and contrast, blur, threshold

Sink
    One input pad
    No output pad
    Example: PNG save, display

Composition
    Two or more input pads
    One output pad
    Example: porter-duff and other compositing operators, displacement map

Decomposition
    One input pad
    Two or more output pads
    Example: RGB to CIE lab conversion with decomposing (should be
    implemented with extract_L op extract_A op and extract_B op instead,
    but used here to have an example)

Core operations
    some operations might be included with the core of GEGL since GEGL itself
    depends on them being available, examples are NOP nodes, the pixel format
    conversion operation, NULL sink, and the blank buffer source. Some of these
    are hidden from the user whilst others are used for graph transformations
    prior to processing.

Base operations
    The operations guaranteed to be present in a GEGL implementation are
    considered base operations, these include the porter duff operations.
