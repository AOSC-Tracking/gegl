Webpages for Gegl (also see the docs dir): 

http://www.gegl.org

Building:

Gegl
-------------

When you type make in the top dir, the following should occur:

1)In the tools/testsuite subdir, a xUnit testing tool gets built. 

2)In the gegl subdir, regular C and header files get compiled into the gegl lib.

3)In the tests subdir, gegl unit tests get built and run, using the testsuite
tool built in step 1) above.

gil (generic image language)
-------------

This is the experimental new code generation tool.

When you type make in the gil dir, the following should occur:

1)In the gil/gil subdir, the (experimental) libgil is built.  This requires
flex/bison (or lex/yacc) installed somewhere. libgil is not used yet, but there
are some unit tests in gil/tests that show how to build simple expression
abstract syntax trees using it.

2)In gil/tests the unit tests for libgil are built and run. These use the
testsuite library built above for Gegl.

codegen
-------------

If you want use this old tool to generate code, see the file codegen/README,
there is an example of its usage there. It is disabled right now and it is
likely that early versions of gegl will not use any code generation. It will
be replaced by gil in the future.

calvinw@mindspring.com
