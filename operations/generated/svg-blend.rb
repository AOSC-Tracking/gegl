#!/usr/bin/env ruby

copyright = '
/* !!!! AUTOGENERATED FILE generated by svg.rb !!!!! 
 *
 *  Copyright 2006 Øyvind Kolås <pippin@gimp.org>
 *
 * !!!! AUTOGENERATED FILE !!!!!
 *
 */'

a = [
      ['normal',       '(1.0 - qa) * cb + ca'],
      ['svg_multiply', '(1-qa)*cb + (1-qb)*ca + ca*cb'],
      ['screen',       'cb + ca - ca * cb'],
      ['darken',       'MIN ((1 - qa) * cb + ca, (1 - qb) * ca + cb)'],
      ['lighten',      'MAX ((1 - qa) * cb + ca, (1 - qb) * ca + cb)']
    ]

a.each do
    |item|

    name     = item[0] + ''
    filename = name + '.c'

    puts "generating #{filename}"
    file = File.open(filename, 'w')

    name        = item[0]
    capitalized = name.capitalize
    swapcased   = name.swapcase
    formula     = item[1]

    file.write copyright
    file.write "
#if GEGL_CHANT_PROPERTIES
/* no properties */
#else

#define GEGL_CHANT_POINT_COMPOSER
#define GEGL_CHANT_NAME          #{name}
#define GEGL_CHANT_DESCRIPTION   \"SVG blend operation #{name} (c = #{formula})\"
#define GEGL_CHANT_CATEGORIES    \"compositors:svgfilter\"
#define GEGL_CHANT_SELF          \"#{filename}\"
#define GEGL_CHANT_INIT
#include \"gegl-chant.h\"

static void init (GeglChantOperation *self)
{
  GEGL_OPERATION_POINT_COMPOSER (self)->format = babl_format (\"RaGaBaA float\");
  GEGL_OPERATION_POINT_COMPOSER (self)->aux_format = babl_format (\"RaGaBaA float\");

}

static gboolean
process (GeglOperation *op,
          void          *in_buf,
          void          *aux_buf,
          void          *out_buf,
          glong          n_pixels)
{
  gint i;
  gfloat *in = in_buf;
  gfloat *aux = aux_buf;
  gfloat *out = out_buf;

  if (aux==NULL)
    return TRUE;

  for (i=0; i<n_pixels; i++)
    {
      int  j;
      gfloat qa, qb;

      qb=in[3];
      qa=aux[3];
      for (j=0; j<3; j++)
          {
              gfloat ca, cb;

              cb=in[j];
              ca=aux[j];
              out[j] = #{formula};
          }
      out[3] = 1 - (1-qa)*(1-qb);
      in  += 4;
      aux += 4;
      out += 4;
    }
  return TRUE;
}

#endif
"

  file.close
end
