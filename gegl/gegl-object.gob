%h{
#include <gtk/gtk.h>
#include "gegl-types.h"
%}
%{
#include "gegl-object.h"
#include "gegl-object-private.h"
%}


class Gegl:Object from Gtk:Object {

  public gboolean constructed;

  init(object)
  {
    object->constructed = FALSE;
  }

  protected
  gboolean       
  constructor(self)
  {
    return TRUE;
  }

  public
  void 
  destroy (self)
  {
    gtk_object_destroy(GTK_OBJECT(self));
  }

  public
  void 
  add_interface(GeglObject * obj, 
		const gchar* interface_name, 
		gpointer interface) 
  {
    gtk_object_set_data((GtkObject*)obj, interface_name, interface);
  }
							                    
  public
  gpointer 
  query_interface(GeglObject* obj, 
		  const gchar* interface_name)
  {       
    return gtk_object_get_data((GtkObject*)obj, interface_name);
  }
}
