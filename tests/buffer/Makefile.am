# The test program returns 'success' if all buffer tests passed
TESTS = buffer-tests-results.sh
buffer-tests-results.sh: buffer-tests-report

EXTRA_DIST = $(wildcard reference/*.buf) $(wildcard tests/*.c) buffer-tests-results.sh

# Always build buffer-test to catch compilation problems early
BUILT_SOURCES = buffer-tests.inc
noinst_PROGRAMS = buffer-test$(EXEEXT)
AM_CPPFLAGS =							\
	-I$(top_srcdir)						\
	-I$(top_srcdir)/gegl					\
	-I$(top_srcdir)/gegl/buffer				\
	-I$(top_srcdir)/gegl/property-types			\
	-I$(top_srcdir)/gegl/operation				\
	@DEP_CFLAGS@ @BABL_CFLAGS@

buffer_test_SOURCES =						\
	buffer-test.c

buffer_test_LDADD = 						\
	$(top_builddir)/gegl/libgegl-@GEGL_API_VERSION@.la	\
	@DEP_LIBS@ @BABL_LIBS@


# Our custom target rules
buffer-tests.inc: $(buffer_test_SOURCES) Makefile.am tests/*.c
	echo '/* this file is generated by the build system */' > $@
	for TEST in  `ls tests/*.c -1|sed -e s:tests/:: -e s:\\\.c::`; do \
	     echo "#define TEST() static gchar * $$TEST (void)" >> $@;\
	     echo "#include \"tests/"$$TEST".c\"" >> $@;\
	     echo "#undef TEST" >> $@;\
	done;
	echo 'typedef gchar *(*TestFunc) ();TestFunc tests[]={' >> $@
	for TEST in  `ls tests/*.c -1|sed -e s:tests/:: -e s:\\\.c::`; do \
	     echo $$TEST, >> $@;\
	done;
	echo '};' >> $@
	echo 'static gchar *test_names[]={' >> $@
	for TEST in  `ls tests/*.c -1|sed -e s:tests/:: -e s:\\\.c::`; do \
	     echo \"$$TEST\", >> $@;\
	done;
	echo '};' >> $@

buffer-tests-report: buffer-test$(EXEEXT) reference/*.buf
	-./buffer-test$(EXEEXT)
	diff -s -r -U 50 reference/ output/ > buffer-tests-report; true


# Don't forget to clean
CLEANFILES = buffer-tests.inc buffer-tests-report
